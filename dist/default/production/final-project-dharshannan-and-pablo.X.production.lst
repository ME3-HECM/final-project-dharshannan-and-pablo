

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sat Mar 11 22:28:05 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1
    67                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    68                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    69                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1
    72                           	psect	text58,global,reloc=2,class=CODE,delta=1
    73                           	psect	text59,global,reloc=2,class=CODE,delta=1
    74                           	psect	text60,global,reloc=2,class=CODE,delta=1
    75                           	psect	text61,global,reloc=2,class=CODE,delta=1
    76                           	psect	text62,global,reloc=2,class=CODE,delta=1
    77                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    78                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    79                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    80                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    81                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    82   000000                     
    83                           ; Generated 06/04/2022 GMT
    84                           ; 
    85                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    86                           ; All rights reserved.
    87                           ; 
    88                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    89                           ; 
    90                           ; Redistribution and use in source and binary forms, with or without modification, are
    91                           ; permitted provided that the following conditions are met:
    92                           ; 
    93                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    94                           ;        conditions and the following disclaimer.
    95                           ; 
    96                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    97                           ;        of conditions and the following disclaimer in the documentation and/or other
    98                           ;        materials provided with the distribution. Publication is not required when
    99                           ;        this file is used in an embedded application.
   100                           ; 
   101                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   102                           ;        software without specific prior written permission.
   103                           ; 
   104                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   105                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   106                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   107                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   108                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   109                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   110                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   111                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   112                           ; 
   113                           ; 
   114                           ; Code-generator required, PIC18F67K40 Definitions
   115                           ; 
   116                           ; SFR Addresses
   117   000000                     
   118                           	psect	idataBANK0
   119   002AA2                     __pidataBANK0:
   120                           	callstack 0
   121                           
   122                           ;initializer for _int_threshold_high
   123   002AA2  0B54               	dw	2900
   124   000000                     _T0CON0bits	set	4053
   125   000000                     _T0CON1bits	set	4054
   126   000000                     _TX4REG	set	3812
   127   000000                     _RC4STAbits	set	3815
   128   000000                     _SP4BRGH	set	3814
   129   000000                     _TRISBbits	set	3970
   130   000000                     _TRISCbits	set	3971
   131   000000                     _TRISEbits	set	3973
   132   000000                     _LATEbits	set	3965
   133   000000                     _LATFbits	set	3966
   134   000000                     _LATGbits	set	3967
   135   000000                     _TRISFbits	set	3974
   136   000000                     _TRISGbits	set	3975
   137   000000                     _SSP2CON2bits	set	3802
   138   000000                     _RX4PPS	set	3605
   139   000000                     _SSP2CLKPPS	set	3612
   140   000000                     _SSP2DATPPS	set	3613
   141   000000                     _ANSELDbits	set	3751
   142   000000                     _SSP2ADD	set	3798
   143   000000                     _SSP2CON1bits	set	3801
   144   000000                     _RC4REG	set	3811
   145   000000                     _SP4BRGL	set	3813
   146   000000                     _TX4STAbits	set	3816
   147   000000                     _BAUD4CONbits	set	3817
   148   000000                     _LATAbits	set	3961
   149   000000                     _LATDbits	set	3964
   150   000000                     _LATHbits	set	3968
   151   000000                     _TRISAbits	set	3969
   152   000000                     _SSP2CON2	set	3802
   153   000000                     _TRISDbits	set	3972
   154   000000                     _CCPR4H	set	3873
   155   000000                     _CCPR3H	set	3877
   156   000000                     _SSP2STAT	set	3800
   157   000000                     _SSP2BUF	set	3797
   158   000000                     _IPR0bits	set	3615
   159   000000                     _PIE0bits	set	3625
   160   000000                     _RC7PPS	set	3689
   161   000000                     _RD5PPS	set	3695
   162   000000                     _RE2PPS	set	3700
   163   000000                     _RD6PPS	set	3696
   164   000000                     _T2PR	set	4028
   165   000000                     _T2CONbits	set	4029
   166   000000                     _TRISHbits	set	3976
   167   000000                     _CCPR2H	set	4006
   168   000000                     _CCPR1H	set	4010
   169   000000                     _LATCbits	set	3963
   170   000000                     _RE4PPS	set	3702
   171   000000                     _RG6PPS	set	3720
   172   000000                     _ANSELBbits	set	3738
   173   000000                     _TMR0L	set	4051
   174   000000                     _TMR0H	set	4052
   175   000000                     _INTCONbits	set	4082
   176   000000                     _T2CLKCONbits	set	4031
   177   000000                     _T2HLTbits	set	4030
   178   000000                     _CCP1CONbits	set	4011
   179   000000                     _CCPTMRS0bits	set	4013
   180   000000                     _CCP2CONbits	set	4007
   181   000000                     _CCP3CONbits	set	3878
   182   000000                     _CCP4CONbits	set	3874
   183   000000                     _PIE4bits	set	3629
   184   000000                     _PIR0bits	set	3635
   185   000000                     _PIR4bits	set	3639
   186   000000                     _RC0PPS	set	3682
   187                           
   188                           ; #config settings
   189                           
   190                           	psect	cinit
   191   002762                     __pcinit:
   192                           	callstack 0
   193   002762                     start_initialization:
   194                           	callstack 0
   195   002762                     __initialization:
   196                           	callstack 0
   197                           
   198                           ; Initialize objects allocated to BANK0 (2 bytes)
   199                           ; load TBLPTR registers with __pidataBANK0
   200   002762  0EA2               	movlw	low __pidataBANK0
   201   002764  6EF6               	movwf	tblptrl,c
   202   002766  0E2A               	movlw	high __pidataBANK0
   203   002768  6EF7               	movwf	tblptrh,c
   204   00276A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   205   00276C  6EF8               	movwf	tblptru,c
   206   00276E  0009               	tblrd		*+	;fetch initializer
   207   002770  CFF5 F0D3          	movff	tablat,__pdataBANK0
   208   002774  0009               	tblrd		*+	;fetch initializer
   209   002776  CFF5 F0D4          	movff	tablat,__pdataBANK0+1
   210                           
   211                           ; Clear objects allocated to BANK1 (140 bytes)
   212   00277A  EE01  F000         	lfsr	0,__pbssBANK1
   213   00277E  0E8C               	movlw	140
   214   002780                     clear_0:
   215   002780  6AEE               	clrf	postinc0,c
   216   002782  06E8               	decf	wreg,f,c
   217   002784  E1FD               	bnz	clear_0
   218                           
   219                           ; Clear objects allocated to BANK0 (62 bytes)
   220   002786  EE00  F060         	lfsr	0,__pbssBANK0
   221   00278A  0E3E               	movlw	62
   222   00278C                     clear_1:
   223   00278C  6AEE               	clrf	postinc0,c
   224   00278E  06E8               	decf	wreg,f,c
   225   002790  E1FD               	bnz	clear_1
   226                           
   227                           ; Clear objects allocated to COMRAM (8 bytes)
   228   002792  EE00  F04F         	lfsr	0,__pbssCOMRAM
   229   002796  0E08               	movlw	8
   230   002798                     clear_2:
   231   002798  6AEE               	clrf	postinc0,c
   232   00279A  06E8               	decf	wreg,f,c
   233   00279C  E1FD               	bnz	clear_2
   234   00279E                     end_of_initialization:
   235                           	callstack 0
   236   00279E                     __end_of__initialization:
   237                           	callstack 0
   238   00279E  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   239   0027A0  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   240   0027A2  0100               	movlb	0
   241   0027A4  EF62  F008         	goto	_main	;jump to C main() function
   242                           
   243                           	psect	bssCOMRAM
   244   00004F                     __pbssCOMRAM:
   245                           	callstack 0
   246   00004F                     _int_threshold_low:
   247                           	callstack 0
   248   00004F                     	ds	2
   249   000051                     _TxBufReadCnt:
   250                           	callstack 0
   251   000051                     	ds	1
   252   000052                     _TxBufWriteCnt:
   253                           	callstack 0
   254   000052                     	ds	1
   255   000053                     _RxBufReadCnt:
   256                           	callstack 0
   257   000053                     	ds	1
   258   000054                     _RxBufWriteCnt:
   259                           	callstack 0
   260   000054                     	ds	1
   261   000055                     _color_flag:
   262                           	callstack 0
   263   000055                     	ds	1
   264   000056                     _moves_index:
   265                           	callstack 0
   266   000056                     	ds	1
   267                           
   268                           	psect	bssBANK0
   269   000060                     __pbssBANK0:
   270                           	callstack 0
   271   000060                     _EUSART4RXbuf:
   272                           	callstack 0
   273   000060                     	ds	20
   274   000074                     _tmr_ovf:
   275                           	callstack 0
   276   000074                     	ds	1
   277   000075                     _anti_moves_array:
   278                           	callstack 0
   279   000075                     	ds	40
   280   00009D                     _time_index:
   281                           	callstack 0
   282   00009D                     	ds	1
   283                           
   284                           	psect	dataBANK0
   285   0000D3                     __pdataBANK0:
   286                           	callstack 0
   287   0000D3                     _int_threshold_high:
   288                           	callstack 0
   289   0000D3                     	ds	2
   290                           
   291                           	psect	bssBANK1
   292   000100                     __pbssBANK1:
   293                           	callstack 0
   294   000100                     _EUSART4TXbuf:
   295                           	callstack 0
   296   000100                     	ds	60
   297   00013C                     _time_array:
   298                           	callstack 0
   299   00013C                     	ds	80
   300                           
   301                           	psect	cstackBANK0
   302   00009E                     __pcstackBANK0:
   303                           	callstack 0
   304   00009E                     ??___fltol:
   305                           
   306                           ; 1 bytes @ 0x0
   307   00009E                     	ds	4
   308   0000A2                     detect_color@tempval:
   309                           	callstack 0
   310                           
   311                           ; 2 bytes @ 0x4
   312   0000A2                     	ds	2
   313   0000A4                     ??_detect_color:
   314                           
   315                           ; 1 bytes @ 0x6
   316   0000A4                     	ds	12
   317   0000B0                     detect_color@color:
   318                           	callstack 0
   319                           
   320                           ; 1 bytes @ 0x12
   321   0000B0                     	ds	1
   322   0000B1                     detect_color@dist_R:
   323                           	callstack 0
   324                           
   325                           ; 1 bytes @ 0x13
   326   0000B1                     	ds	1
   327   0000B2                     detect_color@dist_G:
   328                           	callstack 0
   329                           
   330                           ; 1 bytes @ 0x14
   331   0000B2                     	ds	1
   332   0000B3                     detect_color@dist_B:
   333                           	callstack 0
   334                           
   335                           ; 1 bytes @ 0x15
   336   0000B3                     	ds	1
   337   0000B4                     ??_main:
   338                           
   339                           ; 1 bytes @ 0x16
   340   0000B4                     	ds	2
   341   0000B6                     main@b:
   342                           	callstack 0
   343                           
   344                           ; 2 bytes @ 0x18
   345   0000B6                     	ds	2
   346   0000B8                     main@color_detected:
   347                           	callstack 0
   348                           
   349                           ; 1 bytes @ 0x1A
   350   0000B8                     	ds	1
   351   0000B9                     main@initial_color:
   352                           	callstack 0
   353                           
   354                           ; 8 bytes @ 0x1B
   355   0000B9                     	ds	8
   356   0000C1                     main@motorL:
   357                           	callstack 0
   358                           
   359                           ; 9 bytes @ 0x23
   360   0000C1                     	ds	9
   361   0000CA                     main@motorR:
   362                           	callstack 0
   363                           
   364                           ; 9 bytes @ 0x2C
   365   0000CA                     	ds	9
   366                           
   367                           	psect	cstackCOMRAM
   368   000001                     __pcstackCOMRAM:
   369                           	callstack 0
   370   000001                     ??i2_I2C_2_Master_Idle:
   371   000001                     
   372                           ; 1 bytes @ 0x0
   373   000001                     	ds	1
   374   000002                     i2I2C_2_Master_Write@data_byte:
   375                           	callstack 0
   376                           
   377                           ; 1 bytes @ 0x1
   378   000002                     	ds	1
   379   000003                     i2color_writetoaddr@value:
   380                           	callstack 0
   381                           
   382                           ; 1 bytes @ 0x2
   383   000003                     	ds	1
   384   000004                     i2color_writetoaddr@address:
   385                           	callstack 0
   386                           
   387                           ; 1 bytes @ 0x3
   388   000004                     	ds	1
   389   000005                     ??i2_init_colorclick_interrupts:
   390                           
   391                           ; 1 bytes @ 0x4
   392   000005                     	ds	1
   393   000006                     ??_LowISR:
   394   000006                     
   395                           ; 1 bytes @ 0x5
   396   000006                     	ds	3
   397   000009                     ??_I2C_2_Master_Idle:
   398   000009                     ?_Return_Time:
   399                           	callstack 0
   400   000009                     ?___wmul:
   401                           	callstack 0
   402   000009                     ?___xxtofl:
   403                           	callstack 0
   404   000009                     initDCmotorsPWM@PWMperiod:
   405                           	callstack 0
   406   000009                     AppendMoves@moves_index:
   407                           	callstack 0
   408   000009                     AppendTime@temp:
   409                           	callstack 0
   410   000009                     Return_Anti_Moves@moves_index:
   411                           	callstack 0
   412   000009                     Return_Time@time_index:
   413                           	callstack 0
   414   000009                     ___wmul@multiplier:
   415                           	callstack 0
   416   000009                     ___xxtofl@val:
   417                           	callstack 0
   418                           
   419                           ; 4 bytes @ 0x8
   420   000009                     	ds	1
   421   00000A                     ??_I2C_2_Master_Read:
   422   00000A                     I2C_2_Master_Write@data_byte:
   423                           	callstack 0
   424                           
   425                           ; 1 bytes @ 0x9
   426   00000A                     	ds	1
   427   00000B                     color_writetoaddr@value:
   428                           	callstack 0
   429   00000B                     I2C_2_Master_Read@ack:
   430                           	callstack 0
   431   00000B                     AppendMoves@anti_moves_array:
   432                           	callstack 0
   433   00000B                     AppendTime@time_index:
   434                           	callstack 0
   435   00000B                     Return_Anti_Moves@anti_moves_array:
   436                           	callstack 0
   437   00000B                     Return_Time@time_array:
   438                           	callstack 0
   439   00000B                     ___wmul@multiplicand:
   440                           	callstack 0
   441                           
   442                           ; 2 bytes @ 0xA
   443   00000B                     	ds	1
   444   00000C                     color_writetoaddr@address:
   445                           	callstack 0
   446   00000C                     I2C_2_Master_Read@tmp:
   447                           	callstack 0
   448                           
   449                           ; 1 bytes @ 0xB
   450   00000C                     	ds	1
   451   00000D                     ??_Return_Time:
   452   00000D                     ??_Return_Anti_Moves:
   453   00000D                     ??_AppendMoves:
   454   00000D                     ??_color_click_init:
   455   00000D                     ??_init_colorclick_interrupts:
   456   00000D                     ??___xxtofl:
   457   00000D                     ?_color_read_Red:
   458                           	callstack 0
   459   00000D                     ?_color_read_Green:
   460                           	callstack 0
   461   00000D                     ?_color_read_Blue:
   462                           	callstack 0
   463   00000D                     ?_color_read_Clear:
   464                           	callstack 0
   465   00000D                     AppendTime@time_array:
   466                           	callstack 0
   467   00000D                     ___wmul@product:
   468                           	callstack 0
   469                           
   470                           ; 2 bytes @ 0xC
   471   00000D                     	ds	1
   472   00000E                     AppendMoves@temp:
   473                           	callstack 0
   474   00000E                     Return_Anti_Moves@temp:
   475                           	callstack 0
   476                           
   477                           ; 1 bytes @ 0xD
   478   00000E                     	ds	1
   479   00000F                     ??_AppendTime:
   480   00000F                     ??_color_read_Red:
   481   00000F                     ??_color_read_Green:
   482   00000F                     ??_color_read_Blue:
   483   00000F                     ??_color_read_Clear:
   484   00000F                     ?___lwdiv:
   485                           	callstack 0
   486   00000F                     ___lwdiv@dividend:
   487                           	callstack 0
   488                           
   489                           ; 2 bytes @ 0xE
   490   00000F                     	ds	1
   491   000010                     Return_Time@temp:
   492                           	callstack 0
   493                           
   494                           ; 2 bytes @ 0xF
   495   000010                     	ds	1
   496   000011                     ___xxtofl@sign:
   497                           	callstack 0
   498   000011                     ___lwdiv@divisor:
   499                           	callstack 0
   500                           
   501                           ; 2 bytes @ 0x10
   502   000011                     	ds	1
   503   000012                     ___xxtofl@exp:
   504                           	callstack 0
   505   000012                     color_read_Red@tmp:
   506                           	callstack 0
   507   000012                     color_read_Green@tmp:
   508                           	callstack 0
   509   000012                     color_read_Blue@tmp:
   510                           	callstack 0
   511   000012                     color_read_Clear@tmp:
   512                           	callstack 0
   513                           
   514                           ; 2 bytes @ 0x11
   515   000012                     	ds	1
   516   000013                     ___lwdiv@quotient:
   517                           	callstack 0
   518   000013                     ___xxtofl@arg:
   519                           	callstack 0
   520                           
   521                           ; 4 bytes @ 0x12
   522   000013                     	ds	1
   523   000014                     Update_RGBC@tempval:
   524                           	callstack 0
   525                           
   526                           ; 2 bytes @ 0x13
   527   000014                     	ds	1
   528   000015                     ___lwdiv@counter:
   529                           	callstack 0
   530                           
   531                           ; 1 bytes @ 0x14
   532   000015                     	ds	1
   533   000016                     setMotorPWM@m:
   534                           	callstack 0
   535                           
   536                           ; 2 bytes @ 0x15
   537   000016                     	ds	1
   538   000017                     ?___fldiv:
   539                           	callstack 0
   540   000017                     ___fldiv@b:
   541                           	callstack 0
   542                           
   543                           ; 4 bytes @ 0x16
   544   000017                     	ds	1
   545   000018                     ??_setMotorPWM:
   546                           
   547                           ; 1 bytes @ 0x17
   548   000018                     	ds	2
   549   00001A                     setMotorPWM@posDuty:
   550                           	callstack 0
   551                           
   552                           ; 1 bytes @ 0x19
   553   00001A                     	ds	1
   554   00001B                     setMotorPWM@negDuty:
   555                           	callstack 0
   556   00001B                     ___fldiv@a:
   557                           	callstack 0
   558                           
   559                           ; 4 bytes @ 0x1A
   560   00001B                     	ds	1
   561   00001C                     stop@mL:
   562                           	callstack 0
   563   00001C                     turnLeft@mL:
   564                           	callstack 0
   565   00001C                     turnRight@mL:
   566                           	callstack 0
   567   00001C                     fullSpeedAhead@mL:
   568                           	callstack 0
   569   00001C                     fullSpeedBackwards@mL:
   570                           	callstack 0
   571                           
   572                           ; 2 bytes @ 0x1B
   573   00001C                     	ds	2
   574   00001E                     stop@mR:
   575                           	callstack 0
   576   00001E                     turnLeft@mR:
   577                           	callstack 0
   578   00001E                     turnRight@mR:
   579                           	callstack 0
   580   00001E                     fullSpeedAhead@mR:
   581                           	callstack 0
   582   00001E                     fullSpeedBackwards@mR:
   583                           	callstack 0
   584                           
   585                           ; 2 bytes @ 0x1D
   586   00001E                     	ds	1
   587   00001F                     ??___fldiv:
   588                           
   589                           ; 1 bytes @ 0x1E
   590   00001F                     	ds	1
   591   000020                     ??_stop:
   592   000020                     ??_turnLeft:
   593   000020                     ??_turnRight:
   594   000020                     ??_fullSpeedAhead:
   595   000020                     ??_fullSpeedBackwards:
   596                           
   597                           ; 1 bytes @ 0x1F
   598   000020                     	ds	2
   599   000022                     turnLeft90@mL:
   600                           	callstack 0
   601   000022                     turnRight90@mL:
   602                           	callstack 0
   603                           
   604                           ; 2 bytes @ 0x21
   605   000022                     	ds	1
   606   000023                     ___fldiv@rem:
   607                           	callstack 0
   608                           
   609                           ; 4 bytes @ 0x22
   610   000023                     	ds	1
   611   000024                     turnLeft90@mR:
   612                           	callstack 0
   613   000024                     turnRight90@mR:
   614                           	callstack 0
   615                           
   616                           ; 2 bytes @ 0x23
   617   000024                     	ds	2
   618   000026                     turnLeft90@a:
   619                           	callstack 0
   620   000026                     turnRight90@a:
   621                           	callstack 0
   622                           
   623                           ; 1 bytes @ 0x25
   624   000026                     	ds	1
   625   000027                     ___fldiv@sign:
   626                           	callstack 0
   627   000027                     turnRight135@mL:
   628                           	callstack 0
   629   000027                     turnLeft135@mL:
   630                           	callstack 0
   631   000027                     RedInstructions@mL:
   632                           	callstack 0
   633   000027                     GreenInstructions@mL:
   634                           	callstack 0
   635   000027                     BlueInstructions@mL:
   636                           	callstack 0
   637   000027                     YellowInstructions@mL:
   638                           	callstack 0
   639   000027                     PinkInstructions@mL:
   640                           	callstack 0
   641                           
   642                           ; 2 bytes @ 0x26
   643   000027                     	ds	1
   644   000028                     ___fldiv@new_exp:
   645                           	callstack 0
   646                           
   647                           ; 2 bytes @ 0x27
   648   000028                     	ds	1
   649   000029                     turnRight135@mR:
   650                           	callstack 0
   651   000029                     turnLeft135@mR:
   652                           	callstack 0
   653   000029                     RedInstructions@mR:
   654                           	callstack 0
   655   000029                     GreenInstructions@mR:
   656                           	callstack 0
   657   000029                     BlueInstructions@mR:
   658                           	callstack 0
   659   000029                     YellowInstructions@mR:
   660                           	callstack 0
   661   000029                     PinkInstructions@mR:
   662                           	callstack 0
   663                           
   664                           ; 2 bytes @ 0x28
   665   000029                     	ds	1
   666   00002A                     ___fldiv@grs:
   667                           	callstack 0
   668                           
   669                           ; 4 bytes @ 0x29
   670   00002A                     	ds	1
   671   00002B                     ??_RedInstructions:
   672   00002B                     ??_GreenInstructions:
   673   00002B                     ??_BlueInstructions:
   674   00002B                     ??_YellowInstructions:
   675   00002B                     ??_PinkInstructions:
   676   00002B                     turnRight135@a:
   677                           	callstack 0
   678   00002B                     turnLeft135@a:
   679                           	callstack 0
   680                           
   681                           ; 1 bytes @ 0x2A
   682   00002B                     	ds	1
   683   00002C                     OrangeInstructions@mL:
   684                           	callstack 0
   685   00002C                     LightBlueInstructions@mL:
   686                           	callstack 0
   687                           
   688                           ; 2 bytes @ 0x2B
   689   00002C                     	ds	1
   690   00002D                     RedInstructions@a:
   691                           	callstack 0
   692   00002D                     GreenInstructions@a:
   693                           	callstack 0
   694   00002D                     BlueInstructions@a:
   695                           	callstack 0
   696   00002D                     YellowInstructions@a:
   697                           	callstack 0
   698   00002D                     PinkInstructions@a:
   699                           	callstack 0
   700                           
   701                           ; 1 bytes @ 0x2C
   702   00002D                     	ds	1
   703   00002E                     ___fldiv@bexp:
   704                           	callstack 0
   705   00002E                     OrangeInstructions@mR:
   706                           	callstack 0
   707   00002E                     LightBlueInstructions@mR:
   708                           	callstack 0
   709   00002E                     AntiYellow@mL:
   710                           	callstack 0
   711   00002E                     AntiPink@mL:
   712                           	callstack 0
   713                           
   714                           ; 2 bytes @ 0x2D
   715   00002E                     	ds	1
   716   00002F                     ___fldiv@aexp:
   717                           	callstack 0
   718                           
   719                           ; 1 bytes @ 0x2E
   720   00002F                     	ds	1
   721   000030                     ??_OrangeInstructions:
   722   000030                     ??_LightBlueInstructions:
   723   000030                     ?___flmul:
   724                           	callstack 0
   725   000030                     AntiYellow@mR:
   726                           	callstack 0
   727   000030                     AntiPink@mR:
   728                           	callstack 0
   729   000030                     ___flmul@b:
   730                           	callstack 0
   731                           
   732                           ; 4 bytes @ 0x2F
   733   000030                     	ds	2
   734   000032                     ??_AntiYellow:
   735   000032                     ??_AntiPink:
   736   000032                     OrangeInstructions@a:
   737                           	callstack 0
   738   000032                     LightBlueInstructions@a:
   739                           	callstack 0
   740                           
   741                           ; 1 bytes @ 0x31
   742   000032                     	ds	2
   743   000034                     AntiYellow@a:
   744                           	callstack 0
   745   000034                     AntiPink@a:
   746                           	callstack 0
   747   000034                     ___flmul@a:
   748                           	callstack 0
   749                           
   750                           ; 4 bytes @ 0x33
   751   000034                     	ds	1
   752   000035                     MoveBuggy@color_detected:
   753                           	callstack 0
   754                           
   755                           ; 2 bytes @ 0x34
   756   000035                     	ds	2
   757   000037                     MoveBuggy@mL:
   758                           	callstack 0
   759                           
   760                           ; 2 bytes @ 0x36
   761   000037                     	ds	1
   762   000038                     ??___flmul:
   763                           
   764                           ; 1 bytes @ 0x37
   765   000038                     	ds	1
   766   000039                     MoveBuggy@mR:
   767                           	callstack 0
   768                           
   769                           ; 2 bytes @ 0x38
   770   000039                     	ds	2
   771   00003B                     WhiteInstructions@mL:
   772                           	callstack 0
   773                           
   774                           ; 2 bytes @ 0x3A
   775   00003B                     	ds	1
   776   00003C                     ___flmul@sign:
   777                           	callstack 0
   778                           
   779                           ; 1 bytes @ 0x3B
   780   00003C                     	ds	1
   781   00003D                     WhiteInstructions@mR:
   782                           	callstack 0
   783   00003D                     ___flmul@grs:
   784                           	callstack 0
   785                           
   786                           ; 4 bytes @ 0x3C
   787   00003D                     	ds	2
   788   00003F                     ??_WhiteInstructions:
   789                           
   790                           ; 1 bytes @ 0x3E
   791   00003F                     	ds	2
   792   000041                     ___flmul@aexp:
   793                           	callstack 0
   794   000041                     WhiteInstructions@c:
   795                           	callstack 0
   796                           
   797                           ; 2 bytes @ 0x40
   798   000041                     	ds	1
   799   000042                     ___flmul@bexp:
   800                           	callstack 0
   801                           
   802                           ; 1 bytes @ 0x41
   803   000042                     	ds	1
   804   000043                     WhiteInstructions@anticolor:
   805                           	callstack 0
   806   000043                     ___flmul@prod:
   807                           	callstack 0
   808                           
   809                           ; 4 bytes @ 0x42
   810   000043                     	ds	1
   811   000044                     WhiteInstructions@a:
   812                           	callstack 0
   813                           
   814                           ; 2 bytes @ 0x43
   815   000044                     	ds	3
   816   000047                     ___flmul@temp:
   817                           	callstack 0
   818                           
   819                           ; 2 bytes @ 0x46
   820   000047                     	ds	2
   821   000049                     ?___fltol:
   822                           	callstack 0
   823   000049                     ___fltol@f1:
   824                           	callstack 0
   825                           
   826                           ; 4 bytes @ 0x48
   827   000049                     	ds	4
   828   00004D                     ___fltol@sign1:
   829                           	callstack 0
   830                           
   831                           ; 1 bytes @ 0x4C
   832   00004D                     	ds	1
   833   00004E                     ___fltol@exp1:
   834                           	callstack 0
   835                           
   836                           ; 1 bytes @ 0x4D
   837   00004E                     	ds	1
   838                           
   839 ;;
   840 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   841 ;;
   842 ;; *************** function _main *****************
   843 ;; Defined at:
   844 ;;		line 22 in file "main_motor.c"
   845 ;; Parameters:    Size  Location     Type
   846 ;;		None
   847 ;; Auto vars:     Size  Location     Type
   848 ;;  b               2   24[BANK0 ] unsigned int 
   849 ;;  motorR          9   44[BANK0 ] struct DC_motor
   850 ;;  motorL          9   35[BANK0 ] struct DC_motor
   851 ;;  initial_colo    8   27[BANK0 ] struct RGB_val
   852 ;;  color_detect    1   26[BANK0 ] unsigned char 
   853 ;; Return value:  Size  Location     Type
   854 ;;                  1    wreg      void 
   855 ;; Registers used:
   856 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   857 ;; Tracked objects:
   858 ;;		On entry : 0/0
   859 ;;		On exit  : 0/0
   860 ;;		Unchanged: 0/0
   861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   863 ;;      Locals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   864 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   865 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   866 ;;Total ram usage:       31 bytes
   867 ;; Hardware stack levels required when called: 15
   868 ;; This function calls:
   869 ;;		_AppendTime
   870 ;;		_Interrupts_init
   871 ;;		_LED_init
   872 ;;		_MoveBuggy
   873 ;;		_Timer0_init
   874 ;;		_Update_RGBC
   875 ;;		_WhiteInstructions
   876 ;;		_WhiteLight
   877 ;;		_color_click_init
   878 ;;		_detect_color
   879 ;;		_fullSpeedAhead
   880 ;;		_initDCmotorsPWM
   881 ;;		_stop
   882 ;; This function is called by:
   883 ;;		Startup code after reset
   884 ;; This function uses a non-reentrant model
   885 ;;
   886                           
   887                           	psect	text0
   888   0010C4                     __ptext0:
   889                           	callstack 0
   890   0010C4                     _main:
   891                           	callstack 16
   892   0010C4                     
   893                           ;main_motor.c: 25:     RGB_val initial_color;;main_motor.c: 26:     initial_color.R = 0;
   894   0010C4  0E00               	movlw	0
   895   0010C6  0100               	movlb	0	; () banked
   896   0010C8  6FBA               	movwf	(main@initial_color+1)& (0+255),b
   897   0010CA  0E00               	movlw	0
   898   0010CC  6FB9               	movwf	main@initial_color& (0+255),b
   899                           
   900                           ;main_motor.c: 27:     initial_color.G = 0;
   901   0010CE  0E00               	movlw	0
   902   0010D0  6FBC               	movwf	(main@initial_color+3)& (0+255),b
   903   0010D2  0E00               	movlw	0
   904   0010D4  6FBB               	movwf	(main@initial_color+2)& (0+255),b
   905                           
   906                           ;main_motor.c: 28:     initial_color.B = 0;
   907   0010D6  0E00               	movlw	0
   908   0010D8  6FBE               	movwf	(main@initial_color+5)& (0+255),b
   909   0010DA  0E00               	movlw	0
   910   0010DC  6FBD               	movwf	(main@initial_color+4)& (0+255),b
   911                           
   912                           ;main_motor.c: 29:     initial_color.C = 0;
   913   0010DE  0E00               	movlw	0
   914   0010E0  6FC0               	movwf	(main@initial_color+7)& (0+255),b
   915   0010E2  0E00               	movlw	0
   916   0010E4  6FBF               	movwf	(main@initial_color+6)& (0+255),b
   917   0010E6                     
   918                           ; BSR set to: 0
   919                           ;main_motor.c: 31:     LED_init();
   920   0010E6  EC20  F015         	call	_LED_init	;wreg free
   921   0010EA                     
   922                           ;main_motor.c: 32:     color_click_init();
   923   0010EA  EC11  F014         	call	_color_click_init	;wreg free
   924   0010EE                     
   925                           ;main_motor.c: 33:     Interrupts_init();
   926   0010EE  ECF7  F014         	call	_Interrupts_init	;wreg free
   927                           
   928                           ;main_motor.c: 35:     Timer0_init();
   929   0010F2  ECB7  F014         	call	_Timer0_init	;wreg free
   930                           
   931                           ;main_motor.c: 38:     initDCmotorsPWM(99);
   932   0010F6  0E00               	movlw	0
   933   0010F8  6E0A               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   934   0010FA  0E63               	movlw	99
   935   0010FC  6E09               	movwf	initDCmotorsPWM@PWMperiod^0,c
   936   0010FE  EC10  F010         	call	_initDCmotorsPWM	;wreg free
   937   001102                     
   938                           ;main_motor.c: 40:     struct DC_motor motorL, motorR;;main_motor.c: 42:     motorL.powe
      +                          r=0;
   939   001102  0E00               	movlw	0
   940   001104  0100               	movlb	0	; () banked
   941   001106  6FC1               	movwf	main@motorL& (0+255),b
   942   001108                     
   943                           ; BSR set to: 0
   944                           ;main_motor.c: 43:     motorL.direction=1;
   945   001108  0E01               	movlw	1
   946   00110A  6FC2               	movwf	(main@motorL+1)& (0+255),b
   947   00110C                     
   948                           ; BSR set to: 0
   949                           ;main_motor.c: 44:     motorL.brakemode=1;
   950   00110C  0E01               	movlw	1
   951   00110E  6FC3               	movwf	(main@motorL+2)& (0+255),b
   952   001110                     
   953                           ; BSR set to: 0
   954                           ;main_motor.c: 45:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
   955   001110  0EAA               	movlw	170
   956   001112  6FC6               	movwf	(main@motorL+5)& (0+255),b
   957   001114  0E0F               	movlw	15
   958   001116  6FC7               	movwf	(main@motorL+6)& (0+255),b
   959   001118                     
   960                           ; BSR set to: 0
   961                           ;main_motor.c: 46:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
   962   001118  0EA6               	movlw	166
   963   00111A  6FC8               	movwf	(main@motorL+7)& (0+255),b
   964   00111C  0E0F               	movlw	15
   965   00111E  6FC9               	movwf	(main@motorL+8)& (0+255),b
   966   001120                     
   967                           ; BSR set to: 0
   968                           ;main_motor.c: 47:     motorL.PWMperiod= T2PR;
   969   001120  CFBC F0C4          	movff	4028,main@motorL+3	;volatile
   970   001124  6BC5               	clrf	(main@motorL+4)& (0+255),b
   971   001126                     
   972                           ; BSR set to: 0
   973                           ;main_motor.c: 49:     motorR.power=0;
   974   001126  0E00               	movlw	0
   975   001128  6FCA               	movwf	main@motorR& (0+255),b
   976   00112A                     
   977                           ; BSR set to: 0
   978                           ;main_motor.c: 50:     motorR.direction=1;
   979   00112A  0E01               	movlw	1
   980   00112C  6FCB               	movwf	(main@motorR+1)& (0+255),b
   981   00112E                     
   982                           ; BSR set to: 0
   983                           ;main_motor.c: 51:     motorR.brakemode=1;
   984   00112E  0E01               	movlw	1
   985   001130  6FCC               	movwf	(main@motorR+2)& (0+255),b
   986   001132                     
   987                           ; BSR set to: 0
   988                           ;main_motor.c: 52:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
   989   001132  0E25               	movlw	37
   990   001134  6FCF               	movwf	(main@motorR+5)& (0+255),b
   991   001136  0E0F               	movlw	15
   992   001138  6FD0               	movwf	(main@motorR+6)& (0+255),b
   993   00113A                     
   994                           ; BSR set to: 0
   995                           ;main_motor.c: 53:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
   996   00113A  0E21               	movlw	33
   997   00113C  6FD1               	movwf	(main@motorR+7)& (0+255),b
   998   00113E  0E0F               	movlw	15
   999   001140  6FD2               	movwf	(main@motorR+8)& (0+255),b
  1000   001142                     
  1001                           ; BSR set to: 0
  1002                           ;main_motor.c: 54:     motorR.PWMperiod= T2PR;
  1003   001142  CFBC F0CD          	movff	4028,main@motorR+3	;volatile
  1004   001146  6BCE               	clrf	(main@motorR+4)& (0+255),b
  1005   001148                     
  1006                           ; BSR set to: 0
  1007                           ;main_motor.c: 57:     unsigned char color_detected = 0;
  1008   001148  0E00               	movlw	0
  1009   00114A  6FB8               	movwf	main@color_detected& (0+255),b
  1010                           
  1011                           ;main_motor.c: 58:     WhiteLight();
  1012   00114C  EC4D  F015         	call	_WhiteLight	;wreg free
  1013   001150                     l4235:
  1014                           
  1015                           ;main_motor.c: 63:         unsigned int b = 0;
  1016   001150  0E00               	movlw	0
  1017   001152  0100               	movlb	0	; () banked
  1018   001154  6FB7               	movwf	(main@b+1)& (0+255),b
  1019   001156  0E00               	movlw	0
  1020   001158  6FB6               	movwf	main@b& (0+255),b
  1021                           
  1022                           ;main_motor.c: 64:         while(color_detected == 0){
  1023   00115A  EFCA  F008         	goto	l4245
  1024   00115E                     l4237:
  1025                           
  1026                           ; BSR set to: 0
  1027                           ;main_motor.c: 65:             fullSpeedAhead(&motorL,&motorR);
  1028   00115E  0EC1               	movlw	low main@motorL
  1029   001160  6E1C               	movwf	fullSpeedAhead@mL^0,c
  1030   001162  0E00               	movlw	high main@motorL
  1031   001164  6E1D               	movwf	(fullSpeedAhead@mL+1)^0,c
  1032   001166  0ECA               	movlw	low main@motorR
  1033   001168  6E1E               	movwf	fullSpeedAhead@mR^0,c
  1034   00116A  0E00               	movlw	high main@motorR
  1035   00116C  6E1F               	movwf	(fullSpeedAhead@mR+1)^0,c
  1036   00116E  EC13  F00C         	call	_fullSpeedAhead	;wreg free
  1037   001172                     
  1038                           ;main_motor.c: 66:             Update_RGBC(&initial_color);
  1039   001172  0EB9               	movlw	low main@initial_color
  1040   001174  6E14               	movwf	Update_RGBC@tempval^0,c
  1041   001176  0E00               	movlw	high main@initial_color
  1042   001178  6E15               	movwf	(Update_RGBC@tempval+1)^0,c
  1043   00117A  EC92  F012         	call	_Update_RGBC	;wreg free
  1044   00117E                     
  1045                           ;main_motor.c: 67:             color_detected = detect_color(&initial_color);
  1046   00117E  0EB9               	movlw	low main@initial_color
  1047   001180  0100               	movlb	0	; () banked
  1048   001182  6FA2               	movwf	detect_color@tempval& (0+255),b
  1049   001184  0E00               	movlw	high main@initial_color
  1050   001186  6FA3               	movwf	(detect_color@tempval+1)& (0+255),b
  1051   001188  EC2E  F000         	call	_detect_color	;wreg free
  1052   00118C  0100               	movlb	0	; () banked
  1053   00118E  6FB8               	movwf	main@color_detected& (0+255),b
  1054   001190                     
  1055                           ; BSR set to: 0
  1056                           ;main_motor.c: 68:             b++;
  1057   001190  4BB6               	infsnz	main@b& (0+255),f,b
  1058   001192  2BB7               	incf	(main@b+1)& (0+255),f,b
  1059   001194                     l4245:
  1060                           
  1061                           ; BSR set to: 0
  1062                           ;main_motor.c: 64:         while(color_detected == 0){
  1063   001194  51B8               	movf	main@color_detected& (0+255),w,b
  1064   001196  B4D8               	btfsc	status,2,c
  1065   001198  EFD0  F008         	goto	u4451
  1066   00119C  EFD2  F008         	goto	u4450
  1067   0011A0                     u4451:
  1068   0011A0  EFAF  F008         	goto	l4237
  1069   0011A4                     u4450:
  1070   0011A4                     
  1071                           ; BSR set to: 0
  1072                           ;main_motor.c: 71:         if(color_detected != 0 && color_detected != 8){
  1073   0011A4  51B8               	movf	main@color_detected& (0+255),w,b
  1074   0011A6  B4D8               	btfsc	status,2,c
  1075   0011A8  EFD8  F008         	goto	u4461
  1076   0011AC  EFDA  F008         	goto	u4460
  1077   0011B0                     u4461:
  1078   0011B0  EF35  F009         	goto	l4271
  1079   0011B4                     u4460:
  1080   0011B4                     
  1081                           ; BSR set to: 0
  1082   0011B4  0E08               	movlw	8
  1083   0011B6  19B8               	xorwf	main@color_detected& (0+255),w,b
  1084   0011B8  B4D8               	btfsc	status,2,c
  1085   0011BA  EFE1  F008         	goto	u4471
  1086   0011BE  EFE3  F008         	goto	u4470
  1087   0011C2                     u4471:
  1088   0011C2  EF35  F009         	goto	l4271
  1089   0011C6                     u4470:
  1090   0011C6                     
  1091                           ; BSR set to: 0
  1092                           ;main_motor.c: 72:             AppendTime((b-9),&time_index,time_array);
  1093   0011C6  0EF7               	movlw	247
  1094   0011C8  25B6               	addwf	main@b& (0+255),w,b
  1095   0011CA  6E09               	movwf	AppendTime@temp^0,c
  1096   0011CC  0EFF               	movlw	255
  1097   0011CE  21B7               	addwfc	(main@b+1)& (0+255),w,b
  1098   0011D0  6E0A               	movwf	(AppendTime@temp+1)^0,c
  1099   0011D2  0E9D               	movlw	low _time_index
  1100   0011D4  6E0B               	movwf	AppendTime@time_index^0,c
  1101   0011D6  0E00               	movlw	high _time_index
  1102   0011D8  6E0C               	movwf	(AppendTime@time_index+1)^0,c
  1103   0011DA  0E3C               	movlw	low _time_array
  1104   0011DC  6E0D               	movwf	AppendTime@time_array^0,c
  1105   0011DE  0E01               	movlw	high _time_array
  1106   0011E0  6E0E               	movwf	(AppendTime@time_array+1)^0,c
  1107   0011E2  EC2B  F014         	call	_AppendTime	;wreg free
  1108   0011E6                     
  1109                           ;main_motor.c: 73:             LATHbits.LATH3 = 1;
  1110   0011E6  8680               	bsf	128,3,c	;volatile
  1111                           
  1112                           ;main_motor.c: 75:             while(b>0){
  1113   0011E8  EF04  F009         	goto	l4259
  1114   0011EC                     l4255:
  1115                           
  1116                           ; BSR set to: 0
  1117                           ;main_motor.c: 76:                 stop(&motorL,&motorR);
  1118   0011EC  0EC1               	movlw	low main@motorL
  1119   0011EE  6E1C               	movwf	stop@mL^0,c
  1120   0011F0  0E00               	movlw	high main@motorL
  1121   0011F2  6E1D               	movwf	(stop@mL+1)^0,c
  1122   0011F4  0ECA               	movlw	low main@motorR
  1123   0011F6  6E1E               	movwf	stop@mR^0,c
  1124   0011F8  0E00               	movlw	high main@motorR
  1125   0011FA  6E1F               	movwf	(stop@mR+1)^0,c
  1126   0011FC  ECED  F00D         	call	_stop	;wreg free
  1127   001200                     
  1128                           ;main_motor.c: 77:                 b--;
  1129   001200  0100               	movlb	0	; () banked
  1130   001202  07B6               	decf	main@b& (0+255),f,b
  1131   001204  A0D8               	btfss	status,0,c
  1132   001206  07B7               	decf	(main@b+1)& (0+255),f,b
  1133   001208                     l4259:
  1134                           
  1135                           ;main_motor.c: 75:             while(b>0){
  1136   001208  0100               	movlb	0	; () banked
  1137   00120A  51B6               	movf	main@b& (0+255),w,b
  1138   00120C  11B7               	iorwf	(main@b+1)& (0+255),w,b
  1139   00120E  A4D8               	btfss	status,2,c
  1140   001210  EF0C  F009         	goto	u4481
  1141   001214  EF0E  F009         	goto	u4480
  1142   001218                     u4481:
  1143   001218  EFF6  F008         	goto	l4255
  1144   00121C                     u4480:
  1145   00121C                     
  1146                           ; BSR set to: 0
  1147                           ;main_motor.c: 79:             _delay((unsigned long)((100)*(64000000/4000.0)));
  1148   00121C  0E09               	movlw	9
  1149   00121E  0100               	movlb	0	; () banked
  1150   001220  6FB5               	movwf	(??_main+1)& (0+255),b
  1151   001222  0E1E               	movlw	30
  1152   001224  6FB4               	movwf	??_main& (0+255),b
  1153   001226  0EE4               	movlw	228
  1154   001228                     u4517:
  1155   001228  2EE8               	decfsz	wreg,f,c
  1156   00122A  D7FE               	bra	u4517
  1157   00122C  2FB4               	decfsz	??_main& (0+255),f,b
  1158   00122E  D7FC               	bra	u4517
  1159   001230  2FB5               	decfsz	(??_main+1)& (0+255),f,b
  1160   001232  D7FA               	bra	u4517
  1161   001234  F000               	nop	
  1162   001236                     
  1163                           ;main_motor.c: 80:             LATHbits.LATH3 = 0;
  1164   001236  9680               	bcf	128,3,c	;volatile
  1165   001238                     
  1166                           ;main_motor.c: 82:             MoveBuggy(color_detected,&motorL,&motorR);
  1167   001238  0100               	movlb	0	; () banked
  1168   00123A  51B8               	movf	main@color_detected& (0+255),w,b
  1169   00123C  6FB4               	movwf	??_main& (0+255),b
  1170   00123E  6BB5               	clrf	(??_main+1)& (0+255),b
  1171   001240  C0B4  F035         	movff	??_main,MoveBuggy@color_detected
  1172   001244  C0B5  F036         	movff	??_main+1,MoveBuggy@color_detected+1
  1173   001248  0EC1               	movlw	low main@motorL
  1174   00124A  6E37               	movwf	MoveBuggy@mL^0,c
  1175   00124C  0E00               	movlw	high main@motorL
  1176   00124E  6E38               	movwf	(MoveBuggy@mL+1)^0,c
  1177   001250  0ECA               	movlw	low main@motorR
  1178   001252  6E39               	movwf	MoveBuggy@mR^0,c
  1179   001254  0E00               	movlw	high main@motorR
  1180   001256  6E3A               	movwf	(MoveBuggy@mR+1)^0,c
  1181   001258  EC20  F007         	call	_MoveBuggy	;wreg free
  1182   00125C                     
  1183                           ;main_motor.c: 83:             color_detected = 0;
  1184   00125C  0E00               	movlw	0
  1185   00125E  0100               	movlb	0	; () banked
  1186   001260  6FB8               	movwf	main@color_detected& (0+255),b
  1187   001262                     
  1188                           ; BSR set to: 0
  1189                           ;main_motor.c: 84:             color_flag = 0;
  1190   001262  0E00               	movlw	0
  1191   001264  6E55               	movwf	_color_flag^0,c
  1192                           
  1193                           ;main_motor.c: 85:         }
  1194   001266  EFA8  F008         	goto	l4235
  1195   00126A                     l4271:
  1196                           
  1197                           ; BSR set to: 0
  1198   00126A  0E08               	movlw	8
  1199   00126C  19B8               	xorwf	main@color_detected& (0+255),w,b
  1200   00126E  A4D8               	btfss	status,2,c
  1201   001270  EF3C  F009         	goto	u4491
  1202   001274  EF3E  F009         	goto	u4490
  1203   001278                     u4491:
  1204   001278  EFA8  F008         	goto	l4235
  1205   00127C                     u4490:
  1206   00127C                     
  1207                           ; BSR set to: 0
  1208                           ;main_motor.c: 89:             AppendTime((b-9),&time_index,time_array);
  1209   00127C  0EF7               	movlw	247
  1210   00127E  25B6               	addwf	main@b& (0+255),w,b
  1211   001280  6E09               	movwf	AppendTime@temp^0,c
  1212   001282  0EFF               	movlw	255
  1213   001284  21B7               	addwfc	(main@b+1)& (0+255),w,b
  1214   001286  6E0A               	movwf	(AppendTime@temp+1)^0,c
  1215   001288  0E9D               	movlw	low _time_index
  1216   00128A  6E0B               	movwf	AppendTime@time_index^0,c
  1217   00128C  0E00               	movlw	high _time_index
  1218   00128E  6E0C               	movwf	(AppendTime@time_index+1)^0,c
  1219   001290  0E3C               	movlw	low _time_array
  1220   001292  6E0D               	movwf	AppendTime@time_array^0,c
  1221   001294  0E01               	movlw	high _time_array
  1222   001296  6E0E               	movwf	(AppendTime@time_array+1)^0,c
  1223   001298  EC2B  F014         	call	_AppendTime	;wreg free
  1224   00129C                     
  1225                           ;main_motor.c: 90:             LATDbits.LATD7 = 1;
  1226   00129C  8E7C               	bsf	124,7,c	;volatile
  1227                           
  1228                           ;main_motor.c: 92:             while(b>0){
  1229   00129E  EF5F  F009         	goto	l4281
  1230   0012A2                     l4277:
  1231                           
  1232                           ; BSR set to: 0
  1233                           ;main_motor.c: 93:                 stop(&motorL,&motorR);
  1234   0012A2  0EC1               	movlw	low main@motorL
  1235   0012A4  6E1C               	movwf	stop@mL^0,c
  1236   0012A6  0E00               	movlw	high main@motorL
  1237   0012A8  6E1D               	movwf	(stop@mL+1)^0,c
  1238   0012AA  0ECA               	movlw	low main@motorR
  1239   0012AC  6E1E               	movwf	stop@mR^0,c
  1240   0012AE  0E00               	movlw	high main@motorR
  1241   0012B0  6E1F               	movwf	(stop@mR+1)^0,c
  1242   0012B2  ECED  F00D         	call	_stop	;wreg free
  1243   0012B6                     
  1244                           ;main_motor.c: 94:                 b--;
  1245   0012B6  0100               	movlb	0	; () banked
  1246   0012B8  07B6               	decf	main@b& (0+255),f,b
  1247   0012BA  A0D8               	btfss	status,0,c
  1248   0012BC  07B7               	decf	(main@b+1)& (0+255),f,b
  1249   0012BE                     l4281:
  1250                           
  1251                           ;main_motor.c: 92:             while(b>0){
  1252   0012BE  0100               	movlb	0	; () banked
  1253   0012C0  51B6               	movf	main@b& (0+255),w,b
  1254   0012C2  11B7               	iorwf	(main@b+1)& (0+255),w,b
  1255   0012C4  A4D8               	btfss	status,2,c
  1256   0012C6  EF67  F009         	goto	u4501
  1257   0012CA  EF69  F009         	goto	u4500
  1258   0012CE                     u4501:
  1259   0012CE  EF51  F009         	goto	l4277
  1260   0012D2                     u4500:
  1261   0012D2                     
  1262                           ; BSR set to: 0
  1263                           ;main_motor.c: 96:             _delay((unsigned long)((100)*(64000000/4000.0)));
  1264   0012D2  0E09               	movlw	9
  1265   0012D4  0100               	movlb	0	; () banked
  1266   0012D6  6FB5               	movwf	(??_main+1)& (0+255),b
  1267   0012D8  0E1E               	movlw	30
  1268   0012DA  6FB4               	movwf	??_main& (0+255),b
  1269   0012DC  0EE4               	movlw	228
  1270   0012DE                     u4527:
  1271   0012DE  2EE8               	decfsz	wreg,f,c
  1272   0012E0  D7FE               	bra	u4527
  1273   0012E2  2FB4               	decfsz	??_main& (0+255),f,b
  1274   0012E4  D7FC               	bra	u4527
  1275   0012E6  2FB5               	decfsz	(??_main+1)& (0+255),f,b
  1276   0012E8  D7FA               	bra	u4527
  1277   0012EA  F000               	nop	
  1278   0012EC                     
  1279                           ;main_motor.c: 97:             WhiteInstructions(&motorL,&motorR);
  1280   0012EC  0EC1               	movlw	low main@motorL
  1281   0012EE  6E3B               	movwf	WhiteInstructions@mL^0,c
  1282   0012F0  0E00               	movlw	high main@motorL
  1283   0012F2  6E3C               	movwf	(WhiteInstructions@mL+1)^0,c
  1284   0012F4  0ECA               	movlw	low main@motorR
  1285   0012F6  6E3D               	movwf	WhiteInstructions@mR^0,c
  1286   0012F8  0E00               	movlw	high main@motorR
  1287   0012FA  6E3E               	movwf	(WhiteInstructions@mR+1)^0,c
  1288   0012FC  EC78  F00D         	call	_WhiteInstructions	;wreg free
  1289   001300                     
  1290                           ;main_motor.c: 98:             LATDbits.LATD7 = 0;
  1291   001300  9E7C               	bcf	124,7,c	;volatile
  1292   001302                     
  1293                           ;main_motor.c: 99:             color_detected = 0;
  1294   001302  0E00               	movlw	0
  1295   001304  0100               	movlb	0	; () banked
  1296   001306  6FB8               	movwf	main@color_detected& (0+255),b
  1297   001308  EFA8  F008         	goto	l4235
  1298   00130C  EF2C  F000         	goto	start
  1299   001310                     __end_of_main:
  1300                           	callstack 0
  1301                           
  1302 ;; *************** function _initDCmotorsPWM *****************
  1303 ;; Defined at:
  1304 ;;		line 5 in file "dc_motor.c"
  1305 ;; Parameters:    Size  Location     Type
  1306 ;;  PWMperiod       2    8[COMRAM] unsigned int 
  1307 ;; Auto vars:     Size  Location     Type
  1308 ;;		None
  1309 ;; Return value:  Size  Location     Type
  1310 ;;                  1    wreg      void 
  1311 ;; Registers used:
  1312 ;;		wreg, status,2
  1313 ;; Tracked objects:
  1314 ;;		On entry : 0/0
  1315 ;;		On exit  : 0/0
  1316 ;;		Unchanged: 0/0
  1317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1318 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1321 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1322 ;;Total ram usage:        2 bytes
  1323 ;; Hardware stack levels used: 1
  1324 ;; Hardware stack levels required when called: 7
  1325 ;; This function calls:
  1326 ;;		Nothing
  1327 ;; This function is called by:
  1328 ;;		_main
  1329 ;; This function uses a non-reentrant model
  1330 ;;
  1331                           
  1332                           	psect	text1
  1333   002020                     __ptext1:
  1334                           	callstack 0
  1335   002020                     _initDCmotorsPWM:
  1336                           	callstack 23
  1337   002020                     
  1338                           ;dc_motor.c: 7:     LATEbits.LATE2 = 0;
  1339   002020  947D               	bcf	125,2,c	;volatile
  1340                           
  1341                           ;dc_motor.c: 8:     TRISEbits.TRISE2 = 0;
  1342   002022  9485               	bcf	133,2,c	;volatile
  1343                           
  1344                           ;dc_motor.c: 9:     LATEbits.LATE4 = 0;
  1345   002024  987D               	bcf	125,4,c	;volatile
  1346                           
  1347                           ;dc_motor.c: 10:     TRISEbits.TRISE4 = 0;
  1348   002026  9885               	bcf	133,4,c	;volatile
  1349                           
  1350                           ;dc_motor.c: 11:     LATCbits.LATC7 = 0;
  1351   002028  9E7B               	bcf	123,7,c	;volatile
  1352                           
  1353                           ;dc_motor.c: 12:     TRISCbits.TRISC7 = 0;
  1354   00202A  9E83               	bcf	131,7,c	;volatile
  1355                           
  1356                           ;dc_motor.c: 13:     LATGbits.LATG6 = 0;
  1357   00202C  9C7F               	bcf	127,6,c	;volatile
  1358                           
  1359                           ;dc_motor.c: 14:     TRISGbits.TRISG6 = 0;
  1360   00202E  9C87               	bcf	135,6,c	;volatile
  1361   002030                     
  1362                           ;dc_motor.c: 17:     RE2PPS=0x05;
  1363   002030  0E05               	movlw	5
  1364   002032  010E               	movlb	14	; () banked
  1365   002034  6F74               	movwf	116,b	;volatile
  1366                           
  1367                           ;dc_motor.c: 18:     RE4PPS=0x06;
  1368   002036  0E06               	movlw	6
  1369   002038  6F76               	movwf	118,b	;volatile
  1370                           
  1371                           ;dc_motor.c: 19:     RC7PPS=0x07;
  1372   00203A  0E07               	movlw	7
  1373   00203C  6F69               	movwf	105,b	;volatile
  1374                           
  1375                           ;dc_motor.c: 20:     RG6PPS=0x08;
  1376   00203E  0E08               	movlw	8
  1377   002040  6F88               	movwf	136,b	;volatile
  1378                           
  1379                           ;dc_motor.c: 23:     T2CONbits.CKPS=0b100;
  1380   002042  50BD               	movf	189,w,c	;volatile
  1381   002044  0B8F               	andlw	-113
  1382   002046  0940               	iorlw	64
  1383   002048  6EBD               	movwf	189,c	;volatile
  1384                           
  1385                           ;dc_motor.c: 24:     T2HLTbits.MODE=0b00000;
  1386   00204A  0EE0               	movlw	-32
  1387   00204C  16BE               	andwf	190,f,c	;volatile
  1388                           
  1389                           ;dc_motor.c: 25:     T2CLKCONbits.CS=0b0001;
  1390   00204E  50BF               	movf	191,w,c	;volatile
  1391   002050  0BF0               	andlw	-16
  1392   002052  0901               	iorlw	1
  1393   002054  6EBF               	movwf	191,c	;volatile
  1394   002056                     
  1395                           ; BSR set to: 14
  1396                           ;dc_motor.c: 29:     T2PR=PWMperiod;
  1397   002056  C009  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  1398   00205A                     
  1399                           ; BSR set to: 14
  1400                           ;dc_motor.c: 30:     T2CONbits.ON=1;
  1401   00205A  8EBD               	bsf	189,7,c	;volatile
  1402                           
  1403                           ;dc_motor.c: 34:     CCPR1H=0;
  1404   00205C  0E00               	movlw	0
  1405   00205E  6EAA               	movwf	170,c	;volatile
  1406                           
  1407                           ;dc_motor.c: 35:     CCPR2H=0;
  1408   002060  0E00               	movlw	0
  1409   002062  6EA6               	movwf	166,c	;volatile
  1410                           
  1411                           ;dc_motor.c: 36:     CCPR3H=0;
  1412   002064  0E00               	movlw	0
  1413   002066  010F               	movlb	15	; () banked
  1414   002068  6F25               	movwf	37,b	;volatile
  1415                           
  1416                           ;dc_motor.c: 37:     CCPR4H=0;
  1417   00206A  0E00               	movlw	0
  1418   00206C  6F21               	movwf	33,b	;volatile
  1419                           
  1420                           ;dc_motor.c: 40:     CCPTMRS0bits.C1TSEL=0;
  1421   00206E  0EFC               	movlw	-4
  1422   002070  16AD               	andwf	173,f,c	;volatile
  1423                           
  1424                           ;dc_motor.c: 41:     CCPTMRS0bits.C2TSEL=0;
  1425   002072  0EF3               	movlw	-13
  1426   002074  16AD               	andwf	173,f,c	;volatile
  1427                           
  1428                           ;dc_motor.c: 42:     CCPTMRS0bits.C3TSEL=0;
  1429   002076  0ECF               	movlw	-49
  1430   002078  16AD               	andwf	173,f,c	;volatile
  1431                           
  1432                           ;dc_motor.c: 43:     CCPTMRS0bits.C4TSEL=0;
  1433   00207A  0E3F               	movlw	-193
  1434   00207C  16AD               	andwf	173,f,c	;volatile
  1435   00207E                     
  1436                           ; BSR set to: 15
  1437                           ;dc_motor.c: 46:     CCP1CONbits.FMT=1;
  1438   00207E  88AB               	bsf	171,4,c	;volatile
  1439                           
  1440                           ;dc_motor.c: 47:     CCP1CONbits.CCP1MODE=0b1100;
  1441   002080  50AB               	movf	171,w,c	;volatile
  1442   002082  0BF0               	andlw	-16
  1443   002084  090C               	iorlw	12
  1444   002086  6EAB               	movwf	171,c	;volatile
  1445   002088                     
  1446                           ; BSR set to: 15
  1447                           ;dc_motor.c: 48:     CCP1CONbits.EN=1;
  1448   002088  8EAB               	bsf	171,7,c	;volatile
  1449   00208A                     
  1450                           ; BSR set to: 15
  1451                           ;dc_motor.c: 50:     CCP2CONbits.FMT=1;
  1452   00208A  88A7               	bsf	167,4,c	;volatile
  1453                           
  1454                           ;dc_motor.c: 51:     CCP2CONbits.CCP2MODE=0b1100;
  1455   00208C  50A7               	movf	167,w,c	;volatile
  1456   00208E  0BF0               	andlw	-16
  1457   002090  090C               	iorlw	12
  1458   002092  6EA7               	movwf	167,c	;volatile
  1459   002094                     
  1460                           ; BSR set to: 15
  1461                           ;dc_motor.c: 52:     CCP2CONbits.EN=1;
  1462   002094  8EA7               	bsf	167,7,c	;volatile
  1463   002096                     
  1464                           ; BSR set to: 15
  1465                           ;dc_motor.c: 54:     CCP3CONbits.FMT=1;
  1466   002096  8926               	bsf	38,4,b	;volatile
  1467                           
  1468                           ;dc_motor.c: 55:     CCP3CONbits.CCP3MODE=0b1100;
  1469   002098  5126               	movf	38,w,b	;volatile
  1470   00209A  0BF0               	andlw	-16
  1471   00209C  090C               	iorlw	12
  1472   00209E  6F26               	movwf	38,b	;volatile
  1473   0020A0                     
  1474                           ; BSR set to: 15
  1475                           ;dc_motor.c: 56:     CCP3CONbits.EN=1;
  1476   0020A0  8F26               	bsf	38,7,b	;volatile
  1477   0020A2                     
  1478                           ; BSR set to: 15
  1479                           ;dc_motor.c: 58:     CCP4CONbits.FMT=1;
  1480   0020A2  8922               	bsf	34,4,b	;volatile
  1481                           
  1482                           ;dc_motor.c: 59:     CCP4CONbits.CCP4MODE=0b1100;
  1483   0020A4  5122               	movf	34,w,b	;volatile
  1484   0020A6  0BF0               	andlw	-16
  1485   0020A8  090C               	iorlw	12
  1486   0020AA  6F22               	movwf	34,b	;volatile
  1487   0020AC                     
  1488                           ; BSR set to: 15
  1489                           ;dc_motor.c: 60:     CCP4CONbits.EN=1;
  1490   0020AC  8F22               	bsf	34,7,b	;volatile
  1491   0020AE                     
  1492                           ; BSR set to: 15
  1493   0020AE  0012               	return		;funcret
  1494   0020B0                     __end_of_initDCmotorsPWM:
  1495                           	callstack 0
  1496                           
  1497 ;; *************** function _detect_color *****************
  1498 ;; Defined at:
  1499 ;;		line 99 in file "color.c"
  1500 ;; Parameters:    Size  Location     Type
  1501 ;;  tempval         2    4[BANK0 ] PTR struct RGB_val
  1502 ;;		 -> main@initial_color(8), 
  1503 ;; Auto vars:     Size  Location     Type
  1504 ;;  dist_B          1   21[BANK0 ] unsigned char 
  1505 ;;  dist_G          1   20[BANK0 ] unsigned char 
  1506 ;;  dist_R          1   19[BANK0 ] unsigned char 
  1507 ;;  color           1   18[BANK0 ] unsigned char 
  1508 ;; Return value:  Size  Location     Type
  1509 ;;                  1    wreg      unsigned char 
  1510 ;; Registers used:
  1511 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1512 ;; Tracked objects:
  1513 ;;		On entry : 0/0
  1514 ;;		On exit  : 0/0
  1515 ;;		Unchanged: 0/0
  1516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1517 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1518 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1519 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1520 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1521 ;;Total ram usage:       18 bytes
  1522 ;; Hardware stack levels used: 1
  1523 ;; Hardware stack levels required when called: 8
  1524 ;; This function calls:
  1525 ;;		___fldiv
  1526 ;;		___flmul
  1527 ;;		___fltol
  1528 ;;		___xxtofl
  1529 ;; This function is called by:
  1530 ;;		_main
  1531 ;; This function uses a non-reentrant model
  1532 ;;
  1533                           
  1534                           	psect	text2
  1535   00005C                     __ptext2:
  1536                           	callstack 0
  1537   00005C                     _detect_color:
  1538                           	callstack 22
  1539   00005C                     
  1540                           ;color.c: 99: unsigned char detect_color(RGB_val *tempval);color.c: 100: {;color.c: 101:
      +                               unsigned char color = 0;
  1541   00005C  0E00               	movlw	0
  1542   00005E  0100               	movlb	0	; () banked
  1543   000060  6FB0               	movwf	detect_color@color& (0+255),b
  1544   000062                     
  1545                           ; BSR set to: 0
  1546                           ;color.c: 104:     unsigned char dist_R, dist_G, dist_B;;color.c: 105:     dist_R = ((fl
      +                          oat)(tempval->R)/(float)(tempval->R + tempval->G + tempval->B))*100;
  1547   000062  0E00               	movlw	0
  1548   000064  6E34               	movwf	___flmul@a^0,c
  1549   000066  0E00               	movlw	0
  1550   000068  6E35               	movwf	(___flmul@a+1)^0,c
  1551   00006A  0EC8               	movlw	200
  1552   00006C  6E36               	movwf	(___flmul@a+2)^0,c
  1553   00006E  0E42               	movlw	66
  1554   000070  6E37               	movwf	(___flmul@a+3)^0,c
  1555   000072  EE20 F004          	lfsr	2,4
  1556   000076  51A2               	movf	detect_color@tempval& (0+255),w,b
  1557   000078  26D9               	addwf	fsr2l,f,c
  1558   00007A  51A3               	movf	(detect_color@tempval+1)& (0+255),w,b
  1559   00007C  22DA               	addwfc	fsr2h,f,c
  1560   00007E  CFDE F0A4          	movff	postinc2,??_detect_color
  1561   000082  CFDD F0A5          	movff	postdec2,??_detect_color+1
  1562   000086  EE20 F002          	lfsr	2,2
  1563   00008A  51A2               	movf	detect_color@tempval& (0+255),w,b
  1564   00008C  26D9               	addwf	fsr2l,f,c
  1565   00008E  51A3               	movf	(detect_color@tempval+1)& (0+255),w,b
  1566   000090  22DA               	addwfc	fsr2h,f,c
  1567   000092  CFDE F0A6          	movff	postinc2,??_detect_color+2
  1568   000096  CFDD F0A7          	movff	postdec2,??_detect_color+3
  1569   00009A  C0A2  FFD9         	movff	detect_color@tempval,fsr2l
  1570   00009E  C0A3  FFDA         	movff	detect_color@tempval+1,fsr2h
  1571   0000A2  CFDE F0A8          	movff	postinc2,??_detect_color+4
  1572   0000A6  CFDD F0A9          	movff	postdec2,??_detect_color+5
  1573   0000AA  51A6               	movf	(??_detect_color+2)& (0+255),w,b
  1574   0000AC  25A8               	addwf	(??_detect_color+4)& (0+255),w,b
  1575   0000AE  6FAA               	movwf	(??_detect_color+6)& (0+255),b
  1576   0000B0  51A7               	movf	(??_detect_color+3)& (0+255),w,b
  1577   0000B2  21A9               	addwfc	(??_detect_color+5)& (0+255),w,b
  1578   0000B4  6FAB               	movwf	(??_detect_color+7)& (0+255),b
  1579   0000B6  51A4               	movf	??_detect_color& (0+255),w,b
  1580   0000B8  25AA               	addwf	(??_detect_color+6)& (0+255),w,b
  1581   0000BA  6FAC               	movwf	(??_detect_color+8)& (0+255),b
  1582   0000BC  51A5               	movf	(??_detect_color+1)& (0+255),w,b
  1583   0000BE  21AB               	addwfc	(??_detect_color+7)& (0+255),w,b
  1584   0000C0  6FAD               	movwf	(??_detect_color+9)& (0+255),b
  1585   0000C2  C0AC  F009         	movff	??_detect_color+8,___xxtofl@val
  1586   0000C6  C0AD  F00A         	movff	??_detect_color+9,___xxtofl@val+1
  1587   0000CA  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1588   0000CC  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1589   0000CE  0E00               	movlw	0
  1590   0000D0  EC88  F009         	call	___xxtofl
  1591   0000D4  C009  F01B         	movff	?___xxtofl,___fldiv@a
  1592   0000D8  C00A  F01C         	movff	?___xxtofl+1,___fldiv@a+1
  1593   0000DC  C00B  F01D         	movff	?___xxtofl+2,___fldiv@a+2
  1594   0000E0  C00C  F01E         	movff	?___xxtofl+3,___fldiv@a+3
  1595   0000E4  C0A2  FFD9         	movff	detect_color@tempval,fsr2l
  1596   0000E8  C0A3  FFDA         	movff	detect_color@tempval+1,fsr2h
  1597   0000EC  CFDE F0AE          	movff	postinc2,??_detect_color+10
  1598   0000F0  CFDD F0AF          	movff	postdec2,??_detect_color+11
  1599   0000F4  C0AE  F009         	movff	??_detect_color+10,___xxtofl@val
  1600   0000F8  C0AF  F00A         	movff	??_detect_color+11,___xxtofl@val+1
  1601   0000FC  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1602   0000FE  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1603   000100  0E00               	movlw	0
  1604   000102  EC88  F009         	call	___xxtofl
  1605   000106  C009  F017         	movff	?___xxtofl,___fldiv@b
  1606   00010A  C00A  F018         	movff	?___xxtofl+1,___fldiv@b+1
  1607   00010E  C00B  F019         	movff	?___xxtofl+2,___fldiv@b+2
  1608   000112  C00C  F01A         	movff	?___xxtofl+3,___fldiv@b+3
  1609   000116  EC53  F005         	call	___fldiv	;wreg free
  1610   00011A  C017  F030         	movff	?___fldiv,___flmul@b
  1611   00011E  C018  F031         	movff	?___fldiv+1,___flmul@b+1
  1612   000122  C019  F032         	movff	?___fldiv+2,___flmul@b+2
  1613   000126  C01A  F033         	movff	?___fldiv+3,___flmul@b+3
  1614   00012A  EC3E  F003         	call	___flmul	;wreg free
  1615   00012E  C030  F049         	movff	?___flmul,___fltol@f1
  1616   000132  C031  F04A         	movff	?___flmul+1,___fltol@f1+1
  1617   000136  C032  F04B         	movff	?___flmul+2,___fltol@f1+2
  1618   00013A  C033  F04C         	movff	?___flmul+3,___fltol@f1+3
  1619   00013E  EC18  F00B         	call	___fltol	;wreg free
  1620   000142  5049               	movf	?___fltol^0,w,c
  1621   000144  0100               	movlb	0	; () banked
  1622   000146  6FB1               	movwf	detect_color@dist_R& (0+255),b
  1623   000148                     
  1624                           ; BSR set to: 0
  1625                           ;color.c: 106:     dist_G = ((float)(tempval->G)/(float)(tempval->R + tempval->G + tempv
      +                          al->B))*100;
  1626   000148  0E00               	movlw	0
  1627   00014A  6E34               	movwf	___flmul@a^0,c
  1628   00014C  0E00               	movlw	0
  1629   00014E  6E35               	movwf	(___flmul@a+1)^0,c
  1630   000150  0EC8               	movlw	200
  1631   000152  6E36               	movwf	(___flmul@a+2)^0,c
  1632   000154  0E42               	movlw	66
  1633   000156  6E37               	movwf	(___flmul@a+3)^0,c
  1634   000158  EE20 F004          	lfsr	2,4
  1635   00015C  51A2               	movf	detect_color@tempval& (0+255),w,b
  1636   00015E  26D9               	addwf	fsr2l,f,c
  1637   000160  51A3               	movf	(detect_color@tempval+1)& (0+255),w,b
  1638   000162  22DA               	addwfc	fsr2h,f,c
  1639   000164  CFDE F0A4          	movff	postinc2,??_detect_color
  1640   000168  CFDD F0A5          	movff	postdec2,??_detect_color+1
  1641   00016C  EE20 F002          	lfsr	2,2
  1642   000170  51A2               	movf	detect_color@tempval& (0+255),w,b
  1643   000172  26D9               	addwf	fsr2l,f,c
  1644   000174  51A3               	movf	(detect_color@tempval+1)& (0+255),w,b
  1645   000176  22DA               	addwfc	fsr2h,f,c
  1646   000178  CFDE F0A6          	movff	postinc2,??_detect_color+2
  1647   00017C  CFDD F0A7          	movff	postdec2,??_detect_color+3
  1648   000180  C0A2  FFD9         	movff	detect_color@tempval,fsr2l
  1649   000184  C0A3  FFDA         	movff	detect_color@tempval+1,fsr2h
  1650   000188  CFDE F0A8          	movff	postinc2,??_detect_color+4
  1651   00018C  CFDD F0A9          	movff	postdec2,??_detect_color+5
  1652   000190  51A6               	movf	(??_detect_color+2)& (0+255),w,b
  1653   000192  25A8               	addwf	(??_detect_color+4)& (0+255),w,b
  1654   000194  6FAA               	movwf	(??_detect_color+6)& (0+255),b
  1655   000196  51A7               	movf	(??_detect_color+3)& (0+255),w,b
  1656   000198  21A9               	addwfc	(??_detect_color+5)& (0+255),w,b
  1657   00019A  6FAB               	movwf	(??_detect_color+7)& (0+255),b
  1658   00019C  51A4               	movf	??_detect_color& (0+255),w,b
  1659   00019E  25AA               	addwf	(??_detect_color+6)& (0+255),w,b
  1660   0001A0  6FAC               	movwf	(??_detect_color+8)& (0+255),b
  1661   0001A2  51A5               	movf	(??_detect_color+1)& (0+255),w,b
  1662   0001A4  21AB               	addwfc	(??_detect_color+7)& (0+255),w,b
  1663   0001A6  6FAD               	movwf	(??_detect_color+9)& (0+255),b
  1664   0001A8  C0AC  F009         	movff	??_detect_color+8,___xxtofl@val
  1665   0001AC  C0AD  F00A         	movff	??_detect_color+9,___xxtofl@val+1
  1666   0001B0  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1667   0001B2  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1668   0001B4  0E00               	movlw	0
  1669   0001B6  EC88  F009         	call	___xxtofl
  1670   0001BA  C009  F01B         	movff	?___xxtofl,___fldiv@a
  1671   0001BE  C00A  F01C         	movff	?___xxtofl+1,___fldiv@a+1
  1672   0001C2  C00B  F01D         	movff	?___xxtofl+2,___fldiv@a+2
  1673   0001C6  C00C  F01E         	movff	?___xxtofl+3,___fldiv@a+3
  1674   0001CA  0100               	movlb	0	; () banked
  1675   0001CC  EE20 F002          	lfsr	2,2
  1676   0001D0  51A2               	movf	detect_color@tempval& (0+255),w,b
  1677   0001D2  26D9               	addwf	fsr2l,f,c
  1678   0001D4  51A3               	movf	(detect_color@tempval+1)& (0+255),w,b
  1679   0001D6  22DA               	addwfc	fsr2h,f,c
  1680   0001D8  CFDE F0AE          	movff	postinc2,??_detect_color+10
  1681   0001DC  CFDD F0AF          	movff	postdec2,??_detect_color+11
  1682   0001E0  C0AE  F009         	movff	??_detect_color+10,___xxtofl@val
  1683   0001E4  C0AF  F00A         	movff	??_detect_color+11,___xxtofl@val+1
  1684   0001E8  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1685   0001EA  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1686   0001EC  0E00               	movlw	0
  1687   0001EE  EC88  F009         	call	___xxtofl
  1688   0001F2  C009  F017         	movff	?___xxtofl,___fldiv@b
  1689   0001F6  C00A  F018         	movff	?___xxtofl+1,___fldiv@b+1
  1690   0001FA  C00B  F019         	movff	?___xxtofl+2,___fldiv@b+2
  1691   0001FE  C00C  F01A         	movff	?___xxtofl+3,___fldiv@b+3
  1692   000202  EC53  F005         	call	___fldiv	;wreg free
  1693   000206  C017  F030         	movff	?___fldiv,___flmul@b
  1694   00020A  C018  F031         	movff	?___fldiv+1,___flmul@b+1
  1695   00020E  C019  F032         	movff	?___fldiv+2,___flmul@b+2
  1696   000212  C01A  F033         	movff	?___fldiv+3,___flmul@b+3
  1697   000216  EC3E  F003         	call	___flmul	;wreg free
  1698   00021A  C030  F049         	movff	?___flmul,___fltol@f1
  1699   00021E  C031  F04A         	movff	?___flmul+1,___fltol@f1+1
  1700   000222  C032  F04B         	movff	?___flmul+2,___fltol@f1+2
  1701   000226  C033  F04C         	movff	?___flmul+3,___fltol@f1+3
  1702   00022A  EC18  F00B         	call	___fltol	;wreg free
  1703   00022E  5049               	movf	?___fltol^0,w,c
  1704   000230  0100               	movlb	0	; () banked
  1705   000232  6FB2               	movwf	detect_color@dist_G& (0+255),b
  1706   000234                     
  1707                           ; BSR set to: 0
  1708                           ;color.c: 107:     dist_B = ((float)(tempval->B)/(float)(tempval->R + tempval->G + tempv
      +                          al->B))*100;
  1709   000234  0E00               	movlw	0
  1710   000236  6E34               	movwf	___flmul@a^0,c
  1711   000238  0E00               	movlw	0
  1712   00023A  6E35               	movwf	(___flmul@a+1)^0,c
  1713   00023C  0EC8               	movlw	200
  1714   00023E  6E36               	movwf	(___flmul@a+2)^0,c
  1715   000240  0E42               	movlw	66
  1716   000242  6E37               	movwf	(___flmul@a+3)^0,c
  1717   000244  EE20 F004          	lfsr	2,4
  1718   000248  51A2               	movf	detect_color@tempval& (0+255),w,b
  1719   00024A  26D9               	addwf	fsr2l,f,c
  1720   00024C  51A3               	movf	(detect_color@tempval+1)& (0+255),w,b
  1721   00024E  22DA               	addwfc	fsr2h,f,c
  1722   000250  CFDE F0A4          	movff	postinc2,??_detect_color
  1723   000254  CFDD F0A5          	movff	postdec2,??_detect_color+1
  1724   000258  EE20 F002          	lfsr	2,2
  1725   00025C  51A2               	movf	detect_color@tempval& (0+255),w,b
  1726   00025E  26D9               	addwf	fsr2l,f,c
  1727   000260  51A3               	movf	(detect_color@tempval+1)& (0+255),w,b
  1728   000262  22DA               	addwfc	fsr2h,f,c
  1729   000264  CFDE F0A6          	movff	postinc2,??_detect_color+2
  1730   000268  CFDD F0A7          	movff	postdec2,??_detect_color+3
  1731   00026C  C0A2  FFD9         	movff	detect_color@tempval,fsr2l
  1732   000270  C0A3  FFDA         	movff	detect_color@tempval+1,fsr2h
  1733   000274  CFDE F0A8          	movff	postinc2,??_detect_color+4
  1734   000278  CFDD F0A9          	movff	postdec2,??_detect_color+5
  1735   00027C  51A6               	movf	(??_detect_color+2)& (0+255),w,b
  1736   00027E  25A8               	addwf	(??_detect_color+4)& (0+255),w,b
  1737   000280  6FAA               	movwf	(??_detect_color+6)& (0+255),b
  1738   000282  51A7               	movf	(??_detect_color+3)& (0+255),w,b
  1739   000284  21A9               	addwfc	(??_detect_color+5)& (0+255),w,b
  1740   000286  6FAB               	movwf	(??_detect_color+7)& (0+255),b
  1741   000288  51A4               	movf	??_detect_color& (0+255),w,b
  1742   00028A  25AA               	addwf	(??_detect_color+6)& (0+255),w,b
  1743   00028C  6FAC               	movwf	(??_detect_color+8)& (0+255),b
  1744   00028E  51A5               	movf	(??_detect_color+1)& (0+255),w,b
  1745   000290  21AB               	addwfc	(??_detect_color+7)& (0+255),w,b
  1746   000292  6FAD               	movwf	(??_detect_color+9)& (0+255),b
  1747   000294  C0AC  F009         	movff	??_detect_color+8,___xxtofl@val
  1748   000298  C0AD  F00A         	movff	??_detect_color+9,___xxtofl@val+1
  1749   00029C  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1750   00029E  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1751   0002A0  0E00               	movlw	0
  1752   0002A2  EC88  F009         	call	___xxtofl
  1753   0002A6  C009  F01B         	movff	?___xxtofl,___fldiv@a
  1754   0002AA  C00A  F01C         	movff	?___xxtofl+1,___fldiv@a+1
  1755   0002AE  C00B  F01D         	movff	?___xxtofl+2,___fldiv@a+2
  1756   0002B2  C00C  F01E         	movff	?___xxtofl+3,___fldiv@a+3
  1757   0002B6  0100               	movlb	0	; () banked
  1758   0002B8  EE20 F004          	lfsr	2,4
  1759   0002BC  51A2               	movf	detect_color@tempval& (0+255),w,b
  1760   0002BE  26D9               	addwf	fsr2l,f,c
  1761   0002C0  51A3               	movf	(detect_color@tempval+1)& (0+255),w,b
  1762   0002C2  22DA               	addwfc	fsr2h,f,c
  1763   0002C4  CFDE F0AE          	movff	postinc2,??_detect_color+10
  1764   0002C8  CFDD F0AF          	movff	postdec2,??_detect_color+11
  1765   0002CC  C0AE  F009         	movff	??_detect_color+10,___xxtofl@val
  1766   0002D0  C0AF  F00A         	movff	??_detect_color+11,___xxtofl@val+1
  1767   0002D4  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1768   0002D6  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1769   0002D8  0E00               	movlw	0
  1770   0002DA  EC88  F009         	call	___xxtofl
  1771   0002DE  C009  F017         	movff	?___xxtofl,___fldiv@b
  1772   0002E2  C00A  F018         	movff	?___xxtofl+1,___fldiv@b+1
  1773   0002E6  C00B  F019         	movff	?___xxtofl+2,___fldiv@b+2
  1774   0002EA  C00C  F01A         	movff	?___xxtofl+3,___fldiv@b+3
  1775   0002EE  EC53  F005         	call	___fldiv	;wreg free
  1776   0002F2  C017  F030         	movff	?___fldiv,___flmul@b
  1777   0002F6  C018  F031         	movff	?___fldiv+1,___flmul@b+1
  1778   0002FA  C019  F032         	movff	?___fldiv+2,___flmul@b+2
  1779   0002FE  C01A  F033         	movff	?___fldiv+3,___flmul@b+3
  1780   000302  EC3E  F003         	call	___flmul	;wreg free
  1781   000306  C030  F049         	movff	?___flmul,___fltol@f1
  1782   00030A  C031  F04A         	movff	?___flmul+1,___fltol@f1+1
  1783   00030E  C032  F04B         	movff	?___flmul+2,___fltol@f1+2
  1784   000312  C033  F04C         	movff	?___flmul+3,___fltol@f1+3
  1785   000316  EC18  F00B         	call	___fltol	;wreg free
  1786   00031A  5049               	movf	?___fltol^0,w,c
  1787   00031C  0100               	movlb	0	; () banked
  1788   00031E  6FB3               	movwf	detect_color@dist_B& (0+255),b
  1789   000320                     
  1790                           ; BSR set to: 0
  1791                           ;color.c: 109:     if(color_flag){
  1792   000320  5055               	movf	_color_flag^0,w,c
  1793   000322  B4D8               	btfsc	status,2,c
  1794   000324  EF96  F001         	goto	u3961
  1795   000328  EF98  F001         	goto	u3960
  1796   00032C                     u3961:
  1797   00032C  EF3A  F003         	goto	l42
  1798   000330                     u3960:
  1799   000330                     
  1800                           ; BSR set to: 0
  1801                           ;color.c: 110:         if((74<=dist_R) && (dist_R<=76) && (10<=dist_G) && (dist_G<=12) &
      +                          & (13<=dist_B) && (dist_B<=15)){
  1802   000330  0E49               	movlw	73
  1803   000332  65B1               	cpfsgt	detect_color@dist_R& (0+255),b
  1804   000334  EF9E  F001         	goto	u3971
  1805   000338  EFA0  F001         	goto	u3970
  1806   00033C                     u3971:
  1807   00033C  EFCC  F001         	goto	l4099
  1808   000340                     u3970:
  1809   000340                     
  1810                           ; BSR set to: 0
  1811   000340  0E4D               	movlw	77
  1812   000342  61B1               	cpfslt	detect_color@dist_R& (0+255),b
  1813   000344  EFA6  F001         	goto	u3981
  1814   000348  EFA8  F001         	goto	u3980
  1815   00034C                     u3981:
  1816   00034C  EFCC  F001         	goto	l4099
  1817   000350                     u3980:
  1818   000350                     
  1819                           ; BSR set to: 0
  1820   000350  0E09               	movlw	9
  1821   000352  65B2               	cpfsgt	detect_color@dist_G& (0+255),b
  1822   000354  EFAE  F001         	goto	u3991
  1823   000358  EFB0  F001         	goto	u3990
  1824   00035C                     u3991:
  1825   00035C  EFCC  F001         	goto	l4099
  1826   000360                     u3990:
  1827   000360                     
  1828                           ; BSR set to: 0
  1829   000360  0E0D               	movlw	13
  1830   000362  61B2               	cpfslt	detect_color@dist_G& (0+255),b
  1831   000364  EFB6  F001         	goto	u4001
  1832   000368  EFB8  F001         	goto	u4000
  1833   00036C                     u4001:
  1834   00036C  EFCC  F001         	goto	l4099
  1835   000370                     u4000:
  1836   000370                     
  1837                           ; BSR set to: 0
  1838   000370  0E0C               	movlw	12
  1839   000372  65B3               	cpfsgt	detect_color@dist_B& (0+255),b
  1840   000374  EFBE  F001         	goto	u4011
  1841   000378  EFC0  F001         	goto	u4010
  1842   00037C                     u4011:
  1843   00037C  EFCC  F001         	goto	l4099
  1844   000380                     u4010:
  1845   000380                     
  1846                           ; BSR set to: 0
  1847   000380  0E10               	movlw	16
  1848   000382  61B3               	cpfslt	detect_color@dist_B& (0+255),b
  1849   000384  EFC6  F001         	goto	u4021
  1850   000388  EFC8  F001         	goto	u4020
  1851   00038C                     u4021:
  1852   00038C  EFCC  F001         	goto	l4099
  1853   000390                     u4020:
  1854   000390                     
  1855                           ; BSR set to: 0
  1856                           ;color.c: 111:             color = 1;
  1857   000390  0E01               	movlw	1
  1858   000392  6FB0               	movwf	detect_color@color& (0+255),b
  1859                           
  1860                           ;color.c: 112:         }
  1861   000394  EF3A  F003         	goto	l42
  1862   000398                     l4099:
  1863                           
  1864                           ; BSR set to: 0
  1865   000398  0E23               	movlw	35
  1866   00039A  65B1               	cpfsgt	detect_color@dist_R& (0+255),b
  1867   00039C  EFD2  F001         	goto	u4031
  1868   0003A0  EFD4  F001         	goto	u4030
  1869   0003A4                     u4031:
  1870   0003A4  EF00  F002         	goto	l4113
  1871   0003A8                     u4030:
  1872   0003A8                     
  1873                           ; BSR set to: 0
  1874   0003A8  0E27               	movlw	39
  1875   0003AA  61B1               	cpfslt	detect_color@dist_R& (0+255),b
  1876   0003AC  EFDA  F001         	goto	u4041
  1877   0003B0  EFDC  F001         	goto	u4040
  1878   0003B4                     u4041:
  1879   0003B4  EF00  F002         	goto	l4113
  1880   0003B8                     u4040:
  1881   0003B8                     
  1882                           ; BSR set to: 0
  1883   0003B8  0E28               	movlw	40
  1884   0003BA  65B2               	cpfsgt	detect_color@dist_G& (0+255),b
  1885   0003BC  EFE2  F001         	goto	u4051
  1886   0003C0  EFE4  F001         	goto	u4050
  1887   0003C4                     u4051:
  1888   0003C4  EF00  F002         	goto	l4113
  1889   0003C8                     u4050:
  1890   0003C8                     
  1891                           ; BSR set to: 0
  1892   0003C8  0E2C               	movlw	44
  1893   0003CA  61B2               	cpfslt	detect_color@dist_G& (0+255),b
  1894   0003CC  EFEA  F001         	goto	u4061
  1895   0003D0  EFEC  F001         	goto	u4060
  1896   0003D4                     u4061:
  1897   0003D4  EF00  F002         	goto	l4113
  1898   0003D8                     u4060:
  1899   0003D8                     
  1900                           ; BSR set to: 0
  1901   0003D8  0E13               	movlw	19
  1902   0003DA  65B3               	cpfsgt	detect_color@dist_B& (0+255),b
  1903   0003DC  EFF2  F001         	goto	u4071
  1904   0003E0  EFF4  F001         	goto	u4070
  1905   0003E4                     u4071:
  1906   0003E4  EF00  F002         	goto	l4113
  1907   0003E8                     u4070:
  1908   0003E8                     
  1909                           ; BSR set to: 0
  1910   0003E8  0E17               	movlw	23
  1911   0003EA  61B3               	cpfslt	detect_color@dist_B& (0+255),b
  1912   0003EC  EFFA  F001         	goto	u4081
  1913   0003F0  EFFC  F001         	goto	u4080
  1914   0003F4                     u4081:
  1915   0003F4  EF00  F002         	goto	l4113
  1916   0003F8                     u4080:
  1917   0003F8                     
  1918                           ; BSR set to: 0
  1919                           ;color.c: 114:             color = 2;
  1920   0003F8  0E02               	movlw	2
  1921   0003FA  6FB0               	movwf	detect_color@color& (0+255),b
  1922                           
  1923                           ;color.c: 115:         }
  1924   0003FC  EF3A  F003         	goto	l42
  1925   000400                     l4113:
  1926                           
  1927                           ; BSR set to: 0
  1928   000400  0E1C               	movlw	28
  1929   000402  65B1               	cpfsgt	detect_color@dist_R& (0+255),b
  1930   000404  EF06  F002         	goto	u4091
  1931   000408  EF08  F002         	goto	u4090
  1932   00040C                     u4091:
  1933   00040C  EF34  F002         	goto	l4127
  1934   000410                     u4090:
  1935   000410                     
  1936                           ; BSR set to: 0
  1937   000410  0E23               	movlw	35
  1938   000412  61B1               	cpfslt	detect_color@dist_R& (0+255),b
  1939   000414  EF0E  F002         	goto	u4101
  1940   000418  EF10  F002         	goto	u4100
  1941   00041C                     u4101:
  1942   00041C  EF34  F002         	goto	l4127
  1943   000420                     u4100:
  1944   000420                     
  1945                           ; BSR set to: 0
  1946   000420  0E1F               	movlw	31
  1947   000422  65B2               	cpfsgt	detect_color@dist_G& (0+255),b
  1948   000424  EF16  F002         	goto	u4111
  1949   000428  EF18  F002         	goto	u4110
  1950   00042C                     u4111:
  1951   00042C  EF34  F002         	goto	l4127
  1952   000430                     u4110:
  1953   000430                     
  1954                           ; BSR set to: 0
  1955   000430  0E27               	movlw	39
  1956   000432  61B2               	cpfslt	detect_color@dist_G& (0+255),b
  1957   000434  EF1E  F002         	goto	u4121
  1958   000438  EF20  F002         	goto	u4120
  1959   00043C                     u4121:
  1960   00043C  EF34  F002         	goto	l4127
  1961   000440                     u4120:
  1962   000440                     
  1963                           ; BSR set to: 0
  1964   000440  0E1E               	movlw	30
  1965   000442  65B3               	cpfsgt	detect_color@dist_B& (0+255),b
  1966   000444  EF26  F002         	goto	u4131
  1967   000448  EF28  F002         	goto	u4130
  1968   00044C                     u4131:
  1969   00044C  EF34  F002         	goto	l4127
  1970   000450                     u4130:
  1971   000450                     
  1972                           ; BSR set to: 0
  1973   000450  0E26               	movlw	38
  1974   000452  61B3               	cpfslt	detect_color@dist_B& (0+255),b
  1975   000454  EF2E  F002         	goto	u4141
  1976   000458  EF30  F002         	goto	u4140
  1977   00045C                     u4141:
  1978   00045C  EF34  F002         	goto	l4127
  1979   000460                     u4140:
  1980   000460                     
  1981                           ; BSR set to: 0
  1982                           ;color.c: 117:             color = 3;
  1983   000460  0E03               	movlw	3
  1984   000462  6FB0               	movwf	detect_color@color& (0+255),b
  1985                           
  1986                           ;color.c: 118:         }
  1987   000464  EF3A  F003         	goto	l42
  1988   000468                     l4127:
  1989                           
  1990                           ; BSR set to: 0
  1991   000468  0E31               	movlw	49
  1992   00046A  65B1               	cpfsgt	detect_color@dist_R& (0+255),b
  1993   00046C  EF3A  F002         	goto	u4151
  1994   000470  EF3C  F002         	goto	u4150
  1995   000474                     u4151:
  1996   000474  EF68  F002         	goto	l4141
  1997   000478                     u4150:
  1998   000478                     
  1999                           ; BSR set to: 0
  2000   000478  0E35               	movlw	53
  2001   00047A  61B1               	cpfslt	detect_color@dist_R& (0+255),b
  2002   00047C  EF42  F002         	goto	u4161
  2003   000480  EF44  F002         	goto	u4160
  2004   000484                     u4161:
  2005   000484  EF68  F002         	goto	l4141
  2006   000488                     u4160:
  2007   000488                     
  2008                           ; BSR set to: 0
  2009   000488  0E1D               	movlw	29
  2010   00048A  65B2               	cpfsgt	detect_color@dist_G& (0+255),b
  2011   00048C  EF4A  F002         	goto	u4171
  2012   000490  EF4C  F002         	goto	u4170
  2013   000494                     u4171:
  2014   000494  EF68  F002         	goto	l4141
  2015   000498                     u4170:
  2016   000498                     
  2017                           ; BSR set to: 0
  2018   000498  0E21               	movlw	33
  2019   00049A  61B2               	cpfslt	detect_color@dist_G& (0+255),b
  2020   00049C  EF52  F002         	goto	u4181
  2021   0004A0  EF54  F002         	goto	u4180
  2022   0004A4                     u4181:
  2023   0004A4  EF68  F002         	goto	l4141
  2024   0004A8                     u4180:
  2025   0004A8                     
  2026                           ; BSR set to: 0
  2027   0004A8  0E10               	movlw	16
  2028   0004AA  65B3               	cpfsgt	detect_color@dist_B& (0+255),b
  2029   0004AC  EF5A  F002         	goto	u4191
  2030   0004B0  EF5C  F002         	goto	u4190
  2031   0004B4                     u4191:
  2032   0004B4  EF68  F002         	goto	l4141
  2033   0004B8                     u4190:
  2034   0004B8                     
  2035                           ; BSR set to: 0
  2036   0004B8  0E14               	movlw	20
  2037   0004BA  61B3               	cpfslt	detect_color@dist_B& (0+255),b
  2038   0004BC  EF62  F002         	goto	u4201
  2039   0004C0  EF64  F002         	goto	u4200
  2040   0004C4                     u4201:
  2041   0004C4  EF68  F002         	goto	l4141
  2042   0004C8                     u4200:
  2043   0004C8                     
  2044                           ; BSR set to: 0
  2045                           ;color.c: 120:             color = 4;
  2046   0004C8  0E04               	movlw	4
  2047   0004CA  6FB0               	movwf	detect_color@color& (0+255),b
  2048                           
  2049                           ;color.c: 121:         }
  2050   0004CC  EF3A  F003         	goto	l42
  2051   0004D0                     l4141:
  2052                           
  2053                           ; BSR set to: 0
  2054   0004D0  0E2F               	movlw	47
  2055   0004D2  65B1               	cpfsgt	detect_color@dist_R& (0+255),b
  2056   0004D4  EF6E  F002         	goto	u4211
  2057   0004D8  EF70  F002         	goto	u4210
  2058   0004DC                     u4211:
  2059   0004DC  EF9C  F002         	goto	l4155
  2060   0004E0                     u4210:
  2061   0004E0                     
  2062                           ; BSR set to: 0
  2063   0004E0  0E33               	movlw	51
  2064   0004E2  61B1               	cpfslt	detect_color@dist_R& (0+255),b
  2065   0004E4  EF76  F002         	goto	u4221
  2066   0004E8  EF78  F002         	goto	u4220
  2067   0004EC                     u4221:
  2068   0004EC  EF9C  F002         	goto	l4155
  2069   0004F0                     u4220:
  2070   0004F0                     
  2071                           ; BSR set to: 0
  2072   0004F0  0E1B               	movlw	27
  2073   0004F2  65B2               	cpfsgt	detect_color@dist_G& (0+255),b
  2074   0004F4  EF7E  F002         	goto	u4231
  2075   0004F8  EF80  F002         	goto	u4230
  2076   0004FC                     u4231:
  2077   0004FC  EF9C  F002         	goto	l4155
  2078   000500                     u4230:
  2079   000500                     
  2080                           ; BSR set to: 0
  2081   000500  0E1F               	movlw	31
  2082   000502  61B2               	cpfslt	detect_color@dist_G& (0+255),b
  2083   000504  EF86  F002         	goto	u4241
  2084   000508  EF88  F002         	goto	u4240
  2085   00050C                     u4241:
  2086   00050C  EF9C  F002         	goto	l4155
  2087   000510                     u4240:
  2088   000510                     
  2089                           ; BSR set to: 0
  2090   000510  0E14               	movlw	20
  2091   000512  65B3               	cpfsgt	detect_color@dist_B& (0+255),b
  2092   000514  EF8E  F002         	goto	u4251
  2093   000518  EF90  F002         	goto	u4250
  2094   00051C                     u4251:
  2095   00051C  EF9C  F002         	goto	l4155
  2096   000520                     u4250:
  2097   000520                     
  2098                           ; BSR set to: 0
  2099   000520  0E18               	movlw	24
  2100   000522  61B3               	cpfslt	detect_color@dist_B& (0+255),b
  2101   000524  EF96  F002         	goto	u4261
  2102   000528  EF98  F002         	goto	u4260
  2103   00052C                     u4261:
  2104   00052C  EF9C  F002         	goto	l4155
  2105   000530                     u4260:
  2106   000530                     
  2107                           ; BSR set to: 0
  2108                           ;color.c: 123:             color = 5;
  2109   000530  0E05               	movlw	5
  2110   000532  6FB0               	movwf	detect_color@color& (0+255),b
  2111                           
  2112                           ;color.c: 124:         }
  2113   000534  EF3A  F003         	goto	l42
  2114   000538                     l4155:
  2115                           
  2116                           ; BSR set to: 0
  2117   000538  0E3A               	movlw	58
  2118   00053A  65B1               	cpfsgt	detect_color@dist_R& (0+255),b
  2119   00053C  EFA2  F002         	goto	u4271
  2120   000540  EFA4  F002         	goto	u4270
  2121   000544                     u4271:
  2122   000544  EFD0  F002         	goto	l4169
  2123   000548                     u4270:
  2124   000548                     
  2125                           ; BSR set to: 0
  2126   000548  0E3E               	movlw	62
  2127   00054A  61B1               	cpfslt	detect_color@dist_R& (0+255),b
  2128   00054C  EFAA  F002         	goto	u4281
  2129   000550  EFAC  F002         	goto	u4280
  2130   000554                     u4281:
  2131   000554  EFD0  F002         	goto	l4169
  2132   000558                     u4280:
  2133   000558                     
  2134                           ; BSR set to: 0
  2135   000558  0E15               	movlw	21
  2136   00055A  65B2               	cpfsgt	detect_color@dist_G& (0+255),b
  2137   00055C  EFB2  F002         	goto	u4291
  2138   000560  EFB4  F002         	goto	u4290
  2139   000564                     u4291:
  2140   000564  EFD0  F002         	goto	l4169
  2141   000568                     u4290:
  2142   000568                     
  2143                           ; BSR set to: 0
  2144   000568  0E19               	movlw	25
  2145   00056A  61B2               	cpfslt	detect_color@dist_G& (0+255),b
  2146   00056C  EFBA  F002         	goto	u4301
  2147   000570  EFBC  F002         	goto	u4300
  2148   000574                     u4301:
  2149   000574  EFD0  F002         	goto	l4169
  2150   000578                     u4300:
  2151   000578                     
  2152                           ; BSR set to: 0
  2153   000578  0E0F               	movlw	15
  2154   00057A  65B3               	cpfsgt	detect_color@dist_B& (0+255),b
  2155   00057C  EFC2  F002         	goto	u4311
  2156   000580  EFC4  F002         	goto	u4310
  2157   000584                     u4311:
  2158   000584  EFD0  F002         	goto	l4169
  2159   000588                     u4310:
  2160   000588                     
  2161                           ; BSR set to: 0
  2162   000588  0E13               	movlw	19
  2163   00058A  61B3               	cpfslt	detect_color@dist_B& (0+255),b
  2164   00058C  EFCA  F002         	goto	u4321
  2165   000590  EFCC  F002         	goto	u4320
  2166   000594                     u4321:
  2167   000594  EFD0  F002         	goto	l4169
  2168   000598                     u4320:
  2169   000598                     
  2170                           ; BSR set to: 0
  2171                           ;color.c: 126:             color = 6;
  2172   000598  0E06               	movlw	6
  2173   00059A  6FB0               	movwf	detect_color@color& (0+255),b
  2174                           
  2175                           ;color.c: 127:         }
  2176   00059C  EF3A  F003         	goto	l42
  2177   0005A0                     l4169:
  2178                           
  2179                           ; BSR set to: 0
  2180   0005A0  0E20               	movlw	32
  2181   0005A2  65B1               	cpfsgt	detect_color@dist_R& (0+255),b
  2182   0005A4  EFD6  F002         	goto	u4331
  2183   0005A8  EFD8  F002         	goto	u4330
  2184   0005AC                     u4331:
  2185   0005AC  EF04  F003         	goto	l4183
  2186   0005B0                     u4330:
  2187   0005B0                     
  2188                           ; BSR set to: 0
  2189   0005B0  0E24               	movlw	36
  2190   0005B2  61B1               	cpfslt	detect_color@dist_R& (0+255),b
  2191   0005B4  EFDE  F002         	goto	u4341
  2192   0005B8  EFE0  F002         	goto	u4340
  2193   0005BC                     u4341:
  2194   0005BC  EF04  F003         	goto	l4183
  2195   0005C0                     u4340:
  2196   0005C0                     
  2197                           ; BSR set to: 0
  2198   0005C0  0E25               	movlw	37
  2199   0005C2  65B2               	cpfsgt	detect_color@dist_G& (0+255),b
  2200   0005C4  EFE6  F002         	goto	u4351
  2201   0005C8  EFE8  F002         	goto	u4350
  2202   0005CC                     u4351:
  2203   0005CC  EF04  F003         	goto	l4183
  2204   0005D0                     u4350:
  2205   0005D0                     
  2206                           ; BSR set to: 0
  2207   0005D0  0E29               	movlw	41
  2208   0005D2  61B2               	cpfslt	detect_color@dist_G& (0+255),b
  2209   0005D4  EFEE  F002         	goto	u4361
  2210   0005D8  EFF0  F002         	goto	u4360
  2211   0005DC                     u4361:
  2212   0005DC  EF04  F003         	goto	l4183
  2213   0005E0                     u4360:
  2214   0005E0                     
  2215                           ; BSR set to: 0
  2216   0005E0  0E19               	movlw	25
  2217   0005E2  65B3               	cpfsgt	detect_color@dist_B& (0+255),b
  2218   0005E4  EFF6  F002         	goto	u4371
  2219   0005E8  EFF8  F002         	goto	u4370
  2220   0005EC                     u4371:
  2221   0005EC  EF04  F003         	goto	l4183
  2222   0005F0                     u4370:
  2223   0005F0                     
  2224                           ; BSR set to: 0
  2225   0005F0  0E1D               	movlw	29
  2226   0005F2  61B3               	cpfslt	detect_color@dist_B& (0+255),b
  2227   0005F4  EFFE  F002         	goto	u4381
  2228   0005F8  EF00  F003         	goto	u4380
  2229   0005FC                     u4381:
  2230   0005FC  EF04  F003         	goto	l4183
  2231   000600                     u4380:
  2232   000600                     
  2233                           ; BSR set to: 0
  2234                           ;color.c: 129:             color = 7;
  2235   000600  0E07               	movlw	7
  2236   000602  6FB0               	movwf	detect_color@color& (0+255),b
  2237                           
  2238                           ;color.c: 130:         }
  2239   000604  EF3A  F003         	goto	l42
  2240   000608                     l4183:
  2241                           
  2242                           ; BSR set to: 0
  2243   000608  0E2A               	movlw	42
  2244   00060A  65B1               	cpfsgt	detect_color@dist_R& (0+255),b
  2245   00060C  EF0A  F003         	goto	u4391
  2246   000610  EF0C  F003         	goto	u4390
  2247   000614                     u4391:
  2248   000614  EF38  F003         	goto	l4197
  2249   000618                     u4390:
  2250   000618                     
  2251                           ; BSR set to: 0
  2252   000618  0E2E               	movlw	46
  2253   00061A  61B1               	cpfslt	detect_color@dist_R& (0+255),b
  2254   00061C  EF12  F003         	goto	u4401
  2255   000620  EF14  F003         	goto	u4400
  2256   000624                     u4401:
  2257   000624  EF38  F003         	goto	l4197
  2258   000628                     u4400:
  2259   000628                     
  2260                           ; BSR set to: 0
  2261   000628  0E1F               	movlw	31
  2262   00062A  65B2               	cpfsgt	detect_color@dist_G& (0+255),b
  2263   00062C  EF1A  F003         	goto	u4411
  2264   000630  EF1C  F003         	goto	u4410
  2265   000634                     u4411:
  2266   000634  EF38  F003         	goto	l4197
  2267   000638                     u4410:
  2268   000638                     
  2269                           ; BSR set to: 0
  2270   000638  0E23               	movlw	35
  2271   00063A  61B2               	cpfslt	detect_color@dist_G& (0+255),b
  2272   00063C  EF22  F003         	goto	u4421
  2273   000640  EF24  F003         	goto	u4420
  2274   000644                     u4421:
  2275   000644  EF38  F003         	goto	l4197
  2276   000648                     u4420:
  2277   000648                     
  2278                           ; BSR set to: 0
  2279   000648  0E15               	movlw	21
  2280   00064A  65B3               	cpfsgt	detect_color@dist_B& (0+255),b
  2281   00064C  EF2A  F003         	goto	u4431
  2282   000650  EF2C  F003         	goto	u4430
  2283   000654                     u4431:
  2284   000654  EF38  F003         	goto	l4197
  2285   000658                     u4430:
  2286   000658                     
  2287                           ; BSR set to: 0
  2288   000658  0E19               	movlw	25
  2289   00065A  61B3               	cpfslt	detect_color@dist_B& (0+255),b
  2290   00065C  EF32  F003         	goto	u4441
  2291   000660  EF34  F003         	goto	u4440
  2292   000664                     u4441:
  2293   000664  EF38  F003         	goto	l4197
  2294   000668                     u4440:
  2295   000668                     
  2296                           ; BSR set to: 0
  2297                           ;color.c: 132:             color = 8;
  2298   000668  0E08               	movlw	8
  2299   00066A  6FB0               	movwf	detect_color@color& (0+255),b
  2300                           
  2301                           ;color.c: 133:         }
  2302   00066C  EF3A  F003         	goto	l42
  2303   000670                     l4197:
  2304                           
  2305                           ; BSR set to: 0
  2306                           ;color.c: 135:             color = 0;
  2307   000670  0E00               	movlw	0
  2308   000672  6FB0               	movwf	detect_color@color& (0+255),b
  2309   000674                     l42:
  2310                           
  2311                           ; BSR set to: 0
  2312                           ;color.c: 138:     color_flag = 0;
  2313   000674  0E00               	movlw	0
  2314   000676  6E55               	movwf	_color_flag^0,c
  2315                           
  2316                           ;color.c: 139:     return color;
  2317   000678  51B0               	movf	detect_color@color& (0+255),w,b
  2318   00067A                     
  2319                           ; BSR set to: 0
  2320   00067A  0012               	return		;funcret
  2321   00067C                     __end_of_detect_color:
  2322                           	callstack 0
  2323                           
  2324 ;; *************** function ___xxtofl *****************
  2325 ;; Defined at:
  2326 ;;		line 10 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\xxtofl.c"
  2327 ;; Parameters:    Size  Location     Type
  2328 ;;  sign            1    wreg     unsigned char 
  2329 ;;  val             4    8[COMRAM] long 
  2330 ;; Auto vars:     Size  Location     Type
  2331 ;;  sign            1   16[COMRAM] unsigned char 
  2332 ;;  arg             4   18[COMRAM] unsigned long 
  2333 ;;  exp             1   17[COMRAM] unsigned char 
  2334 ;; Return value:  Size  Location     Type
  2335 ;;                  4    8[COMRAM] unsigned char 
  2336 ;; Registers used:
  2337 ;;		wreg, status,2, status,0
  2338 ;; Tracked objects:
  2339 ;;		On entry : 0/0
  2340 ;;		On exit  : 0/0
  2341 ;;		Unchanged: 0/0
  2342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2343 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2344 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2345 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2346 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2347 ;;Total ram usage:       14 bytes
  2348 ;; Hardware stack levels used: 1
  2349 ;; Hardware stack levels required when called: 7
  2350 ;; This function calls:
  2351 ;;		Nothing
  2352 ;; This function is called by:
  2353 ;;		_detect_color
  2354 ;; This function uses a non-reentrant model
  2355 ;;
  2356                           
  2357                           	psect	text3
  2358   001310                     __ptext3:
  2359                           	callstack 0
  2360   001310                     ___xxtofl:
  2361                           	callstack 22
  2362                           
  2363                           ; BSR set to: 0
  2364                           ;incstack = 0
  2365                           ;___xxtofl@sign stored from wreg
  2366   001310  6E11               	movwf	___xxtofl@sign^0,c
  2367   001312  5011               	movf	___xxtofl@sign^0,w,c
  2368   001314  B4D8               	btfsc	status,2,c
  2369   001316  EF8F  F009         	goto	u3141
  2370   00131A  EF91  F009         	goto	u3140
  2371   00131E                     u3141:
  2372   00131E  EFB3  F009         	goto	l1351
  2373   001322                     u3140:
  2374   001322  BE0C               	btfsc	(___xxtofl@val+3)^0,7,c
  2375   001324  EF98  F009         	goto	u3150
  2376   001328  EF96  F009         	goto	u3151
  2377   00132C                     u3151:
  2378   00132C  EFB3  F009         	goto	l1351
  2379   001330                     u3150:
  2380   001330  C009  F00D         	movff	___xxtofl@val,??___xxtofl
  2381   001334  C00A  F00E         	movff	___xxtofl@val+1,??___xxtofl+1
  2382   001338  C00B  F00F         	movff	___xxtofl@val+2,??___xxtofl+2
  2383   00133C  C00C  F010         	movff	___xxtofl@val+3,??___xxtofl+3
  2384   001340  1E0D               	comf	??___xxtofl^0,f,c
  2385   001342  1E0E               	comf	(??___xxtofl+1)^0,f,c
  2386   001344  1E0F               	comf	(??___xxtofl+2)^0,f,c
  2387   001346  1E10               	comf	(??___xxtofl+3)^0,f,c
  2388   001348  2A0D               	incf	??___xxtofl^0,f,c
  2389   00134A  0E00               	movlw	0
  2390   00134C  220E               	addwfc	(??___xxtofl+1)^0,f,c
  2391   00134E  220F               	addwfc	(??___xxtofl+2)^0,f,c
  2392   001350  2210               	addwfc	(??___xxtofl+3)^0,f,c
  2393   001352  C00D  F013         	movff	??___xxtofl,___xxtofl@arg
  2394   001356  C00E  F014         	movff	??___xxtofl+1,___xxtofl@arg+1
  2395   00135A  C00F  F015         	movff	??___xxtofl+2,___xxtofl@arg+2
  2396   00135E  C010  F016         	movff	??___xxtofl+3,___xxtofl@arg+3
  2397   001362  EFBB  F009         	goto	l3615
  2398   001366                     l1351:
  2399   001366  C009  F013         	movff	___xxtofl@val,___xxtofl@arg
  2400   00136A  C00A  F014         	movff	___xxtofl@val+1,___xxtofl@arg+1
  2401   00136E  C00B  F015         	movff	___xxtofl@val+2,___xxtofl@arg+2
  2402   001372  C00C  F016         	movff	___xxtofl@val+3,___xxtofl@arg+3
  2403   001376                     l3615:
  2404   001376  5009               	movf	___xxtofl@val^0,w,c
  2405   001378  100A               	iorwf	(___xxtofl@val+1)^0,w,c
  2406   00137A  100B               	iorwf	(___xxtofl@val+2)^0,w,c
  2407   00137C  100C               	iorwf	(___xxtofl@val+3)^0,w,c
  2408   00137E  A4D8               	btfss	status,2,c
  2409   001380  EFC4  F009         	goto	u3161
  2410   001384  EFC6  F009         	goto	u3160
  2411   001388                     u3161:
  2412   001388  EFD0  F009         	goto	l3621
  2413   00138C                     u3160:
  2414   00138C  0E00               	movlw	0
  2415   00138E  6E09               	movwf	?___xxtofl^0,c
  2416   001390  0E00               	movlw	0
  2417   001392  6E0A               	movwf	(?___xxtofl+1)^0,c
  2418   001394  0E00               	movlw	0
  2419   001396  6E0B               	movwf	(?___xxtofl+2)^0,c
  2420   001398  0E00               	movlw	0
  2421   00139A  6E0C               	movwf	(?___xxtofl+3)^0,c
  2422   00139C  EF61  F00A         	goto	l1354
  2423   0013A0                     l3621:
  2424   0013A0  0E96               	movlw	150
  2425   0013A2  6E12               	movwf	___xxtofl@exp^0,c
  2426   0013A4  EFDA  F009         	goto	l3625
  2427   0013A8                     l3623:
  2428   0013A8  2A12               	incf	___xxtofl@exp^0,f,c
  2429   0013AA  90D8               	bcf	status,0,c
  2430   0013AC  3216               	rrcf	(___xxtofl@arg+3)^0,f,c
  2431   0013AE  3215               	rrcf	(___xxtofl@arg+2)^0,f,c
  2432   0013B0  3214               	rrcf	(___xxtofl@arg+1)^0,f,c
  2433   0013B2  3213               	rrcf	___xxtofl@arg^0,f,c
  2434   0013B4                     l3625:
  2435   0013B4  0E00               	movlw	0
  2436   0013B6  1413               	andwf	___xxtofl@arg^0,w,c
  2437   0013B8  6E0D               	movwf	??___xxtofl^0,c
  2438   0013BA  0E00               	movlw	0
  2439   0013BC  1414               	andwf	(___xxtofl@arg+1)^0,w,c
  2440   0013BE  6E0E               	movwf	(??___xxtofl+1)^0,c
  2441   0013C0  0E00               	movlw	0
  2442   0013C2  1415               	andwf	(___xxtofl@arg+2)^0,w,c
  2443   0013C4  6E0F               	movwf	(??___xxtofl+2)^0,c
  2444   0013C6  0EFE               	movlw	254
  2445   0013C8  1416               	andwf	(___xxtofl@arg+3)^0,w,c
  2446   0013CA  6E10               	movwf	(??___xxtofl+3)^0,c
  2447   0013CC  500D               	movf	??___xxtofl^0,w,c
  2448   0013CE  100E               	iorwf	(??___xxtofl+1)^0,w,c
  2449   0013D0  100F               	iorwf	(??___xxtofl+2)^0,w,c
  2450   0013D2  1010               	iorwf	(??___xxtofl+3)^0,w,c
  2451   0013D4  A4D8               	btfss	status,2,c
  2452   0013D6  EFEF  F009         	goto	u3171
  2453   0013DA  EFF1  F009         	goto	u3170
  2454   0013DE                     u3171:
  2455   0013DE  EFD4  F009         	goto	l3623
  2456   0013E2                     u3170:
  2457   0013E2  EFFF  F009         	goto	l1358
  2458   0013E6                     l3627:
  2459   0013E6  2A12               	incf	___xxtofl@exp^0,f,c
  2460   0013E8  0E01               	movlw	1
  2461   0013EA  2613               	addwf	___xxtofl@arg^0,f,c
  2462   0013EC  0E00               	movlw	0
  2463   0013EE  2214               	addwfc	(___xxtofl@arg+1)^0,f,c
  2464   0013F0  2215               	addwfc	(___xxtofl@arg+2)^0,f,c
  2465   0013F2  2216               	addwfc	(___xxtofl@arg+3)^0,f,c
  2466   0013F4  90D8               	bcf	status,0,c
  2467   0013F6  3216               	rrcf	(___xxtofl@arg+3)^0,f,c
  2468   0013F8  3215               	rrcf	(___xxtofl@arg+2)^0,f,c
  2469   0013FA  3214               	rrcf	(___xxtofl@arg+1)^0,f,c
  2470   0013FC  3213               	rrcf	___xxtofl@arg^0,f,c
  2471   0013FE                     l1358:
  2472   0013FE  0E00               	movlw	0
  2473   001400  1413               	andwf	___xxtofl@arg^0,w,c
  2474   001402  6E0D               	movwf	??___xxtofl^0,c
  2475   001404  0E00               	movlw	0
  2476   001406  1414               	andwf	(___xxtofl@arg+1)^0,w,c
  2477   001408  6E0E               	movwf	(??___xxtofl+1)^0,c
  2478   00140A  0E00               	movlw	0
  2479   00140C  1415               	andwf	(___xxtofl@arg+2)^0,w,c
  2480   00140E  6E0F               	movwf	(??___xxtofl+2)^0,c
  2481   001410  0EFF               	movlw	255
  2482   001412  1416               	andwf	(___xxtofl@arg+3)^0,w,c
  2483   001414  6E10               	movwf	(??___xxtofl+3)^0,c
  2484   001416  500D               	movf	??___xxtofl^0,w,c
  2485   001418  100E               	iorwf	(??___xxtofl+1)^0,w,c
  2486   00141A  100F               	iorwf	(??___xxtofl+2)^0,w,c
  2487   00141C  1010               	iorwf	(??___xxtofl+3)^0,w,c
  2488   00141E  A4D8               	btfss	status,2,c
  2489   001420  EF14  F00A         	goto	u3181
  2490   001424  EF16  F00A         	goto	u3180
  2491   001428                     u3181:
  2492   001428  EFF3  F009         	goto	l3627
  2493   00142C                     u3180:
  2494   00142C  EF1E  F00A         	goto	l3635
  2495   001430                     l3633:
  2496   001430  0612               	decf	___xxtofl@exp^0,f,c
  2497   001432  90D8               	bcf	status,0,c
  2498   001434  3613               	rlcf	___xxtofl@arg^0,f,c
  2499   001436  3614               	rlcf	(___xxtofl@arg+1)^0,f,c
  2500   001438  3615               	rlcf	(___xxtofl@arg+2)^0,f,c
  2501   00143A  3616               	rlcf	(___xxtofl@arg+3)^0,f,c
  2502   00143C                     l3635:
  2503   00143C  BE15               	btfsc	(___xxtofl@arg+2)^0,7,c
  2504   00143E  EF23  F00A         	goto	u3191
  2505   001442  EF25  F00A         	goto	u3190
  2506   001446                     u3191:
  2507   001446  EF2D  F00A         	goto	l1365
  2508   00144A                     u3190:
  2509   00144A  0E02               	movlw	2
  2510   00144C  6012               	cpfslt	___xxtofl@exp^0,c
  2511   00144E  EF2B  F00A         	goto	u3201
  2512   001452  EF2D  F00A         	goto	u3200
  2513   001456                     u3201:
  2514   001456  EF18  F00A         	goto	l3633
  2515   00145A                     u3200:
  2516   00145A                     l1365:
  2517   00145A  B012               	btfsc	___xxtofl@exp^0,0,c
  2518   00145C  EF32  F00A         	goto	u3211
  2519   001460  EF34  F00A         	goto	u3210
  2520   001464                     u3211:
  2521   001464  EF35  F00A         	goto	l3641
  2522   001468                     u3210:
  2523   001468  9E15               	bcf	(___xxtofl@arg+2)^0,7,c
  2524   00146A                     l3641:
  2525   00146A  90D8               	bcf	status,0,c
  2526   00146C  3212               	rrcf	___xxtofl@exp^0,f,c
  2527   00146E  C012  F00D         	movff	___xxtofl@exp,??___xxtofl
  2528   001472  6A0E               	clrf	(??___xxtofl+1)^0,c
  2529   001474  6A0F               	clrf	(??___xxtofl+2)^0,c
  2530   001476  6A10               	clrf	(??___xxtofl+3)^0,c
  2531   001478  C00D  F010         	movff	??___xxtofl,??___xxtofl+3
  2532   00147C  6A0F               	clrf	(??___xxtofl+2)^0,c
  2533   00147E  6A0E               	clrf	(??___xxtofl+1)^0,c
  2534   001480  6A0D               	clrf	??___xxtofl^0,c
  2535   001482  500D               	movf	??___xxtofl^0,w,c
  2536   001484  1213               	iorwf	___xxtofl@arg^0,f,c
  2537   001486  500E               	movf	(??___xxtofl+1)^0,w,c
  2538   001488  1214               	iorwf	(___xxtofl@arg+1)^0,f,c
  2539   00148A  500F               	movf	(??___xxtofl+2)^0,w,c
  2540   00148C  1215               	iorwf	(___xxtofl@arg+2)^0,f,c
  2541   00148E  5010               	movf	(??___xxtofl+3)^0,w,c
  2542   001490  1216               	iorwf	(___xxtofl@arg+3)^0,f,c
  2543   001492  5011               	movf	___xxtofl@sign^0,w,c
  2544   001494  B4D8               	btfsc	status,2,c
  2545   001496  EF4F  F00A         	goto	u3221
  2546   00149A  EF51  F00A         	goto	u3220
  2547   00149E                     u3221:
  2548   00149E  EF59  F00A         	goto	l3651
  2549   0014A2                     u3220:
  2550   0014A2  BE0C               	btfsc	(___xxtofl@val+3)^0,7,c
  2551   0014A4  EF58  F00A         	goto	u3230
  2552   0014A8  EF56  F00A         	goto	u3231
  2553   0014AC                     u3231:
  2554   0014AC  EF59  F00A         	goto	l3651
  2555   0014B0                     u3230:
  2556   0014B0  8E16               	bsf	(___xxtofl@arg+3)^0,7,c
  2557   0014B2                     l3651:
  2558   0014B2  C013  F009         	movff	___xxtofl@arg,?___xxtofl
  2559   0014B6  C014  F00A         	movff	___xxtofl@arg+1,?___xxtofl+1
  2560   0014BA  C015  F00B         	movff	___xxtofl@arg+2,?___xxtofl+2
  2561   0014BE  C016  F00C         	movff	___xxtofl@arg+3,?___xxtofl+3
  2562   0014C2                     l1354:
  2563   0014C2  0012               	return		;funcret
  2564   0014C4                     __end_of___xxtofl:
  2565                           	callstack 0
  2566                           
  2567 ;; *************** function ___fltol *****************
  2568 ;; Defined at:
  2569 ;;		line 43 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\fltol.c"
  2570 ;; Parameters:    Size  Location     Type
  2571 ;;  f1              4   72[COMRAM] unsigned char 
  2572 ;; Auto vars:     Size  Location     Type
  2573 ;;  exp1            1   77[COMRAM] unsigned char 
  2574 ;;  sign1           1   76[COMRAM] unsigned char 
  2575 ;; Return value:  Size  Location     Type
  2576 ;;                  4   72[COMRAM] long 
  2577 ;; Registers used:
  2578 ;;		wreg, status,2, status,0
  2579 ;; Tracked objects:
  2580 ;;		On entry : 0/0
  2581 ;;		On exit  : 0/0
  2582 ;;		Unchanged: 0/0
  2583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2584 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2585 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2586 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2587 ;;      Totals:         6       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2588 ;;Total ram usage:       10 bytes
  2589 ;; Hardware stack levels used: 1
  2590 ;; Hardware stack levels required when called: 7
  2591 ;; This function calls:
  2592 ;;		Nothing
  2593 ;; This function is called by:
  2594 ;;		_detect_color
  2595 ;; This function uses a non-reentrant model
  2596 ;;
  2597                           
  2598                           	psect	text4
  2599   001630                     __ptext4:
  2600                           	callstack 0
  2601   001630                     ___fltol:
  2602                           	callstack 22
  2603   001630  344B               	rlcf	(___fltol@f1+2)^0,w,c
  2604   001632  344C               	rlcf	(___fltol@f1+3)^0,w,c
  2605   001634  6E4E               	movwf	___fltol@exp1^0,c
  2606   001636  504E               	movf	___fltol@exp1^0,w,c
  2607   001638  A4D8               	btfss	status,2,c
  2608   00163A  EF21  F00B         	goto	u3891
  2609   00163E  EF23  F00B         	goto	u3890
  2610   001642                     u3891:
  2611   001642  EF2D  F00B         	goto	l4037
  2612   001646                     u3890:
  2613   001646                     l4033:
  2614   001646  0E00               	movlw	0
  2615   001648  6E49               	movwf	?___fltol^0,c
  2616   00164A  0E00               	movlw	0
  2617   00164C  6E4A               	movwf	(?___fltol+1)^0,c
  2618   00164E  0E00               	movlw	0
  2619   001650  6E4B               	movwf	(?___fltol+2)^0,c
  2620   001652  0E00               	movlw	0
  2621   001654  6E4C               	movwf	(?___fltol+3)^0,c
  2622   001656  EF9B  F00B         	goto	l993
  2623   00165A                     l4037:
  2624   00165A  C049  F09E         	movff	___fltol@f1,??___fltol
  2625   00165E  C04A  F09F         	movff	___fltol@f1+1,??___fltol+1
  2626   001662  C04B  F0A0         	movff	___fltol@f1+2,??___fltol+2
  2627   001666  C04C  F0A1         	movff	___fltol@f1+3,??___fltol+3
  2628   00166A  0E20               	movlw	32
  2629   00166C  EF3E  F00B         	goto	u3900
  2630   001670                     u3905:
  2631   001670  0100               	movlb	0	; () banked
  2632   001672  90D8               	bcf	status,0,c
  2633   001674  33A1               	rrcf	(??___fltol+3)& (0+255),f,b
  2634   001676  33A0               	rrcf	(??___fltol+2)& (0+255),f,b
  2635   001678  339F               	rrcf	(??___fltol+1)& (0+255),f,b
  2636   00167A  339E               	rrcf	??___fltol& (0+255),f,b
  2637   00167C                     u3900:
  2638   00167C  2EE8               	decfsz	wreg,f,c
  2639   00167E  EF38  F00B         	goto	u3905
  2640   001682  519E               	movf	??___fltol& (0+255),w,b
  2641   001684  6E4D               	movwf	___fltol@sign1^0,c
  2642   001686                     
  2643                           ; BSR set to: 0
  2644   001686  8E4B               	bsf	(___fltol@f1+2)^0,7,c
  2645   001688                     
  2646                           ; BSR set to: 0
  2647   001688  0EFF               	movlw	255
  2648   00168A  1649               	andwf	___fltol@f1^0,f,c
  2649   00168C  0EFF               	movlw	255
  2650   00168E  164A               	andwf	(___fltol@f1+1)^0,f,c
  2651   001690  0EFF               	movlw	255
  2652   001692  164B               	andwf	(___fltol@f1+2)^0,f,c
  2653   001694  0E00               	movlw	0
  2654   001696  164C               	andwf	(___fltol@f1+3)^0,f,c
  2655   001698                     
  2656                           ; BSR set to: 0
  2657   001698  0E96               	movlw	150
  2658   00169A  5E4E               	subwf	___fltol@exp1^0,f,c
  2659   00169C                     
  2660                           ; BSR set to: 0
  2661   00169C  BE4E               	btfsc	___fltol@exp1^0,7,c
  2662   00169E  EF55  F00B         	goto	u3910
  2663   0016A2  EF53  F00B         	goto	u3911
  2664   0016A6                     u3911:
  2665   0016A6  EF6B  F00B         	goto	l4057
  2666   0016AA                     u3910:
  2667   0016AA                     
  2668                           ; BSR set to: 0
  2669   0016AA  504E               	movf	___fltol@exp1^0,w,c
  2670   0016AC  0A80               	xorlw	128
  2671   0016AE  0F97               	addlw	151
  2672   0016B0  B0D8               	btfsc	status,0,c
  2673   0016B2  EF5D  F00B         	goto	u3921
  2674   0016B6  EF5F  F00B         	goto	u3920
  2675   0016BA                     u3921:
  2676   0016BA  EF61  F00B         	goto	l4053
  2677   0016BE                     u3920:
  2678   0016BE  EF23  F00B         	goto	l4033
  2679   0016C2                     l4053:
  2680   0016C2  90D8               	bcf	status,0,c
  2681   0016C4  324C               	rrcf	(___fltol@f1+3)^0,f,c
  2682   0016C6  324B               	rrcf	(___fltol@f1+2)^0,f,c
  2683   0016C8  324A               	rrcf	(___fltol@f1+1)^0,f,c
  2684   0016CA  3249               	rrcf	___fltol@f1^0,f,c
  2685   0016CC  3E4E               	incfsz	___fltol@exp1^0,f,c
  2686   0016CE  EF61  F00B         	goto	l4053
  2687   0016D2  EF83  F00B         	goto	l4067
  2688   0016D6                     l4057:
  2689                           
  2690                           ; BSR set to: 0
  2691   0016D6  0E1F               	movlw	31
  2692   0016D8  644E               	cpfsgt	___fltol@exp1^0,c
  2693   0016DA  EF71  F00B         	goto	u3931
  2694   0016DE  EF73  F00B         	goto	u3930
  2695   0016E2                     u3931:
  2696   0016E2  EF7B  F00B         	goto	l4065
  2697   0016E6                     u3930:
  2698   0016E6  EF23  F00B         	goto	l4033
  2699   0016EA                     l4063:
  2700   0016EA  90D8               	bcf	status,0,c
  2701   0016EC  3649               	rlcf	___fltol@f1^0,f,c
  2702   0016EE  364A               	rlcf	(___fltol@f1+1)^0,f,c
  2703   0016F0  364B               	rlcf	(___fltol@f1+2)^0,f,c
  2704   0016F2  364C               	rlcf	(___fltol@f1+3)^0,f,c
  2705   0016F4  064E               	decf	___fltol@exp1^0,f,c
  2706   0016F6                     l4065:
  2707   0016F6  504E               	movf	___fltol@exp1^0,w,c
  2708   0016F8  A4D8               	btfss	status,2,c
  2709   0016FA  EF81  F00B         	goto	u3941
  2710   0016FE  EF83  F00B         	goto	u3940
  2711   001702                     u3941:
  2712   001702  EF75  F00B         	goto	l4063
  2713   001706                     u3940:
  2714   001706                     l4067:
  2715   001706  504D               	movf	___fltol@sign1^0,w,c
  2716   001708  B4D8               	btfsc	status,2,c
  2717   00170A  EF89  F00B         	goto	u3951
  2718   00170E  EF8B  F00B         	goto	u3950
  2719   001712                     u3951:
  2720   001712  EF93  F00B         	goto	l4071
  2721   001716                     u3950:
  2722   001716  1E4C               	comf	(___fltol@f1+3)^0,f,c
  2723   001718  1E4B               	comf	(___fltol@f1+2)^0,f,c
  2724   00171A  1E4A               	comf	(___fltol@f1+1)^0,f,c
  2725   00171C  6C49               	negf	___fltol@f1^0,c
  2726   00171E  0E00               	movlw	0
  2727   001720  224A               	addwfc	(___fltol@f1+1)^0,f,c
  2728   001722  224B               	addwfc	(___fltol@f1+2)^0,f,c
  2729   001724  224C               	addwfc	(___fltol@f1+3)^0,f,c
  2730   001726                     l4071:
  2731   001726  C049  F049         	movff	___fltol@f1,?___fltol
  2732   00172A  C04A  F04A         	movff	___fltol@f1+1,?___fltol+1
  2733   00172E  C04B  F04B         	movff	___fltol@f1+2,?___fltol+2
  2734   001732  C04C  F04C         	movff	___fltol@f1+3,?___fltol+3
  2735   001736                     l993:
  2736   001736  0012               	return		;funcret
  2737   001738                     __end_of___fltol:
  2738                           	callstack 0
  2739                           
  2740 ;; *************** function ___flmul *****************
  2741 ;; Defined at:
  2742 ;;		line 8 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\sprcmul.c"
  2743 ;; Parameters:    Size  Location     Type
  2744 ;;  b               4   47[COMRAM] long 
  2745 ;;  a               4   51[COMRAM] long 
  2746 ;; Auto vars:     Size  Location     Type
  2747 ;;  prod            4   66[COMRAM] struct .
  2748 ;;  grs             4   60[COMRAM] unsigned long 
  2749 ;;  temp            2   70[COMRAM] struct .
  2750 ;;  bexp            1   65[COMRAM] unsigned char 
  2751 ;;  aexp            1   64[COMRAM] unsigned char 
  2752 ;;  sign            1   59[COMRAM] unsigned char 
  2753 ;; Return value:  Size  Location     Type
  2754 ;;                  4   47[COMRAM] unsigned char 
  2755 ;; Registers used:
  2756 ;;		wreg, status,2, status,0, prodl, prodh
  2757 ;; Tracked objects:
  2758 ;;		On entry : 0/0
  2759 ;;		On exit  : 0/0
  2760 ;;		Unchanged: 0/0
  2761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2762 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2763 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2764 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2765 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2766 ;;Total ram usage:       25 bytes
  2767 ;; Hardware stack levels used: 1
  2768 ;; Hardware stack levels required when called: 7
  2769 ;; This function calls:
  2770 ;;		Nothing
  2771 ;; This function is called by:
  2772 ;;		_detect_color
  2773 ;; This function uses a non-reentrant model
  2774 ;;
  2775                           
  2776                           	psect	text5
  2777   00067C                     __ptext5:
  2778                           	callstack 0
  2779   00067C                     ___flmul:
  2780                           	callstack 22
  2781   00067C  5033               	movf	(___flmul@b+3)^0,w,c
  2782   00067E  0B80               	andlw	128
  2783   000680  6E3C               	movwf	___flmul@sign^0,c
  2784   000682  5033               	movf	(___flmul@b+3)^0,w,c
  2785   000684  2433               	addwf	(___flmul@b+3)^0,w,c
  2786   000686  6E42               	movwf	___flmul@bexp^0,c
  2787   000688  AE32               	btfss	(___flmul@b+2)^0,7,c
  2788   00068A  EF49  F003         	goto	u2881
  2789   00068E  EF4B  F003         	goto	u2880
  2790   000692                     u2881:
  2791   000692  EF4C  F003         	goto	l3441
  2792   000696                     u2880:
  2793   000696  8042               	bsf	___flmul@bexp^0,0,c
  2794   000698                     l3441:
  2795   000698  5042               	movf	___flmul@bexp^0,w,c
  2796   00069A  B4D8               	btfsc	status,2,c
  2797   00069C  EF52  F003         	goto	u2891
  2798   0006A0  EF54  F003         	goto	u2890
  2799   0006A4                     u2891:
  2800   0006A4  EF67  F003         	goto	l3449
  2801   0006A8                     u2890:
  2802   0006A8  2842               	incf	___flmul@bexp^0,w,c
  2803   0006AA  A4D8               	btfss	status,2,c
  2804   0006AC  EF5A  F003         	goto	u2901
  2805   0006B0  EF5C  F003         	goto	u2900
  2806   0006B4                     u2901:
  2807   0006B4  EF64  F003         	goto	l3447
  2808   0006B8                     u2900:
  2809   0006B8  0E00               	movlw	0
  2810   0006BA  6E30               	movwf	___flmul@b^0,c
  2811   0006BC  0E00               	movlw	0
  2812   0006BE  6E31               	movwf	(___flmul@b+1)^0,c
  2813   0006C0  0E00               	movlw	0
  2814   0006C2  6E32               	movwf	(___flmul@b+2)^0,c
  2815   0006C4  0E00               	movlw	0
  2816   0006C6  6E33               	movwf	(___flmul@b+3)^0,c
  2817   0006C8                     l3447:
  2818   0006C8  8E32               	bsf	(___flmul@b+2)^0,7,c
  2819   0006CA  EF6F  F003         	goto	l3451
  2820   0006CE                     l3449:
  2821   0006CE  0E00               	movlw	0
  2822   0006D0  6E30               	movwf	___flmul@b^0,c
  2823   0006D2  0E00               	movlw	0
  2824   0006D4  6E31               	movwf	(___flmul@b+1)^0,c
  2825   0006D6  0E00               	movlw	0
  2826   0006D8  6E32               	movwf	(___flmul@b+2)^0,c
  2827   0006DA  0E00               	movlw	0
  2828   0006DC  6E33               	movwf	(___flmul@b+3)^0,c
  2829   0006DE                     l3451:
  2830   0006DE  5037               	movf	(___flmul@a+3)^0,w,c
  2831   0006E0  0B80               	andlw	128
  2832   0006E2  1A3C               	xorwf	___flmul@sign^0,f,c
  2833   0006E4  5037               	movf	(___flmul@a+3)^0,w,c
  2834   0006E6  2437               	addwf	(___flmul@a+3)^0,w,c
  2835   0006E8  6E41               	movwf	___flmul@aexp^0,c
  2836   0006EA  AE36               	btfss	(___flmul@a+2)^0,7,c
  2837   0006EC  EF7A  F003         	goto	u2911
  2838   0006F0  EF7C  F003         	goto	u2910
  2839   0006F4                     u2911:
  2840   0006F4  EF7D  F003         	goto	l3459
  2841   0006F8                     u2910:
  2842   0006F8  8041               	bsf	___flmul@aexp^0,0,c
  2843   0006FA                     l3459:
  2844   0006FA  5041               	movf	___flmul@aexp^0,w,c
  2845   0006FC  B4D8               	btfsc	status,2,c
  2846   0006FE  EF83  F003         	goto	u2921
  2847   000702  EF85  F003         	goto	u2920
  2848   000706                     u2921:
  2849   000706  EF98  F003         	goto	l3467
  2850   00070A                     u2920:
  2851   00070A  2841               	incf	___flmul@aexp^0,w,c
  2852   00070C  A4D8               	btfss	status,2,c
  2853   00070E  EF8B  F003         	goto	u2931
  2854   000712  EF8D  F003         	goto	u2930
  2855   000716                     u2931:
  2856   000716  EF95  F003         	goto	l3465
  2857   00071A                     u2930:
  2858   00071A  0E00               	movlw	0
  2859   00071C  6E34               	movwf	___flmul@a^0,c
  2860   00071E  0E00               	movlw	0
  2861   000720  6E35               	movwf	(___flmul@a+1)^0,c
  2862   000722  0E00               	movlw	0
  2863   000724  6E36               	movwf	(___flmul@a+2)^0,c
  2864   000726  0E00               	movlw	0
  2865   000728  6E37               	movwf	(___flmul@a+3)^0,c
  2866   00072A                     l3465:
  2867   00072A  8E36               	bsf	(___flmul@a+2)^0,7,c
  2868   00072C  EFA0  F003         	goto	l1310
  2869   000730                     l3467:
  2870   000730  0E00               	movlw	0
  2871   000732  6E34               	movwf	___flmul@a^0,c
  2872   000734  0E00               	movlw	0
  2873   000736  6E35               	movwf	(___flmul@a+1)^0,c
  2874   000738  0E00               	movlw	0
  2875   00073A  6E36               	movwf	(___flmul@a+2)^0,c
  2876   00073C  0E00               	movlw	0
  2877   00073E  6E37               	movwf	(___flmul@a+3)^0,c
  2878   000740                     l1310:
  2879   000740  5041               	movf	___flmul@aexp^0,w,c
  2880   000742  B4D8               	btfsc	status,2,c
  2881   000744  EFA6  F003         	goto	u2941
  2882   000748  EFA8  F003         	goto	u2940
  2883   00074C                     u2941:
  2884   00074C  EFB0  F003         	goto	l3471
  2885   000750                     u2940:
  2886   000750  5042               	movf	___flmul@bexp^0,w,c
  2887   000752  A4D8               	btfss	status,2,c
  2888   000754  EFAE  F003         	goto	u2951
  2889   000758  EFB0  F003         	goto	u2950
  2890   00075C                     u2951:
  2891   00075C  EFBA  F003         	goto	l3475
  2892   000760                     u2950:
  2893   000760                     l3471:
  2894   000760  0E00               	movlw	0
  2895   000762  6E30               	movwf	?___flmul^0,c
  2896   000764  0E00               	movlw	0
  2897   000766  6E31               	movwf	(?___flmul+1)^0,c
  2898   000768  0E00               	movlw	0
  2899   00076A  6E32               	movwf	(?___flmul+2)^0,c
  2900   00076C  0E00               	movlw	0
  2901   00076E  6E33               	movwf	(?___flmul+3)^0,c
  2902   000770  EF52  F005         	goto	l1314
  2903   000774                     l3475:
  2904   000774  5036               	movf	(___flmul@a+2)^0,w,c
  2905   000776  0230               	mulwf	___flmul@b^0,c
  2906   000778  CFF3 F047          	movff	prodl,___flmul@temp
  2907   00077C  CFF4 F048          	movff	prodh,___flmul@temp+1
  2908   000780  5047               	movf	___flmul@temp^0,w,c
  2909   000782  6E3D               	movwf	___flmul@grs^0,c
  2910   000784  6A3E               	clrf	(___flmul@grs+1)^0,c
  2911   000786  6A3F               	clrf	(___flmul@grs+2)^0,c
  2912   000788  6A40               	clrf	(___flmul@grs+3)^0,c
  2913   00078A  5048               	movf	(___flmul@temp+1)^0,w,c
  2914   00078C  6E43               	movwf	___flmul@prod^0,c
  2915   00078E  6A44               	clrf	(___flmul@prod+1)^0,c
  2916   000790  6A45               	clrf	(___flmul@prod+2)^0,c
  2917   000792  6A46               	clrf	(___flmul@prod+3)^0,c
  2918   000794  5035               	movf	(___flmul@a+1)^0,w,c
  2919   000796  0231               	mulwf	(___flmul@b+1)^0,c
  2920   000798  CFF3 F047          	movff	prodl,___flmul@temp
  2921   00079C  CFF4 F048          	movff	prodh,___flmul@temp+1
  2922   0007A0  5047               	movf	___flmul@temp^0,w,c
  2923   0007A2  263D               	addwf	___flmul@grs^0,f,c
  2924   0007A4  0E00               	movlw	0
  2925   0007A6  223E               	addwfc	(___flmul@grs+1)^0,f,c
  2926   0007A8  223F               	addwfc	(___flmul@grs+2)^0,f,c
  2927   0007AA  2240               	addwfc	(___flmul@grs+3)^0,f,c
  2928   0007AC  5048               	movf	(___flmul@temp+1)^0,w,c
  2929   0007AE  2643               	addwf	___flmul@prod^0,f,c
  2930   0007B0  0E00               	movlw	0
  2931   0007B2  2244               	addwfc	(___flmul@prod+1)^0,f,c
  2932   0007B4  2245               	addwfc	(___flmul@prod+2)^0,f,c
  2933   0007B6  2246               	addwfc	(___flmul@prod+3)^0,f,c
  2934   0007B8  5034               	movf	___flmul@a^0,w,c
  2935   0007BA  0232               	mulwf	(___flmul@b+2)^0,c
  2936   0007BC  CFF3 F047          	movff	prodl,___flmul@temp
  2937   0007C0  CFF4 F048          	movff	prodh,___flmul@temp+1
  2938   0007C4  5047               	movf	___flmul@temp^0,w,c
  2939   0007C6  263D               	addwf	___flmul@grs^0,f,c
  2940   0007C8  0E00               	movlw	0
  2941   0007CA  223E               	addwfc	(___flmul@grs+1)^0,f,c
  2942   0007CC  223F               	addwfc	(___flmul@grs+2)^0,f,c
  2943   0007CE  2240               	addwfc	(___flmul@grs+3)^0,f,c
  2944   0007D0  5048               	movf	(___flmul@temp+1)^0,w,c
  2945   0007D2  2643               	addwf	___flmul@prod^0,f,c
  2946   0007D4  0E00               	movlw	0
  2947   0007D6  2244               	addwfc	(___flmul@prod+1)^0,f,c
  2948   0007D8  2245               	addwfc	(___flmul@prod+2)^0,f,c
  2949   0007DA  2246               	addwfc	(___flmul@prod+3)^0,f,c
  2950   0007DC  C03F  F040         	movff	___flmul@grs+2,___flmul@grs+3
  2951   0007E0  C03E  F03F         	movff	___flmul@grs+1,___flmul@grs+2
  2952   0007E4  C03D  F03E         	movff	___flmul@grs,___flmul@grs+1
  2953   0007E8  6A3D               	clrf	___flmul@grs^0,c
  2954   0007EA  5034               	movf	___flmul@a^0,w,c
  2955   0007EC  0231               	mulwf	(___flmul@b+1)^0,c
  2956   0007EE  CFF3 F047          	movff	prodl,___flmul@temp
  2957   0007F2  CFF4 F048          	movff	prodh,___flmul@temp+1
  2958   0007F6  5047               	movf	___flmul@temp^0,w,c
  2959   0007F8  263D               	addwf	___flmul@grs^0,f,c
  2960   0007FA  5048               	movf	(___flmul@temp+1)^0,w,c
  2961   0007FC  223E               	addwfc	(___flmul@grs+1)^0,f,c
  2962   0007FE  0E00               	movlw	0
  2963   000800  223F               	addwfc	(___flmul@grs+2)^0,f,c
  2964   000802  0E00               	movlw	0
  2965   000804  2240               	addwfc	(___flmul@grs+3)^0,f,c
  2966   000806  5035               	movf	(___flmul@a+1)^0,w,c
  2967   000808  0230               	mulwf	___flmul@b^0,c
  2968   00080A  CFF3 F047          	movff	prodl,___flmul@temp
  2969   00080E  CFF4 F048          	movff	prodh,___flmul@temp+1
  2970   000812  5047               	movf	___flmul@temp^0,w,c
  2971   000814  263D               	addwf	___flmul@grs^0,f,c
  2972   000816  5048               	movf	(___flmul@temp+1)^0,w,c
  2973   000818  223E               	addwfc	(___flmul@grs+1)^0,f,c
  2974   00081A  0E00               	movlw	0
  2975   00081C  223F               	addwfc	(___flmul@grs+2)^0,f,c
  2976   00081E  0E00               	movlw	0
  2977   000820  2240               	addwfc	(___flmul@grs+3)^0,f,c
  2978   000822  C03F  F040         	movff	___flmul@grs+2,___flmul@grs+3
  2979   000826  C03E  F03F         	movff	___flmul@grs+1,___flmul@grs+2
  2980   00082A  C03D  F03E         	movff	___flmul@grs,___flmul@grs+1
  2981   00082E  6A3D               	clrf	___flmul@grs^0,c
  2982   000830  5034               	movf	___flmul@a^0,w,c
  2983   000832  0230               	mulwf	___flmul@b^0,c
  2984   000834  CFF3 F047          	movff	prodl,___flmul@temp
  2985   000838  CFF4 F048          	movff	prodh,___flmul@temp+1
  2986   00083C  5047               	movf	___flmul@temp^0,w,c
  2987   00083E  263D               	addwf	___flmul@grs^0,f,c
  2988   000840  5048               	movf	(___flmul@temp+1)^0,w,c
  2989   000842  223E               	addwfc	(___flmul@grs+1)^0,f,c
  2990   000844  0E00               	movlw	0
  2991   000846  223F               	addwfc	(___flmul@grs+2)^0,f,c
  2992   000848  0E00               	movlw	0
  2993   00084A  2240               	addwfc	(___flmul@grs+3)^0,f,c
  2994   00084C  5036               	movf	(___flmul@a+2)^0,w,c
  2995   00084E  0231               	mulwf	(___flmul@b+1)^0,c
  2996   000850  CFF3 F047          	movff	prodl,___flmul@temp
  2997   000854  CFF4 F048          	movff	prodh,___flmul@temp+1
  2998   000858  5047               	movf	___flmul@temp^0,w,c
  2999   00085A  2643               	addwf	___flmul@prod^0,f,c
  3000   00085C  5048               	movf	(___flmul@temp+1)^0,w,c
  3001   00085E  2244               	addwfc	(___flmul@prod+1)^0,f,c
  3002   000860  0E00               	movlw	0
  3003   000862  2245               	addwfc	(___flmul@prod+2)^0,f,c
  3004   000864  0E00               	movlw	0
  3005   000866  2246               	addwfc	(___flmul@prod+3)^0,f,c
  3006   000868  5035               	movf	(___flmul@a+1)^0,w,c
  3007   00086A  0232               	mulwf	(___flmul@b+2)^0,c
  3008   00086C  CFF3 F047          	movff	prodl,___flmul@temp
  3009   000870  CFF4 F048          	movff	prodh,___flmul@temp+1
  3010   000874  5047               	movf	___flmul@temp^0,w,c
  3011   000876  2643               	addwf	___flmul@prod^0,f,c
  3012   000878  5048               	movf	(___flmul@temp+1)^0,w,c
  3013   00087A  2244               	addwfc	(___flmul@prod+1)^0,f,c
  3014   00087C  0E00               	movlw	0
  3015   00087E  2245               	addwfc	(___flmul@prod+2)^0,f,c
  3016   000880  0E00               	movlw	0
  3017   000882  2246               	addwfc	(___flmul@prod+3)^0,f,c
  3018   000884  5036               	movf	(___flmul@a+2)^0,w,c
  3019   000886  0232               	mulwf	(___flmul@b+2)^0,c
  3020   000888  CFF3 F047          	movff	prodl,___flmul@temp
  3021   00088C  CFF4 F048          	movff	prodh,___flmul@temp+1
  3022   000890  5047               	movf	___flmul@temp^0,w,c
  3023   000892  6E38               	movwf	??___flmul^0,c
  3024   000894  5048               	movf	(___flmul@temp+1)^0,w,c
  3025   000896  6E39               	movwf	(??___flmul+1)^0,c
  3026   000898  6A3A               	clrf	(??___flmul+2)^0,c
  3027   00089A  6A3B               	clrf	(??___flmul+3)^0,c
  3028   00089C  C03A  F03B         	movff	??___flmul+2,??___flmul+3
  3029   0008A0  C039  F03A         	movff	??___flmul+1,??___flmul+2
  3030   0008A4  C038  F039         	movff	??___flmul,??___flmul+1
  3031   0008A8  6A38               	clrf	??___flmul^0,c
  3032   0008AA  5038               	movf	??___flmul^0,w,c
  3033   0008AC  2643               	addwf	___flmul@prod^0,f,c
  3034   0008AE  5039               	movf	(??___flmul+1)^0,w,c
  3035   0008B0  2244               	addwfc	(___flmul@prod+1)^0,f,c
  3036   0008B2  503A               	movf	(??___flmul+2)^0,w,c
  3037   0008B4  2245               	addwfc	(___flmul@prod+2)^0,f,c
  3038   0008B6  503B               	movf	(??___flmul+3)^0,w,c
  3039   0008B8  2246               	addwfc	(___flmul@prod+3)^0,f,c
  3040   0008BA  C03D  F038         	movff	___flmul@grs,??___flmul
  3041   0008BE  C03E  F039         	movff	___flmul@grs+1,??___flmul+1
  3042   0008C2  C03F  F03A         	movff	___flmul@grs+2,??___flmul+2
  3043   0008C6  C040  F03B         	movff	___flmul@grs+3,??___flmul+3
  3044   0008CA  0E19               	movlw	25
  3045   0008CC  EF6D  F004         	goto	u2960
  3046   0008D0                     u2965:
  3047   0008D0  90D8               	bcf	status,0,c
  3048   0008D2  323B               	rrcf	(??___flmul+3)^0,f,c
  3049   0008D4  323A               	rrcf	(??___flmul+2)^0,f,c
  3050   0008D6  3239               	rrcf	(??___flmul+1)^0,f,c
  3051   0008D8  3238               	rrcf	??___flmul^0,f,c
  3052   0008DA                     u2960:
  3053   0008DA  2EE8               	decfsz	wreg,f,c
  3054   0008DC  EF68  F004         	goto	u2965
  3055   0008E0  5038               	movf	??___flmul^0,w,c
  3056   0008E2  2643               	addwf	___flmul@prod^0,f,c
  3057   0008E4  5039               	movf	(??___flmul+1)^0,w,c
  3058   0008E6  2244               	addwfc	(___flmul@prod+1)^0,f,c
  3059   0008E8  503A               	movf	(??___flmul+2)^0,w,c
  3060   0008EA  2245               	addwfc	(___flmul@prod+2)^0,f,c
  3061   0008EC  503B               	movf	(??___flmul+3)^0,w,c
  3062   0008EE  2246               	addwfc	(___flmul@prod+3)^0,f,c
  3063   0008F0  C03F  F040         	movff	___flmul@grs+2,___flmul@grs+3
  3064   0008F4  C03E  F03F         	movff	___flmul@grs+1,___flmul@grs+2
  3065   0008F8  C03D  F03E         	movff	___flmul@grs,___flmul@grs+1
  3066   0008FC  6A3D               	clrf	___flmul@grs^0,c
  3067   0008FE  5041               	movf	___flmul@aexp^0,w,c
  3068   000900  C042  F038         	movff	___flmul@bexp,??___flmul
  3069   000904  6A39               	clrf	(??___flmul+1)^0,c
  3070   000906  2638               	addwf	??___flmul^0,f,c
  3071   000908  0E00               	movlw	0
  3072   00090A  2239               	addwfc	(??___flmul+1)^0,f,c
  3073   00090C  0E82               	movlw	130
  3074   00090E  2438               	addwf	??___flmul^0,w,c
  3075   000910  6E47               	movwf	___flmul@temp^0,c
  3076   000912  0EFF               	movlw	255
  3077   000914  2039               	addwfc	(??___flmul+1)^0,w,c
  3078   000916  6E48               	movwf	(___flmul@temp+1)^0,c
  3079   000918  EFA3  F004         	goto	l3523
  3080   00091C                     l3517:
  3081   00091C  90D8               	bcf	status,0,c
  3082   00091E  3643               	rlcf	___flmul@prod^0,f,c
  3083   000920  3644               	rlcf	(___flmul@prod+1)^0,f,c
  3084   000922  3645               	rlcf	(___flmul@prod+2)^0,f,c
  3085   000924  3646               	rlcf	(___flmul@prod+3)^0,f,c
  3086   000926  AE40               	btfss	(___flmul@grs+3)^0,7,c
  3087   000928  EF98  F004         	goto	u2971
  3088   00092C  EF9A  F004         	goto	u2970
  3089   000930                     u2971:
  3090   000930  EF9B  F004         	goto	l1317
  3091   000934                     u2970:
  3092   000934  8043               	bsf	___flmul@prod^0,0,c
  3093   000936                     l1317:
  3094   000936  90D8               	bcf	status,0,c
  3095   000938  363D               	rlcf	___flmul@grs^0,f,c
  3096   00093A  363E               	rlcf	(___flmul@grs+1)^0,f,c
  3097   00093C  363F               	rlcf	(___flmul@grs+2)^0,f,c
  3098   00093E  3640               	rlcf	(___flmul@grs+3)^0,f,c
  3099   000940  0647               	decf	___flmul@temp^0,f,c
  3100   000942  A0D8               	btfss	status,0,c
  3101   000944  0648               	decf	(___flmul@temp+1)^0,f,c
  3102   000946                     l3523:
  3103   000946  AE45               	btfss	(___flmul@prod+2)^0,7,c
  3104   000948  EFA8  F004         	goto	u2981
  3105   00094C  EFAA  F004         	goto	u2980
  3106   000950                     u2981:
  3107   000950  EF8E  F004         	goto	l3517
  3108   000954                     u2980:
  3109   000954  0E00               	movlw	0
  3110   000956  6E41               	movwf	___flmul@aexp^0,c
  3111   000958  AE40               	btfss	(___flmul@grs+3)^0,7,c
  3112   00095A  EFB1  F004         	goto	u2991
  3113   00095E  EFB3  F004         	goto	u2990
  3114   000962                     u2991:
  3115   000962  EFD7  F004         	goto	l1319
  3116   000966                     u2990:
  3117   000966  0EFF               	movlw	255
  3118   000968  143D               	andwf	___flmul@grs^0,w,c
  3119   00096A  6E38               	movwf	??___flmul^0,c
  3120   00096C  0EFF               	movlw	255
  3121   00096E  143E               	andwf	(___flmul@grs+1)^0,w,c
  3122   000970  6E39               	movwf	(??___flmul+1)^0,c
  3123   000972  0EFF               	movlw	255
  3124   000974  143F               	andwf	(___flmul@grs+2)^0,w,c
  3125   000976  6E3A               	movwf	(??___flmul+2)^0,c
  3126   000978  0E7F               	movlw	127
  3127   00097A  1440               	andwf	(___flmul@grs+3)^0,w,c
  3128   00097C  6E3B               	movwf	(??___flmul+3)^0,c
  3129   00097E  5038               	movf	??___flmul^0,w,c
  3130   000980  1039               	iorwf	(??___flmul+1)^0,w,c
  3131   000982  103A               	iorwf	(??___flmul+2)^0,w,c
  3132   000984  103B               	iorwf	(??___flmul+3)^0,w,c
  3133   000986  B4D8               	btfsc	status,2,c
  3134   000988  EFC8  F004         	goto	u3001
  3135   00098C  EFCA  F004         	goto	u3000
  3136   000990                     u3001:
  3137   000990  EFCE  F004         	goto	l1320
  3138   000994                     u3000:
  3139   000994                     l3531:
  3140   000994  0E01               	movlw	1
  3141   000996  6E41               	movwf	___flmul@aexp^0,c
  3142   000998  EFD7  F004         	goto	l1319
  3143   00099C                     l1320:
  3144   00099C  A043               	btfss	___flmul@prod^0,0,c
  3145   00099E  EFD3  F004         	goto	u3011
  3146   0009A2  EFD5  F004         	goto	u3010
  3147   0009A6                     u3011:
  3148   0009A6  EFD7  F004         	goto	l1319
  3149   0009AA                     u3010:
  3150   0009AA  EFCA  F004         	goto	l3531
  3151   0009AE                     l1319:
  3152   0009AE  5041               	movf	___flmul@aexp^0,w,c
  3153   0009B0  B4D8               	btfsc	status,2,c
  3154   0009B2  EFDD  F004         	goto	u3021
  3155   0009B6  EFDF  F004         	goto	u3020
  3156   0009BA                     u3021:
  3157   0009BA  EF03  F005         	goto	l3543
  3158   0009BE                     u3020:
  3159   0009BE  0E01               	movlw	1
  3160   0009C0  2643               	addwf	___flmul@prod^0,f,c
  3161   0009C2  0E00               	movlw	0
  3162   0009C4  2244               	addwfc	(___flmul@prod+1)^0,f,c
  3163   0009C6  2245               	addwfc	(___flmul@prod+2)^0,f,c
  3164   0009C8  2246               	addwfc	(___flmul@prod+3)^0,f,c
  3165   0009CA  A046               	btfss	(___flmul@prod+3)^0,0,c
  3166   0009CC  EFEA  F004         	goto	u3031
  3167   0009D0  EFEC  F004         	goto	u3030
  3168   0009D4                     u3031:
  3169   0009D4  EF03  F005         	goto	l3543
  3170   0009D8                     u3030:
  3171   0009D8  C043  F038         	movff	___flmul@prod,??___flmul
  3172   0009DC  C044  F039         	movff	___flmul@prod+1,??___flmul+1
  3173   0009E0  C045  F03A         	movff	___flmul@prod+2,??___flmul+2
  3174   0009E4  C046  F03B         	movff	___flmul@prod+3,??___flmul+3
  3175   0009E8  343B               	rlcf	(??___flmul+3)^0,w,c
  3176   0009EA  323B               	rrcf	(??___flmul+3)^0,f,c
  3177   0009EC  323A               	rrcf	(??___flmul+2)^0,f,c
  3178   0009EE  3239               	rrcf	(??___flmul+1)^0,f,c
  3179   0009F0  3238               	rrcf	??___flmul^0,f,c
  3180   0009F2  C038  F043         	movff	??___flmul,___flmul@prod
  3181   0009F6  C039  F044         	movff	??___flmul+1,___flmul@prod+1
  3182   0009FA  C03A  F045         	movff	??___flmul+2,___flmul@prod+2
  3183   0009FE  C03B  F046         	movff	??___flmul+3,___flmul@prod+3
  3184   000A02  4A47               	infsnz	___flmul@temp^0,f,c
  3185   000A04  2A48               	incf	(___flmul@temp+1)^0,f,c
  3186   000A06                     l3543:
  3187   000A06  BE48               	btfsc	(___flmul@temp+1)^0,7,c
  3188   000A08  EF0E  F005         	goto	u3041
  3189   000A0C  5048               	movf	(___flmul@temp+1)^0,w,c
  3190   000A0E  E108               	bnz	u3040
  3191   000A10  2847               	incf	___flmul@temp^0,w,c
  3192   000A12  A0D8               	btfss	status,0,c
  3193   000A14  EF0E  F005         	goto	u3041
  3194   000A18  EF10  F005         	goto	u3040
  3195   000A1C                     u3041:
  3196   000A1C  EF1A  F005         	goto	l3547
  3197   000A20                     u3040:
  3198   000A20  0E00               	movlw	0
  3199   000A22  6E43               	movwf	___flmul@prod^0,c
  3200   000A24  0E00               	movlw	0
  3201   000A26  6E44               	movwf	(___flmul@prod+1)^0,c
  3202   000A28  0E80               	movlw	128
  3203   000A2A  6E45               	movwf	(___flmul@prod+2)^0,c
  3204   000A2C  0E7F               	movlw	127
  3205   000A2E  6E46               	movwf	(___flmul@prod+3)^0,c
  3206   000A30  EF48  F005         	goto	l3559
  3207   000A34                     l3547:
  3208   000A34  BE48               	btfsc	(___flmul@temp+1)^0,7,c
  3209   000A36  EF27  F005         	goto	u3050
  3210   000A3A  5048               	movf	(___flmul@temp+1)^0,w,c
  3211   000A3C  E106               	bnz	u3051
  3212   000A3E  0447               	decf	___flmul@temp^0,w,c
  3213   000A40  B0D8               	btfsc	status,0,c
  3214   000A42  EF25  F005         	goto	u3051
  3215   000A46  EF27  F005         	goto	u3050
  3216   000A4A                     u3051:
  3217   000A4A  EF33  F005         	goto	l1327
  3218   000A4E                     u3050:
  3219   000A4E  0E00               	movlw	0
  3220   000A50  6E43               	movwf	___flmul@prod^0,c
  3221   000A52  0E00               	movlw	0
  3222   000A54  6E44               	movwf	(___flmul@prod+1)^0,c
  3223   000A56  0E00               	movlw	0
  3224   000A58  6E45               	movwf	(___flmul@prod+2)^0,c
  3225   000A5A  0E00               	movlw	0
  3226   000A5C  6E46               	movwf	(___flmul@prod+3)^0,c
  3227   000A5E  0E00               	movlw	0
  3228   000A60  6E3C               	movwf	___flmul@sign^0,c
  3229   000A62  EF48  F005         	goto	l3559
  3230   000A66                     l1327:
  3231   000A66  C047  F042         	movff	___flmul@temp,___flmul@bexp
  3232   000A6A  0EFF               	movlw	255
  3233   000A6C  1643               	andwf	___flmul@prod^0,f,c
  3234   000A6E  0EFF               	movlw	255
  3235   000A70  1644               	andwf	(___flmul@prod+1)^0,f,c
  3236   000A72  0E7F               	movlw	127
  3237   000A74  1645               	andwf	(___flmul@prod+2)^0,f,c
  3238   000A76  0E00               	movlw	0
  3239   000A78  1646               	andwf	(___flmul@prod+3)^0,f,c
  3240   000A7A  A042               	btfss	___flmul@bexp^0,0,c
  3241   000A7C  EF42  F005         	goto	u3061
  3242   000A80  EF44  F005         	goto	u3060
  3243   000A84                     u3061:
  3244   000A84  EF45  F005         	goto	l3557
  3245   000A88                     u3060:
  3246   000A88  8E45               	bsf	(___flmul@prod+2)^0,7,c
  3247   000A8A                     l3557:
  3248   000A8A  90D8               	bcf	status,0,c
  3249   000A8C  3042               	rrcf	___flmul@bexp^0,w,c
  3250   000A8E  6E46               	movwf	(___flmul@prod+3)^0,c
  3251   000A90                     l3559:
  3252   000A90  503C               	movf	___flmul@sign^0,w,c
  3253   000A92  1246               	iorwf	(___flmul@prod+3)^0,f,c
  3254   000A94  C043  F030         	movff	___flmul@prod,?___flmul
  3255   000A98  C044  F031         	movff	___flmul@prod+1,?___flmul+1
  3256   000A9C  C045  F032         	movff	___flmul@prod+2,?___flmul+2
  3257   000AA0  C046  F033         	movff	___flmul@prod+3,?___flmul+3
  3258   000AA4                     l1314:
  3259   000AA4  0012               	return		;funcret
  3260   000AA6                     __end_of___flmul:
  3261                           	callstack 0
  3262                           
  3263 ;; *************** function ___fldiv *****************
  3264 ;; Defined at:
  3265 ;;		line 11 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\sprcdiv.c"
  3266 ;; Parameters:    Size  Location     Type
  3267 ;;  b               4   22[COMRAM] unsigned char 
  3268 ;;  a               4   26[COMRAM] unsigned char 
  3269 ;; Auto vars:     Size  Location     Type
  3270 ;;  grs             4   41[COMRAM] unsigned long 
  3271 ;;  rem             4   34[COMRAM] unsigned long 
  3272 ;;  new_exp         2   39[COMRAM] short 
  3273 ;;  aexp            1   46[COMRAM] unsigned char 
  3274 ;;  bexp            1   45[COMRAM] unsigned char 
  3275 ;;  sign            1   38[COMRAM] unsigned char 
  3276 ;; Return value:  Size  Location     Type
  3277 ;;                  4   22[COMRAM] unsigned char 
  3278 ;; Registers used:
  3279 ;;		wreg, status,2, status,0
  3280 ;; Tracked objects:
  3281 ;;		On entry : 0/0
  3282 ;;		On exit  : 0/0
  3283 ;;		Unchanged: 0/0
  3284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3285 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3286 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3287 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3288 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3289 ;;Total ram usage:       25 bytes
  3290 ;; Hardware stack levels used: 1
  3291 ;; Hardware stack levels required when called: 7
  3292 ;; This function calls:
  3293 ;;		Nothing
  3294 ;; This function is called by:
  3295 ;;		_detect_color
  3296 ;; This function uses a non-reentrant model
  3297 ;;
  3298                           
  3299                           	psect	text6
  3300   000AA6                     __ptext6:
  3301                           	callstack 0
  3302   000AA6                     ___fldiv:
  3303                           	callstack 22
  3304   000AA6  501A               	movf	(___fldiv@b+3)^0,w,c
  3305   000AA8  0B80               	andlw	128
  3306   000AAA  6E27               	movwf	___fldiv@sign^0,c
  3307   000AAC  501A               	movf	(___fldiv@b+3)^0,w,c
  3308   000AAE  241A               	addwf	(___fldiv@b+3)^0,w,c
  3309   000AB0  6E2E               	movwf	___fldiv@bexp^0,c
  3310   000AB2  AE19               	btfss	(___fldiv@b+2)^0,7,c
  3311   000AB4  EF5E  F005         	goto	u2651
  3312   000AB8  EF60  F005         	goto	u2650
  3313   000ABC                     u2651:
  3314   000ABC  EF61  F005         	goto	l3303
  3315   000AC0                     u2650:
  3316   000AC0  802E               	bsf	___fldiv@bexp^0,0,c
  3317   000AC2                     l3303:
  3318   000AC2  502E               	movf	___fldiv@bexp^0,w,c
  3319   000AC4  B4D8               	btfsc	status,2,c
  3320   000AC6  EF67  F005         	goto	u2661
  3321   000ACA  EF69  F005         	goto	u2660
  3322   000ACE                     u2661:
  3323   000ACE  EF7E  F005         	goto	l3313
  3324   000AD2                     u2660:
  3325   000AD2  282E               	incf	___fldiv@bexp^0,w,c
  3326   000AD4  A4D8               	btfss	status,2,c
  3327   000AD6  EF6F  F005         	goto	u2671
  3328   000ADA  EF71  F005         	goto	u2670
  3329   000ADE                     u2671:
  3330   000ADE  EF79  F005         	goto	l3309
  3331   000AE2                     u2670:
  3332   000AE2  0E00               	movlw	0
  3333   000AE4  6E17               	movwf	___fldiv@b^0,c
  3334   000AE6  0E00               	movlw	0
  3335   000AE8  6E18               	movwf	(___fldiv@b+1)^0,c
  3336   000AEA  0E00               	movlw	0
  3337   000AEC  6E19               	movwf	(___fldiv@b+2)^0,c
  3338   000AEE  0E00               	movlw	0
  3339   000AF0  6E1A               	movwf	(___fldiv@b+3)^0,c
  3340   000AF2                     l3309:
  3341   000AF2  8E19               	bsf	(___fldiv@b+2)^0,7,c
  3342   000AF4  0E00               	movlw	0
  3343   000AF6  6E1A               	movwf	(___fldiv@b+3)^0,c
  3344   000AF8  EF86  F005         	goto	l3315
  3345   000AFC                     l3313:
  3346   000AFC  0E00               	movlw	0
  3347   000AFE  6E17               	movwf	___fldiv@b^0,c
  3348   000B00  0E00               	movlw	0
  3349   000B02  6E18               	movwf	(___fldiv@b+1)^0,c
  3350   000B04  0E00               	movlw	0
  3351   000B06  6E19               	movwf	(___fldiv@b+2)^0,c
  3352   000B08  0E00               	movlw	0
  3353   000B0A  6E1A               	movwf	(___fldiv@b+3)^0,c
  3354   000B0C                     l3315:
  3355   000B0C  501E               	movf	(___fldiv@a+3)^0,w,c
  3356   000B0E  0B80               	andlw	128
  3357   000B10  1A27               	xorwf	___fldiv@sign^0,f,c
  3358   000B12  501E               	movf	(___fldiv@a+3)^0,w,c
  3359   000B14  241E               	addwf	(___fldiv@a+3)^0,w,c
  3360   000B16  6E2F               	movwf	___fldiv@aexp^0,c
  3361   000B18  AE1D               	btfss	(___fldiv@a+2)^0,7,c
  3362   000B1A  EF91  F005         	goto	u2681
  3363   000B1E  EF93  F005         	goto	u2680
  3364   000B22                     u2681:
  3365   000B22  EF94  F005         	goto	l3323
  3366   000B26                     u2680:
  3367   000B26  802F               	bsf	___fldiv@aexp^0,0,c
  3368   000B28                     l3323:
  3369   000B28  502F               	movf	___fldiv@aexp^0,w,c
  3370   000B2A  B4D8               	btfsc	status,2,c
  3371   000B2C  EF9A  F005         	goto	u2691
  3372   000B30  EF9C  F005         	goto	u2690
  3373   000B34                     u2691:
  3374   000B34  EFB1  F005         	goto	l3333
  3375   000B38                     u2690:
  3376   000B38  282F               	incf	___fldiv@aexp^0,w,c
  3377   000B3A  A4D8               	btfss	status,2,c
  3378   000B3C  EFA2  F005         	goto	u2701
  3379   000B40  EFA4  F005         	goto	u2700
  3380   000B44                     u2701:
  3381   000B44  EFAC  F005         	goto	l3329
  3382   000B48                     u2700:
  3383   000B48  0E00               	movlw	0
  3384   000B4A  6E1B               	movwf	___fldiv@a^0,c
  3385   000B4C  0E00               	movlw	0
  3386   000B4E  6E1C               	movwf	(___fldiv@a+1)^0,c
  3387   000B50  0E00               	movlw	0
  3388   000B52  6E1D               	movwf	(___fldiv@a+2)^0,c
  3389   000B54  0E00               	movlw	0
  3390   000B56  6E1E               	movwf	(___fldiv@a+3)^0,c
  3391   000B58                     l3329:
  3392   000B58  8E1D               	bsf	(___fldiv@a+2)^0,7,c
  3393   000B5A  0E00               	movlw	0
  3394   000B5C  6E1E               	movwf	(___fldiv@a+3)^0,c
  3395   000B5E  EFB9  F005         	goto	l3335
  3396   000B62                     l3333:
  3397   000B62  0E00               	movlw	0
  3398   000B64  6E1B               	movwf	___fldiv@a^0,c
  3399   000B66  0E00               	movlw	0
  3400   000B68  6E1C               	movwf	(___fldiv@a+1)^0,c
  3401   000B6A  0E00               	movlw	0
  3402   000B6C  6E1D               	movwf	(___fldiv@a+2)^0,c
  3403   000B6E  0E00               	movlw	0
  3404   000B70  6E1E               	movwf	(___fldiv@a+3)^0,c
  3405   000B72                     l3335:
  3406   000B72  501B               	movf	___fldiv@a^0,w,c
  3407   000B74  101C               	iorwf	(___fldiv@a+1)^0,w,c
  3408   000B76  101D               	iorwf	(___fldiv@a+2)^0,w,c
  3409   000B78  101E               	iorwf	(___fldiv@a+3)^0,w,c
  3410   000B7A  A4D8               	btfss	status,2,c
  3411   000B7C  EFC2  F005         	goto	u2711
  3412   000B80  EFC4  F005         	goto	u2710
  3413   000B84                     u2711:
  3414   000B84  EFDC  F005         	goto	l3347
  3415   000B88                     u2710:
  3416   000B88  0E00               	movlw	0
  3417   000B8A  6E17               	movwf	___fldiv@b^0,c
  3418   000B8C  0E00               	movlw	0
  3419   000B8E  6E18               	movwf	(___fldiv@b+1)^0,c
  3420   000B90  0E00               	movlw	0
  3421   000B92  6E19               	movwf	(___fldiv@b+2)^0,c
  3422   000B94  0E00               	movlw	0
  3423   000B96  6E1A               	movwf	(___fldiv@b+3)^0,c
  3424   000B98  0E80               	movlw	128
  3425   000B9A  1219               	iorwf	(___fldiv@b+2)^0,f,c
  3426   000B9C  0E7F               	movlw	127
  3427   000B9E  121A               	iorwf	(___fldiv@b+3)^0,f,c
  3428   000BA0                     l3341:
  3429   000BA0  5027               	movf	___fldiv@sign^0,w,c
  3430   000BA2  121A               	iorwf	(___fldiv@b+3)^0,f,c
  3431   000BA4  C017  F017         	movff	___fldiv@b,?___fldiv
  3432   000BA8  C018  F018         	movff	___fldiv@b+1,?___fldiv+1
  3433   000BAC  C019  F019         	movff	___fldiv@b+2,?___fldiv+2
  3434   000BB0  C01A  F01A         	movff	___fldiv@b+3,?___fldiv+3
  3435   000BB4  EF1F  F007         	goto	l1278
  3436   000BB8                     l3347:
  3437   000BB8  502E               	movf	___fldiv@bexp^0,w,c
  3438   000BBA  A4D8               	btfss	status,2,c
  3439   000BBC  EFE2  F005         	goto	u2721
  3440   000BC0  EFE4  F005         	goto	u2720
  3441   000BC4                     u2721:
  3442   000BC4  EFEE  F005         	goto	l3355
  3443   000BC8                     u2720:
  3444   000BC8  0E00               	movlw	0
  3445   000BCA  6E17               	movwf	?___fldiv^0,c
  3446   000BCC  0E00               	movlw	0
  3447   000BCE  6E18               	movwf	(?___fldiv+1)^0,c
  3448   000BD0  0E00               	movlw	0
  3449   000BD2  6E19               	movwf	(?___fldiv+2)^0,c
  3450   000BD4  0E00               	movlw	0
  3451   000BD6  6E1A               	movwf	(?___fldiv+3)^0,c
  3452   000BD8  EF1F  F007         	goto	l1278
  3453   000BDC                     l3355:
  3454   000BDC  502F               	movf	___fldiv@aexp^0,w,c
  3455   000BDE  C02E  F01F         	movff	___fldiv@bexp,??___fldiv
  3456   000BE2  6A20               	clrf	(??___fldiv+1)^0,c
  3457   000BE4  5E1F               	subwf	??___fldiv^0,f,c
  3458   000BE6  0E00               	movlw	0
  3459   000BE8  5A20               	subwfb	(??___fldiv+1)^0,f,c
  3460   000BEA  0E7F               	movlw	127
  3461   000BEC  241F               	addwf	??___fldiv^0,w,c
  3462   000BEE  6E28               	movwf	___fldiv@new_exp^0,c
  3463   000BF0  0E00               	movlw	0
  3464   000BF2  2020               	addwfc	(??___fldiv+1)^0,w,c
  3465   000BF4  6E29               	movwf	(___fldiv@new_exp+1)^0,c
  3466   000BF6  C017  F023         	movff	___fldiv@b,___fldiv@rem
  3467   000BFA  C018  F024         	movff	___fldiv@b+1,___fldiv@rem+1
  3468   000BFE  C019  F025         	movff	___fldiv@b+2,___fldiv@rem+2
  3469   000C02  C01A  F026         	movff	___fldiv@b+3,___fldiv@rem+3
  3470   000C06  0E00               	movlw	0
  3471   000C08  6E17               	movwf	___fldiv@b^0,c
  3472   000C0A  0E00               	movlw	0
  3473   000C0C  6E18               	movwf	(___fldiv@b+1)^0,c
  3474   000C0E  0E00               	movlw	0
  3475   000C10  6E19               	movwf	(___fldiv@b+2)^0,c
  3476   000C12  0E00               	movlw	0
  3477   000C14  6E1A               	movwf	(___fldiv@b+3)^0,c
  3478   000C16  0E00               	movlw	0
  3479   000C18  6E2A               	movwf	___fldiv@grs^0,c
  3480   000C1A  0E00               	movlw	0
  3481   000C1C  6E2B               	movwf	(___fldiv@grs+1)^0,c
  3482   000C1E  0E00               	movlw	0
  3483   000C20  6E2C               	movwf	(___fldiv@grs+2)^0,c
  3484   000C22  0E00               	movlw	0
  3485   000C24  6E2D               	movwf	(___fldiv@grs+3)^0,c
  3486   000C26  0E00               	movlw	0
  3487   000C28  6E2F               	movwf	___fldiv@aexp^0,c
  3488   000C2A  EF4F  F006         	goto	l1280
  3489   000C2E                     l3365:
  3490   000C2E  502F               	movf	___fldiv@aexp^0,w,c
  3491   000C30  B4D8               	btfsc	status,2,c
  3492   000C32  EF1D  F006         	goto	u2731
  3493   000C36  EF1F  F006         	goto	u2730
  3494   000C3A                     u2731:
  3495   000C3A  EF36  F006         	goto	l3373
  3496   000C3E                     u2730:
  3497   000C3E  90D8               	bcf	status,0,c
  3498   000C40  3623               	rlcf	___fldiv@rem^0,f,c
  3499   000C42  3624               	rlcf	(___fldiv@rem+1)^0,f,c
  3500   000C44  3625               	rlcf	(___fldiv@rem+2)^0,f,c
  3501   000C46  3626               	rlcf	(___fldiv@rem+3)^0,f,c
  3502   000C48  90D8               	bcf	status,0,c
  3503   000C4A  3617               	rlcf	___fldiv@b^0,f,c
  3504   000C4C  3618               	rlcf	(___fldiv@b+1)^0,f,c
  3505   000C4E  3619               	rlcf	(___fldiv@b+2)^0,f,c
  3506   000C50  361A               	rlcf	(___fldiv@b+3)^0,f,c
  3507   000C52  AE2D               	btfss	(___fldiv@grs+3)^0,7,c
  3508   000C54  EF2E  F006         	goto	u2741
  3509   000C58  EF30  F006         	goto	u2740
  3510   000C5C                     u2741:
  3511   000C5C  EF31  F006         	goto	l1283
  3512   000C60                     u2740:
  3513   000C60  8017               	bsf	___fldiv@b^0,0,c
  3514   000C62                     l1283:
  3515   000C62  90D8               	bcf	status,0,c
  3516   000C64  362A               	rlcf	___fldiv@grs^0,f,c
  3517   000C66  362B               	rlcf	(___fldiv@grs+1)^0,f,c
  3518   000C68  362C               	rlcf	(___fldiv@grs+2)^0,f,c
  3519   000C6A  362D               	rlcf	(___fldiv@grs+3)^0,f,c
  3520   000C6C                     l3373:
  3521   000C6C  501B               	movf	___fldiv@a^0,w,c
  3522   000C6E  5C23               	subwf	___fldiv@rem^0,w,c
  3523   000C70  501C               	movf	(___fldiv@a+1)^0,w,c
  3524   000C72  5824               	subwfb	(___fldiv@rem+1)^0,w,c
  3525   000C74  501D               	movf	(___fldiv@a+2)^0,w,c
  3526   000C76  5825               	subwfb	(___fldiv@rem+2)^0,w,c
  3527   000C78  501E               	movf	(___fldiv@a+3)^0,w,c
  3528   000C7A  5826               	subwfb	(___fldiv@rem+3)^0,w,c
  3529   000C7C  A0D8               	btfss	status,0,c
  3530   000C7E  EF43  F006         	goto	u2751
  3531   000C82  EF45  F006         	goto	u2750
  3532   000C86                     u2751:
  3533   000C86  EF4E  F006         	goto	l3379
  3534   000C8A                     u2750:
  3535   000C8A  8C2D               	bsf	(___fldiv@grs+3)^0,6,c
  3536   000C8C  501B               	movf	___fldiv@a^0,w,c
  3537   000C8E  5E23               	subwf	___fldiv@rem^0,f,c
  3538   000C90  501C               	movf	(___fldiv@a+1)^0,w,c
  3539   000C92  5A24               	subwfb	(___fldiv@rem+1)^0,f,c
  3540   000C94  501D               	movf	(___fldiv@a+2)^0,w,c
  3541   000C96  5A25               	subwfb	(___fldiv@rem+2)^0,f,c
  3542   000C98  501E               	movf	(___fldiv@a+3)^0,w,c
  3543   000C9A  5A26               	subwfb	(___fldiv@rem+3)^0,f,c
  3544   000C9C                     l3379:
  3545   000C9C  2A2F               	incf	___fldiv@aexp^0,f,c
  3546   000C9E                     l1280:
  3547   000C9E  0E19               	movlw	25
  3548   000CA0  642F               	cpfsgt	___fldiv@aexp^0,c
  3549   000CA2  EF55  F006         	goto	u2761
  3550   000CA6  EF57  F006         	goto	u2760
  3551   000CAA                     u2761:
  3552   000CAA  EF17  F006         	goto	l3365
  3553   000CAE                     u2760:
  3554   000CAE  5023               	movf	___fldiv@rem^0,w,c
  3555   000CB0  1024               	iorwf	(___fldiv@rem+1)^0,w,c
  3556   000CB2  1025               	iorwf	(___fldiv@rem+2)^0,w,c
  3557   000CB4  1026               	iorwf	(___fldiv@rem+3)^0,w,c
  3558   000CB6  B4D8               	btfsc	status,2,c
  3559   000CB8  EF60  F006         	goto	u2771
  3560   000CBC  EF62  F006         	goto	u2770
  3561   000CC0                     u2771:
  3562   000CC0  EF7A  F006         	goto	l3391
  3563   000CC4                     u2770:
  3564   000CC4  802A               	bsf	___fldiv@grs^0,0,c
  3565   000CC6  EF7A  F006         	goto	l3391
  3566   000CCA                     l3385:
  3567   000CCA  90D8               	bcf	status,0,c
  3568   000CCC  3617               	rlcf	___fldiv@b^0,f,c
  3569   000CCE  3618               	rlcf	(___fldiv@b+1)^0,f,c
  3570   000CD0  3619               	rlcf	(___fldiv@b+2)^0,f,c
  3571   000CD2  361A               	rlcf	(___fldiv@b+3)^0,f,c
  3572   000CD4  AE2D               	btfss	(___fldiv@grs+3)^0,7,c
  3573   000CD6  EF6F  F006         	goto	u2781
  3574   000CDA  EF71  F006         	goto	u2780
  3575   000CDE                     u2781:
  3576   000CDE  EF72  F006         	goto	l1289
  3577   000CE2                     u2780:
  3578   000CE2  8017               	bsf	___fldiv@b^0,0,c
  3579   000CE4                     l1289:
  3580   000CE4  90D8               	bcf	status,0,c
  3581   000CE6  362A               	rlcf	___fldiv@grs^0,f,c
  3582   000CE8  362B               	rlcf	(___fldiv@grs+1)^0,f,c
  3583   000CEA  362C               	rlcf	(___fldiv@grs+2)^0,f,c
  3584   000CEC  362D               	rlcf	(___fldiv@grs+3)^0,f,c
  3585   000CEE  0628               	decf	___fldiv@new_exp^0,f,c
  3586   000CF0  A0D8               	btfss	status,0,c
  3587   000CF2  0629               	decf	(___fldiv@new_exp+1)^0,f,c
  3588   000CF4                     l3391:
  3589   000CF4  AE19               	btfss	(___fldiv@b+2)^0,7,c
  3590   000CF6  EF7F  F006         	goto	u2791
  3591   000CFA  EF81  F006         	goto	u2790
  3592   000CFE                     u2791:
  3593   000CFE  EF65  F006         	goto	l3385
  3594   000D02                     u2790:
  3595   000D02  0E00               	movlw	0
  3596   000D04  6E2F               	movwf	___fldiv@aexp^0,c
  3597   000D06  AE2D               	btfss	(___fldiv@grs+3)^0,7,c
  3598   000D08  EF88  F006         	goto	u2801
  3599   000D0C  EF8A  F006         	goto	u2800
  3600   000D10                     u2801:
  3601   000D10  EFAE  F006         	goto	l1291
  3602   000D14                     u2800:
  3603   000D14  0EFF               	movlw	255
  3604   000D16  142A               	andwf	___fldiv@grs^0,w,c
  3605   000D18  6E1F               	movwf	??___fldiv^0,c
  3606   000D1A  0EFF               	movlw	255
  3607   000D1C  142B               	andwf	(___fldiv@grs+1)^0,w,c
  3608   000D1E  6E20               	movwf	(??___fldiv+1)^0,c
  3609   000D20  0EFF               	movlw	255
  3610   000D22  142C               	andwf	(___fldiv@grs+2)^0,w,c
  3611   000D24  6E21               	movwf	(??___fldiv+2)^0,c
  3612   000D26  0E7F               	movlw	127
  3613   000D28  142D               	andwf	(___fldiv@grs+3)^0,w,c
  3614   000D2A  6E22               	movwf	(??___fldiv+3)^0,c
  3615   000D2C  501F               	movf	??___fldiv^0,w,c
  3616   000D2E  1020               	iorwf	(??___fldiv+1)^0,w,c
  3617   000D30  1021               	iorwf	(??___fldiv+2)^0,w,c
  3618   000D32  1022               	iorwf	(??___fldiv+3)^0,w,c
  3619   000D34  B4D8               	btfsc	status,2,c
  3620   000D36  EF9F  F006         	goto	u2811
  3621   000D3A  EFA1  F006         	goto	u2810
  3622   000D3E                     u2811:
  3623   000D3E  EFA5  F006         	goto	l1292
  3624   000D42                     u2810:
  3625   000D42                     l3399:
  3626   000D42  0E01               	movlw	1
  3627   000D44  6E2F               	movwf	___fldiv@aexp^0,c
  3628   000D46  EFAE  F006         	goto	l1291
  3629   000D4A                     l1292:
  3630   000D4A  A017               	btfss	___fldiv@b^0,0,c
  3631   000D4C  EFAA  F006         	goto	u2821
  3632   000D50  EFAC  F006         	goto	u2820
  3633   000D54                     u2821:
  3634   000D54  EFAE  F006         	goto	l1291
  3635   000D58                     u2820:
  3636   000D58  EFA1  F006         	goto	l3399
  3637   000D5C                     l1291:
  3638   000D5C  502F               	movf	___fldiv@aexp^0,w,c
  3639   000D5E  B4D8               	btfsc	status,2,c
  3640   000D60  EFB4  F006         	goto	u2831
  3641   000D64  EFB6  F006         	goto	u2830
  3642   000D68                     u2831:
  3643   000D68  EFDA  F006         	goto	l3411
  3644   000D6C                     u2830:
  3645   000D6C  0E01               	movlw	1
  3646   000D6E  2617               	addwf	___fldiv@b^0,f,c
  3647   000D70  0E00               	movlw	0
  3648   000D72  2218               	addwfc	(___fldiv@b+1)^0,f,c
  3649   000D74  2219               	addwfc	(___fldiv@b+2)^0,f,c
  3650   000D76  221A               	addwfc	(___fldiv@b+3)^0,f,c
  3651   000D78  A01A               	btfss	(___fldiv@b+3)^0,0,c
  3652   000D7A  EFC1  F006         	goto	u2841
  3653   000D7E  EFC3  F006         	goto	u2840
  3654   000D82                     u2841:
  3655   000D82  EFDA  F006         	goto	l3411
  3656   000D86                     u2840:
  3657   000D86  C017  F01F         	movff	___fldiv@b,??___fldiv
  3658   000D8A  C018  F020         	movff	___fldiv@b+1,??___fldiv+1
  3659   000D8E  C019  F021         	movff	___fldiv@b+2,??___fldiv+2
  3660   000D92  C01A  F022         	movff	___fldiv@b+3,??___fldiv+3
  3661   000D96  3422               	rlcf	(??___fldiv+3)^0,w,c
  3662   000D98  3222               	rrcf	(??___fldiv+3)^0,f,c
  3663   000D9A  3221               	rrcf	(??___fldiv+2)^0,f,c
  3664   000D9C  3220               	rrcf	(??___fldiv+1)^0,f,c
  3665   000D9E  321F               	rrcf	??___fldiv^0,f,c
  3666   000DA0  C01F  F017         	movff	??___fldiv,___fldiv@b
  3667   000DA4  C020  F018         	movff	??___fldiv+1,___fldiv@b+1
  3668   000DA8  C021  F019         	movff	??___fldiv+2,___fldiv@b+2
  3669   000DAC  C022  F01A         	movff	??___fldiv+3,___fldiv@b+3
  3670   000DB0  4A28               	infsnz	___fldiv@new_exp^0,f,c
  3671   000DB2  2A29               	incf	(___fldiv@new_exp+1)^0,f,c
  3672   000DB4                     l3411:
  3673   000DB4  BE29               	btfsc	(___fldiv@new_exp+1)^0,7,c
  3674   000DB6  EFE5  F006         	goto	u2851
  3675   000DBA  5029               	movf	(___fldiv@new_exp+1)^0,w,c
  3676   000DBC  E108               	bnz	u2850
  3677   000DBE  2828               	incf	___fldiv@new_exp^0,w,c
  3678   000DC0  A0D8               	btfss	status,0,c
  3679   000DC2  EFE5  F006         	goto	u2851
  3680   000DC6  EFE7  F006         	goto	u2850
  3681   000DCA                     u2851:
  3682   000DCA  EFF2  F006         	goto	l3415
  3683   000DCE                     u2850:
  3684   000DCE  0E00               	movlw	0
  3685   000DD0  6E29               	movwf	(___fldiv@new_exp+1)^0,c
  3686   000DD2  6828               	setf	___fldiv@new_exp^0,c
  3687   000DD4  0E00               	movlw	0
  3688   000DD6  6E17               	movwf	___fldiv@b^0,c
  3689   000DD8  0E00               	movlw	0
  3690   000DDA  6E18               	movwf	(___fldiv@b+1)^0,c
  3691   000DDC  0E00               	movlw	0
  3692   000DDE  6E19               	movwf	(___fldiv@b+2)^0,c
  3693   000DE0  0E00               	movlw	0
  3694   000DE2  6E1A               	movwf	(___fldiv@b+3)^0,c
  3695   000DE4                     l3415:
  3696   000DE4  BE29               	btfsc	(___fldiv@new_exp+1)^0,7,c
  3697   000DE6  EFFF  F006         	goto	u2860
  3698   000DEA  5029               	movf	(___fldiv@new_exp+1)^0,w,c
  3699   000DEC  E106               	bnz	u2861
  3700   000DEE  0428               	decf	___fldiv@new_exp^0,w,c
  3701   000DF0  B0D8               	btfsc	status,0,c
  3702   000DF2  EFFD  F006         	goto	u2861
  3703   000DF6  EFFF  F006         	goto	u2860
  3704   000DFA                     u2861:
  3705   000DFA  EF0D  F007         	goto	l3419
  3706   000DFE                     u2860:
  3707   000DFE  0E00               	movlw	0
  3708   000E00  6E29               	movwf	(___fldiv@new_exp+1)^0,c
  3709   000E02  0E00               	movlw	0
  3710   000E04  6E28               	movwf	___fldiv@new_exp^0,c
  3711   000E06  0E00               	movlw	0
  3712   000E08  6E17               	movwf	___fldiv@b^0,c
  3713   000E0A  0E00               	movlw	0
  3714   000E0C  6E18               	movwf	(___fldiv@b+1)^0,c
  3715   000E0E  0E00               	movlw	0
  3716   000E10  6E19               	movwf	(___fldiv@b+2)^0,c
  3717   000E12  0E00               	movlw	0
  3718   000E14  6E1A               	movwf	(___fldiv@b+3)^0,c
  3719   000E16  0E00               	movlw	0
  3720   000E18  6E27               	movwf	___fldiv@sign^0,c
  3721   000E1A                     l3419:
  3722   000E1A  C028  F02E         	movff	___fldiv@new_exp,___fldiv@bexp
  3723   000E1E  A02E               	btfss	___fldiv@bexp^0,0,c
  3724   000E20  EF14  F007         	goto	u2871
  3725   000E24  EF16  F007         	goto	u2870
  3726   000E28                     u2871:
  3727   000E28  EF19  F007         	goto	l3425
  3728   000E2C                     u2870:
  3729   000E2C  8E19               	bsf	(___fldiv@b+2)^0,7,c
  3730   000E2E  EF1A  F007         	goto	l3427
  3731   000E32                     l3425:
  3732   000E32  9E19               	bcf	(___fldiv@b+2)^0,7,c
  3733   000E34                     l3427:
  3734   000E34  90D8               	bcf	status,0,c
  3735   000E36  302E               	rrcf	___fldiv@bexp^0,w,c
  3736   000E38  6E1A               	movwf	(___fldiv@b+3)^0,c
  3737   000E3A  EFD0  F005         	goto	l3341
  3738   000E3E                     l1278:
  3739   000E3E  0012               	return		;funcret
  3740   000E40                     __end_of___fldiv:
  3741                           	callstack 0
  3742                           
  3743 ;; *************** function _color_click_init *****************
  3744 ;; Defined at:
  3745 ;;		line 6 in file "color.c"
  3746 ;; Parameters:    Size  Location     Type
  3747 ;;		None
  3748 ;; Auto vars:     Size  Location     Type
  3749 ;;		None
  3750 ;; Return value:  Size  Location     Type
  3751 ;;                  1    wreg      void 
  3752 ;; Registers used:
  3753 ;;		wreg, status,2, status,0, cstack
  3754 ;; Tracked objects:
  3755 ;;		On entry : 0/0
  3756 ;;		On exit  : 0/0
  3757 ;;		Unchanged: 0/0
  3758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3761 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3762 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3763 ;;Total ram usage:        1 bytes
  3764 ;; Hardware stack levels used: 1
  3765 ;; Hardware stack levels required when called: 10
  3766 ;; This function calls:
  3767 ;;		_I2C_2_Master_Init
  3768 ;;		_color_writetoaddr
  3769 ;; This function is called by:
  3770 ;;		_main
  3771 ;; This function uses a non-reentrant model
  3772 ;;
  3773                           
  3774                           	psect	text7
  3775   002822                     __ptext7:
  3776                           	callstack 0
  3777   002822                     _color_click_init:
  3778                           	callstack 20
  3779   002822                     
  3780                           ;color.c: 9:     I2C_2_Master_Init();
  3781   002822  EC44  F014         	call	_I2C_2_Master_Init	;wreg free
  3782   002826                     
  3783                           ;color.c: 12:   color_writetoaddr(0x00, 0x01);
  3784   002826  0E01               	movlw	1
  3785   002828  6E0B               	movwf	color_writetoaddr@value^0,c
  3786   00282A  0E00               	movlw	0
  3787   00282C  ECC7  F014         	call	_color_writetoaddr
  3788   002830                     
  3789                           ;color.c: 13:     _delay((unsigned long)((3)*(64000000/4000.0)));
  3790   002830  0E3F               	movlw	63
  3791   002832  6E0D               	movwf	??_color_click_init^0,c
  3792   002834  0E55               	movlw	85
  3793   002836                     u4537:
  3794   002836  2EE8               	decfsz	wreg,f,c
  3795   002838  D7FE               	bra	u4537
  3796   00283A  2E0D               	decfsz	??_color_click_init^0,f,c
  3797   00283C  D7FC               	bra	u4537
  3798   00283E  F000               	nop	
  3799   002840                     
  3800                           ;color.c: 16:  color_writetoaddr(0x00, 0x03);
  3801   002840  0E03               	movlw	3
  3802   002842  6E0B               	movwf	color_writetoaddr@value^0,c
  3803   002844  0E00               	movlw	0
  3804   002846  ECC7  F014         	call	_color_writetoaddr
  3805   00284A                     
  3806                           ;color.c: 19:  color_writetoaddr(0x01, 0xD5);
  3807   00284A  0ED5               	movlw	213
  3808   00284C  6E0B               	movwf	color_writetoaddr@value^0,c
  3809   00284E  0E01               	movlw	1
  3810   002850  ECC7  F014         	call	_color_writetoaddr
  3811   002854  0012               	return		;funcret
  3812   002856                     __end_of_color_click_init:
  3813                           	callstack 0
  3814                           
  3815 ;; *************** function _I2C_2_Master_Init *****************
  3816 ;; Defined at:
  3817 ;;		line 4 in file "i2c.c"
  3818 ;; Parameters:    Size  Location     Type
  3819 ;;		None
  3820 ;; Auto vars:     Size  Location     Type
  3821 ;;		None
  3822 ;; Return value:  Size  Location     Type
  3823 ;;                  1    wreg      void 
  3824 ;; Registers used:
  3825 ;;		wreg, status,2
  3826 ;; Tracked objects:
  3827 ;;		On entry : 0/0
  3828 ;;		On exit  : 0/0
  3829 ;;		Unchanged: 0/0
  3830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3834 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3835 ;;Total ram usage:        0 bytes
  3836 ;; Hardware stack levels used: 1
  3837 ;; Hardware stack levels required when called: 7
  3838 ;; This function calls:
  3839 ;;		Nothing
  3840 ;; This function is called by:
  3841 ;;		_color_click_init
  3842 ;; This function uses a non-reentrant model
  3843 ;;
  3844                           
  3845                           	psect	text8
  3846   002888                     __ptext8:
  3847                           	callstack 0
  3848   002888                     _I2C_2_Master_Init:
  3849                           	callstack 22
  3850   002888                     
  3851                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  3852   002888  010E               	movlb	14	; () banked
  3853   00288A  51D9               	movf	217,w,b	;volatile
  3854   00288C  0BF0               	andlw	-16
  3855   00288E  0908               	iorlw	8
  3856   002890  6FD9               	movwf	217,b	;volatile
  3857   002892                     
  3858                           ; BSR set to: 14
  3859                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  3860   002892  8BD9               	bsf	217,5,b	;volatile
  3861                           
  3862                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  3863   002894  0E9F               	movlw	159
  3864   002896  6FD6               	movwf	214,b	;volatile
  3865   002898                     
  3866                           ; BSR set to: 14
  3867                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  3868   002898  8A84               	bsf	132,5,c	;volatile
  3869   00289A                     
  3870                           ; BSR set to: 14
  3871                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  3872   00289A  8C84               	bsf	132,6,c	;volatile
  3873   00289C                     
  3874                           ; BSR set to: 14
  3875                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  3876   00289C  9BA7               	bcf	167,5,b	;volatile
  3877   00289E                     
  3878                           ; BSR set to: 14
  3879                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  3880   00289E  9DA7               	bcf	167,6,b	;volatile
  3881                           
  3882                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  3883   0028A0  0E1D               	movlw	29
  3884   0028A2  6F1D               	movwf	29,b	;volatile
  3885                           
  3886                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  3887   0028A4  0E1E               	movlw	30
  3888   0028A6  6F1C               	movwf	28,b	;volatile
  3889                           
  3890                           ;i2c.c: 18:   RD5PPS=0x1C;
  3891   0028A8  0E1C               	movlw	28
  3892   0028AA  6F6F               	movwf	111,b	;volatile
  3893                           
  3894                           ;i2c.c: 19:   RD6PPS=0x1B;
  3895   0028AC  0E1B               	movlw	27
  3896   0028AE  6F70               	movwf	112,b	;volatile
  3897   0028B0                     
  3898                           ; BSR set to: 14
  3899   0028B0  0012               	return		;funcret
  3900   0028B2                     __end_of_I2C_2_Master_Init:
  3901                           	callstack 0
  3902                           
  3903 ;; *************** function _WhiteLight *****************
  3904 ;; Defined at:
  3905 ;;		line 20 in file "LED_Buttons.c"
  3906 ;; Parameters:    Size  Location     Type
  3907 ;;		None
  3908 ;; Auto vars:     Size  Location     Type
  3909 ;;		None
  3910 ;; Return value:  Size  Location     Type
  3911 ;;                  1    wreg      void 
  3912 ;; Registers used:
  3913 ;;		None
  3914 ;; Tracked objects:
  3915 ;;		On entry : 0/0
  3916 ;;		On exit  : 0/0
  3917 ;;		Unchanged: 0/0
  3918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3923 ;;Total ram usage:        0 bytes
  3924 ;; Hardware stack levels used: 1
  3925 ;; Hardware stack levels required when called: 7
  3926 ;; This function calls:
  3927 ;;		Nothing
  3928 ;; This function is called by:
  3929 ;;		_main
  3930 ;; This function uses a non-reentrant model
  3931 ;;
  3932                           
  3933                           	psect	text9
  3934   002A9A                     __ptext9:
  3935                           	callstack 0
  3936   002A9A                     _WhiteLight:
  3937                           	callstack 23
  3938   002A9A                     
  3939                           ;LED_Buttons.c: 21:     LATGbits.LATG1 = 1;
  3940   002A9A  827F               	bsf	127,1,c	;volatile
  3941                           
  3942                           ;LED_Buttons.c: 22:     LATAbits.LATA4 = 1;
  3943   002A9C  8879               	bsf	121,4,c	;volatile
  3944                           
  3945                           ;LED_Buttons.c: 23:     LATFbits.LATF7 = 1;
  3946   002A9E  8E7E               	bsf	126,7,c	;volatile
  3947   002AA0  0012               	return		;funcret
  3948   002AA2                     __end_of_WhiteLight:
  3949                           	callstack 0
  3950                           
  3951 ;; *************** function _WhiteInstructions *****************
  3952 ;; Defined at:
  3953 ;;		line 157 in file "color_instructions.c"
  3954 ;; Parameters:    Size  Location     Type
  3955 ;;  mL              2   58[COMRAM] PTR struct DC_motor
  3956 ;;		 -> main@motorL(9), 
  3957 ;;  mR              2   60[COMRAM] PTR struct DC_motor
  3958 ;;		 -> main@motorR(9), 
  3959 ;; Auto vars:     Size  Location     Type
  3960 ;;  a               2   67[COMRAM] unsigned int 
  3961 ;;  c               2   64[COMRAM] unsigned int 
  3962 ;;  anticolor       1   66[COMRAM] unsigned char 
  3963 ;; Return value:  Size  Location     Type
  3964 ;;                  1    wreg      void 
  3965 ;; Registers used:
  3966 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3967 ;; Tracked objects:
  3968 ;;		On entry : 0/0
  3969 ;;		On exit  : 0/0
  3970 ;;		Unchanged: 0/0
  3971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3972 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3973 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3974 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3975 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3976 ;;Total ram usage:       11 bytes
  3977 ;; Hardware stack levels used: 1
  3978 ;; Hardware stack levels required when called: 14
  3979 ;; This function calls:
  3980 ;;		_BlueInstructions
  3981 ;;		_MoveBuggy
  3982 ;;		_Return_Anti_Moves
  3983 ;;		_Return_Time
  3984 ;;		_fullSpeedAhead
  3985 ;;		_stop
  3986 ;; This function is called by:
  3987 ;;		_main
  3988 ;; This function uses a non-reentrant model
  3989 ;;
  3990                           
  3991                           	psect	text10
  3992   001AF0                     __ptext10:
  3993                           	callstack 0
  3994   001AF0                     _WhiteInstructions:
  3995                           	callstack 16
  3996   001AF0                     
  3997                           ;color_instructions.c: 159:     BlueInstructions(mL,mR);
  3998   001AF0  C03B  F027         	movff	WhiteInstructions@mL,BlueInstructions@mL
  3999   001AF4  C03C  F028         	movff	WhiteInstructions@mL+1,BlueInstructions@mL+1
  4000   001AF8  C03D  F029         	movff	WhiteInstructions@mR,BlueInstructions@mR
  4001   001AFC  C03E  F02A         	movff	WhiteInstructions@mR+1,BlueInstructions@mR+1
  4002   001B00  EC09  F00F         	call	_BlueInstructions	;wreg free
  4003                           
  4004                           ;color_instructions.c: 161:     while(time_index>0){
  4005   001B04  EFE3  F00D         	goto	l3885
  4006   001B08                     l3865:
  4007                           
  4008                           ; BSR set to: 0
  4009                           ;color_instructions.c: 163:         unsigned int a = 0;
  4010   001B08  0E00               	movlw	0
  4011   001B0A  6E45               	movwf	(WhiteInstructions@a+1)^0,c
  4012   001B0C  0E00               	movlw	0
  4013   001B0E  6E44               	movwf	WhiteInstructions@a^0,c
  4014   001B10                     
  4015                           ; BSR set to: 0
  4016                           ;color_instructions.c: 164:         unsigned int c = Return_Time(&time_index,time_array)
      +                          ;
  4017   001B10  0E9D               	movlw	low _time_index
  4018   001B12  6E09               	movwf	Return_Time@time_index^0,c
  4019   001B14  0E00               	movlw	high _time_index
  4020   001B16  6E0A               	movwf	(Return_Time@time_index+1)^0,c
  4021   001B18  0E3C               	movlw	low _time_array
  4022   001B1A  6E0B               	movwf	Return_Time@time_array^0,c
  4023   001B1C  0E01               	movlw	high _time_array
  4024   001B1E  6E0C               	movwf	(Return_Time@time_array+1)^0,c
  4025   001B20  ECF5  F013         	call	_Return_Time	;wreg free
  4026   001B24  C009  F041         	movff	?_Return_Time,WhiteInstructions@c
  4027   001B28  C00A  F042         	movff	?_Return_Time+1,WhiteInstructions@c+1
  4028                           
  4029                           ;color_instructions.c: 165:         while(a<c){
  4030   001B2C  EFA4  F00D         	goto	l3873
  4031   001B30                     l3869:
  4032                           
  4033                           ;color_instructions.c: 166:             fullSpeedAhead(mL,mR);
  4034   001B30  C03B  F01C         	movff	WhiteInstructions@mL,fullSpeedAhead@mL
  4035   001B34  C03C  F01D         	movff	WhiteInstructions@mL+1,fullSpeedAhead@mL+1
  4036   001B38  C03D  F01E         	movff	WhiteInstructions@mR,fullSpeedAhead@mR
  4037   001B3C  C03E  F01F         	movff	WhiteInstructions@mR+1,fullSpeedAhead@mR+1
  4038   001B40  EC13  F00C         	call	_fullSpeedAhead	;wreg free
  4039   001B44                     
  4040                           ;color_instructions.c: 167:             a++;
  4041   001B44  4A44               	infsnz	WhiteInstructions@a^0,f,c
  4042   001B46  2A45               	incf	(WhiteInstructions@a+1)^0,f,c
  4043   001B48                     l3873:
  4044                           
  4045                           ;color_instructions.c: 165:         while(a<c){
  4046   001B48  5041               	movf	WhiteInstructions@c^0,w,c
  4047   001B4A  5C44               	subwf	WhiteInstructions@a^0,w,c
  4048   001B4C  5042               	movf	(WhiteInstructions@c+1)^0,w,c
  4049   001B4E  5845               	subwfb	(WhiteInstructions@a+1)^0,w,c
  4050   001B50  A0D8               	btfss	status,0,c
  4051   001B52  EFAD  F00D         	goto	u3741
  4052   001B56  EFAF  F00D         	goto	u3740
  4053   001B5A                     u3741:
  4054   001B5A  EF98  F00D         	goto	l3869
  4055   001B5E                     u3740:
  4056   001B5E  EFBE  F00D         	goto	l3879
  4057   001B62                     l3875:
  4058                           
  4059                           ;color_instructions.c: 171:             stop(mL,mR);
  4060   001B62  C03B  F01C         	movff	WhiteInstructions@mL,stop@mL
  4061   001B66  C03C  F01D         	movff	WhiteInstructions@mL+1,stop@mL+1
  4062   001B6A  C03D  F01E         	movff	WhiteInstructions@mR,stop@mR
  4063   001B6E  C03E  F01F         	movff	WhiteInstructions@mR+1,stop@mR+1
  4064   001B72  ECED  F00D         	call	_stop	;wreg free
  4065   001B76                     
  4066                           ;color_instructions.c: 172:             a--;
  4067   001B76  0644               	decf	WhiteInstructions@a^0,f,c
  4068   001B78  A0D8               	btfss	status,0,c
  4069   001B7A  0645               	decf	(WhiteInstructions@a+1)^0,f,c
  4070   001B7C                     l3879:
  4071                           
  4072                           ;color_instructions.c: 170:         while(a>0){
  4073   001B7C  5044               	movf	WhiteInstructions@a^0,w,c
  4074   001B7E  1045               	iorwf	(WhiteInstructions@a+1)^0,w,c
  4075   001B80  A4D8               	btfss	status,2,c
  4076   001B82  EFC5  F00D         	goto	u3751
  4077   001B86  EFC7  F00D         	goto	u3750
  4078   001B8A                     u3751:
  4079   001B8A  EFB1  F00D         	goto	l3875
  4080   001B8E                     u3750:
  4081   001B8E                     
  4082                           ;color_instructions.c: 175:         unsigned char anticolor = Return_Anti_Moves(&moves_i
      +                          ndex, anti_moves_array);
  4083   001B8E  0E56               	movlw	low _moves_index
  4084   001B90  6E09               	movwf	Return_Anti_Moves@moves_index^0,c
  4085   001B92  0E00               	movlw	high _moves_index
  4086   001B94  6E0A               	movwf	(Return_Anti_Moves@moves_index+1)^0,c
  4087   001B96  0E75               	movlw	low _anti_moves_array
  4088   001B98  6E0B               	movwf	Return_Anti_Moves@anti_moves_array^0,c
  4089   001B9A  0E00               	movlw	high _anti_moves_array
  4090   001B9C  6E0C               	movwf	(Return_Anti_Moves@anti_moves_array+1)^0,c
  4091   001B9E  ECA6  F014         	call	_Return_Anti_Moves	;wreg free
  4092   001BA2  6E43               	movwf	WhiteInstructions@anticolor^0,c
  4093   001BA4                     
  4094                           ;color_instructions.c: 176:         MoveBuggy(anticolor,mL,mR);
  4095   001BA4  5043               	movf	WhiteInstructions@anticolor^0,w,c
  4096   001BA6  6E3F               	movwf	??_WhiteInstructions^0,c
  4097   001BA8  6A40               	clrf	(??_WhiteInstructions+1)^0,c
  4098   001BAA  C03F  F035         	movff	??_WhiteInstructions,MoveBuggy@color_detected
  4099   001BAE  C040  F036         	movff	??_WhiteInstructions+1,MoveBuggy@color_detected+1
  4100   001BB2  C03B  F037         	movff	WhiteInstructions@mL,MoveBuggy@mL
  4101   001BB6  C03C  F038         	movff	WhiteInstructions@mL+1,MoveBuggy@mL+1
  4102   001BBA  C03D  F039         	movff	WhiteInstructions@mR,MoveBuggy@mR
  4103   001BBE  C03E  F03A         	movff	WhiteInstructions@mR+1,MoveBuggy@mR+1
  4104   001BC2  EC20  F007         	call	_MoveBuggy	;wreg free
  4105   001BC6                     l3885:
  4106                           
  4107                           ;color_instructions.c: 161:     while(time_index>0){
  4108   001BC6  0100               	movlb	0	; () banked
  4109   001BC8  519D               	movf	_time_index& (0+255),w,b
  4110   001BCA  A4D8               	btfss	status,2,c
  4111   001BCC  EFEA  F00D         	goto	u3761
  4112   001BD0  EFEC  F00D         	goto	u3760
  4113   001BD4                     u3761:
  4114   001BD4  EF84  F00D         	goto	l3865
  4115   001BD8                     u3760:
  4116   001BD8                     
  4117                           ; BSR set to: 0
  4118   001BD8  0012               	return		;funcret
  4119   001BDA                     __end_of_WhiteInstructions:
  4120                           	callstack 0
  4121                           
  4122 ;; *************** function _Return_Time *****************
  4123 ;; Defined at:
  4124 ;;		line 40 in file "Memorization.c"
  4125 ;; Parameters:    Size  Location     Type
  4126 ;;  time_index      2    8[COMRAM] PTR unsigned char 
  4127 ;;		 -> time_index(1), 
  4128 ;;  time_array      2   10[COMRAM] PTR unsigned int 
  4129 ;;		 -> time_array(80), 
  4130 ;; Auto vars:     Size  Location     Type
  4131 ;;  temp            2   15[COMRAM] unsigned int 
  4132 ;; Return value:  Size  Location     Type
  4133 ;;                  2    8[COMRAM] unsigned int 
  4134 ;; Registers used:
  4135 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4136 ;; Tracked objects:
  4137 ;;		On entry : 0/0
  4138 ;;		On exit  : 0/0
  4139 ;;		Unchanged: 0/0
  4140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4141 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4142 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4143 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4144 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4145 ;;Total ram usage:        9 bytes
  4146 ;; Hardware stack levels used: 1
  4147 ;; Hardware stack levels required when called: 7
  4148 ;; This function calls:
  4149 ;;		Nothing
  4150 ;; This function is called by:
  4151 ;;		_WhiteInstructions
  4152 ;; This function uses a non-reentrant model
  4153 ;;
  4154                           
  4155                           	psect	text11
  4156   0027EA                     __ptext11:
  4157                           	callstack 0
  4158   0027EA                     _Return_Time:
  4159                           	callstack 22
  4160   0027EA                     
  4161                           ;Memorization.c: 41:     unsigned int temp;;Memorization.c: 43:     temp = time_array[--
      +                          (*time_index)];
  4162   0027EA  C009  FFD9         	movff	Return_Time@time_index,fsr2l
  4163   0027EE  C00A  FFDA         	movff	Return_Time@time_index+1,fsr2h
  4164   0027F2  06DF               	decf	indf2,f,c
  4165   0027F4  50DF               	movf	indf2,w,c
  4166   0027F6  6E0D               	movwf	??_Return_Time^0,c
  4167   0027F8  500D               	movf	??_Return_Time^0,w,c
  4168   0027FA  0D02               	mullw	2
  4169   0027FC  CFF3 F00E          	movff	prodl,??_Return_Time+1
  4170   002800  CFF4 F00F          	movff	prodh,??_Return_Time+2
  4171   002804  500E               	movf	(??_Return_Time+1)^0,w,c
  4172   002806  240B               	addwf	Return_Time@time_array^0,w,c
  4173   002808  6ED9               	movwf	fsr2l,c
  4174   00280A  500F               	movf	(??_Return_Time+2)^0,w,c
  4175   00280C  200C               	addwfc	(Return_Time@time_array+1)^0,w,c
  4176   00280E  6EDA               	movwf	fsr2h,c
  4177   002810  CFDE F010          	movff	postinc2,Return_Time@temp
  4178   002814  CFDD F011          	movff	postdec2,Return_Time@temp+1
  4179   002818                     
  4180                           ;Memorization.c: 44:     return temp;
  4181   002818  C010  F009         	movff	Return_Time@temp,?_Return_Time
  4182   00281C  C011  F00A         	movff	Return_Time@temp+1,?_Return_Time+1
  4183   002820  0012               	return		;funcret
  4184   002822                     __end_of_Return_Time:
  4185                           	callstack 0
  4186                           
  4187 ;; *************** function _Return_Anti_Moves *****************
  4188 ;; Defined at:
  4189 ;;		line 32 in file "Memorization.c"
  4190 ;; Parameters:    Size  Location     Type
  4191 ;;  moves_index     2    8[COMRAM] PTR unsigned char 
  4192 ;;		 -> moves_index(1), 
  4193 ;;  anti_moves_a    2   10[COMRAM] PTR unsigned char 
  4194 ;;		 -> anti_moves_array(40), 
  4195 ;; Auto vars:     Size  Location     Type
  4196 ;;  temp            1   13[COMRAM] unsigned char 
  4197 ;; Return value:  Size  Location     Type
  4198 ;;                  1    wreg      unsigned char 
  4199 ;; Registers used:
  4200 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4201 ;; Tracked objects:
  4202 ;;		On entry : 0/0
  4203 ;;		On exit  : 0/0
  4204 ;;		Unchanged: 0/0
  4205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4206 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4207 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4208 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4209 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4210 ;;Total ram usage:        6 bytes
  4211 ;; Hardware stack levels used: 1
  4212 ;; Hardware stack levels required when called: 7
  4213 ;; This function calls:
  4214 ;;		Nothing
  4215 ;; This function is called by:
  4216 ;;		_WhiteInstructions
  4217 ;; This function uses a non-reentrant model
  4218 ;;
  4219                           
  4220                           	psect	text12
  4221   00294C                     __ptext12:
  4222                           	callstack 0
  4223   00294C                     _Return_Anti_Moves:
  4224                           	callstack 22
  4225   00294C                     
  4226                           ;Memorization.c: 33:     unsigned char temp;;Memorization.c: 35:     temp = anti_moves_a
      +                          rray[--(*moves_index)];
  4227   00294C  C009  FFD9         	movff	Return_Anti_Moves@moves_index,fsr2l
  4228   002950  C00A  FFDA         	movff	Return_Anti_Moves@moves_index+1,fsr2h
  4229   002954  06DF               	decf	indf2,f,c
  4230   002956  50DF               	movf	indf2,w,c
  4231   002958  6E0D               	movwf	??_Return_Anti_Moves^0,c
  4232   00295A  500D               	movf	??_Return_Anti_Moves^0,w,c
  4233   00295C  240B               	addwf	Return_Anti_Moves@anti_moves_array^0,w,c
  4234   00295E  6ED9               	movwf	fsr2l,c
  4235   002960  0E00               	movlw	0
  4236   002962  200C               	addwfc	(Return_Anti_Moves@anti_moves_array+1)^0,w,c
  4237   002964  6EDA               	movwf	fsr2h,c
  4238   002966  50DF               	movf	indf2,w,c
  4239   002968  6E0E               	movwf	Return_Anti_Moves@temp^0,c
  4240   00296A                     
  4241                           ;Memorization.c: 36:     return temp;
  4242   00296A  500E               	movf	Return_Anti_Moves@temp^0,w,c
  4243   00296C  0012               	return		;funcret
  4244   00296E                     __end_of_Return_Anti_Moves:
  4245                           	callstack 0
  4246                           
  4247 ;; *************** function _MoveBuggy *****************
  4248 ;; Defined at:
  4249 ;;		line 182 in file "color_instructions.c"
  4250 ;; Parameters:    Size  Location     Type
  4251 ;;  color_detect    2   52[COMRAM] PTR unsigned char 
  4252 ;;		 -> RAM(3561), 
  4253 ;;  mL              2   54[COMRAM] PTR struct DC_motor
  4254 ;;		 -> main@motorL(9), 
  4255 ;;  mR              2   56[COMRAM] PTR struct DC_motor
  4256 ;;		 -> main@motorR(9), 
  4257 ;; Auto vars:     Size  Location     Type
  4258 ;;		None
  4259 ;; Return value:  Size  Location     Type
  4260 ;;                  1    wreg      void 
  4261 ;; Registers used:
  4262 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4263 ;; Tracked objects:
  4264 ;;		On entry : 0/0
  4265 ;;		On exit  : 0/0
  4266 ;;		Unchanged: 0/0
  4267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4268 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4271 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4272 ;;Total ram usage:        6 bytes
  4273 ;; Hardware stack levels used: 1
  4274 ;; Hardware stack levels required when called: 13
  4275 ;; This function calls:
  4276 ;;		_AntiPink
  4277 ;;		_AntiYellow
  4278 ;;		_AppendMoves
  4279 ;;		_BlueInstructions
  4280 ;;		_GreenInstructions
  4281 ;;		_LightBlueInstructions
  4282 ;;		_OrangeInstructions
  4283 ;;		_PinkInstructions
  4284 ;;		_RedInstructions
  4285 ;;		_YellowInstructions
  4286 ;; This function is called by:
  4287 ;;		_main
  4288 ;;		_WhiteInstructions
  4289 ;; This function uses a non-reentrant model
  4290 ;;
  4291                           
  4292                           	psect	text13
  4293   000E40                     __ptext13:
  4294                           	callstack 0
  4295   000E40                     _MoveBuggy:
  4296                           	callstack 16
  4297   000E40                     
  4298                           ;color_instructions.c: 183:     if (color_detected==1){
  4299   000E40  0435               	decf	MoveBuggy@color_detected^0,w,c
  4300   000E42  1036               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4301   000E44  A4D8               	btfss	status,2,c
  4302   000E46  EF27  F007         	goto	u2491
  4303   000E4A  EF29  F007         	goto	u2490
  4304   000E4E                     u2491:
  4305   000E4E  EF47  F007         	goto	l3229
  4306   000E52                     u2490:
  4307   000E52                     
  4308                           ;color_instructions.c: 184:         RedInstructions(mL, mR);
  4309   000E52  C037  F027         	movff	MoveBuggy@mL,RedInstructions@mL
  4310   000E56  C038  F028         	movff	MoveBuggy@mL+1,RedInstructions@mL+1
  4311   000E5A  C039  F029         	movff	MoveBuggy@mR,RedInstructions@mR
  4312   000E5E  C03A  F02A         	movff	MoveBuggy@mR+1,RedInstructions@mR+1
  4313   000E62  EC64  F011         	call	_RedInstructions	;wreg free
  4314   000E66                     
  4315                           ;color_instructions.c: 185:         if(LATDbits.LATD7 != 1){
  4316   000E66  BE7C               	btfsc	124,7,c	;volatile
  4317   000E68  EF38  F007         	goto	u2501
  4318   000E6C  EF3A  F007         	goto	u2500
  4319   000E70                     u2501:
  4320   000E70  EF61  F008         	goto	l673
  4321   000E74                     u2500:
  4322   000E74                     
  4323                           ;color_instructions.c: 186:             AppendMoves(2,&moves_index,anti_moves_array);
  4324   000E74  0E56               	movlw	low _moves_index
  4325   000E76  6E09               	movwf	AppendMoves@moves_index^0,c
  4326   000E78  0E00               	movlw	high _moves_index
  4327   000E7A  6E0A               	movwf	(AppendMoves@moves_index+1)^0,c
  4328   000E7C  0E75               	movlw	low _anti_moves_array
  4329   000E7E  6E0B               	movwf	AppendMoves@anti_moves_array^0,c
  4330   000E80  0E00               	movlw	high _anti_moves_array
  4331   000E82  6E0C               	movwf	(AppendMoves@anti_moves_array+1)^0,c
  4332   000E84  0E02               	movlw	2
  4333   000E86  EC94  F014         	call	_AppendMoves
  4334   000E8A  EF61  F008         	goto	l673
  4335   000E8E                     l3229:
  4336   000E8E  0E02               	movlw	2
  4337   000E90  1835               	xorwf	MoveBuggy@color_detected^0,w,c
  4338   000E92  1036               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4339   000E94  A4D8               	btfss	status,2,c
  4340   000E96  EF4F  F007         	goto	u2511
  4341   000E9A  EF51  F007         	goto	u2510
  4342   000E9E                     u2511:
  4343   000E9E  EF6F  F007         	goto	l3237
  4344   000EA2                     u2510:
  4345   000EA2                     
  4346                           ;color_instructions.c: 190:         GreenInstructions(mL, mR);
  4347   000EA2  C037  F027         	movff	MoveBuggy@mL,GreenInstructions@mL
  4348   000EA6  C038  F028         	movff	MoveBuggy@mL+1,GreenInstructions@mL+1
  4349   000EAA  C039  F029         	movff	MoveBuggy@mR,GreenInstructions@mR
  4350   000EAE  C03A  F02A         	movff	MoveBuggy@mR+1,GreenInstructions@mR+1
  4351   000EB2  ECA7  F011         	call	_GreenInstructions	;wreg free
  4352   000EB6                     
  4353                           ;color_instructions.c: 191:         if(LATDbits.LATD7 != 1){
  4354   000EB6  BE7C               	btfsc	124,7,c	;volatile
  4355   000EB8  EF60  F007         	goto	u2521
  4356   000EBC  EF62  F007         	goto	u2520
  4357   000EC0                     u2521:
  4358   000EC0  EF61  F008         	goto	l673
  4359   000EC4                     u2520:
  4360   000EC4                     
  4361                           ;color_instructions.c: 192:             AppendMoves(1,&moves_index,anti_moves_array);
  4362   000EC4  0E56               	movlw	low _moves_index
  4363   000EC6  6E09               	movwf	AppendMoves@moves_index^0,c
  4364   000EC8  0E00               	movlw	high _moves_index
  4365   000ECA  6E0A               	movwf	(AppendMoves@moves_index+1)^0,c
  4366   000ECC  0E75               	movlw	low _anti_moves_array
  4367   000ECE  6E0B               	movwf	AppendMoves@anti_moves_array^0,c
  4368   000ED0  0E00               	movlw	high _anti_moves_array
  4369   000ED2  6E0C               	movwf	(AppendMoves@anti_moves_array+1)^0,c
  4370   000ED4  0E01               	movlw	1
  4371   000ED6  EC94  F014         	call	_AppendMoves
  4372   000EDA  EF61  F008         	goto	l673
  4373   000EDE                     l3237:
  4374   000EDE  0E03               	movlw	3
  4375   000EE0  1835               	xorwf	MoveBuggy@color_detected^0,w,c
  4376   000EE2  1036               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4377   000EE4  A4D8               	btfss	status,2,c
  4378   000EE6  EF77  F007         	goto	u2531
  4379   000EEA  EF79  F007         	goto	u2530
  4380   000EEE                     u2531:
  4381   000EEE  EF97  F007         	goto	l3245
  4382   000EF2                     u2530:
  4383   000EF2                     
  4384                           ;color_instructions.c: 196:         BlueInstructions(mL, mR);
  4385   000EF2  C037  F027         	movff	MoveBuggy@mL,BlueInstructions@mL
  4386   000EF6  C038  F028         	movff	MoveBuggy@mL+1,BlueInstructions@mL+1
  4387   000EFA  C039  F029         	movff	MoveBuggy@mR,BlueInstructions@mR
  4388   000EFE  C03A  F02A         	movff	MoveBuggy@mR+1,BlueInstructions@mR+1
  4389   000F02  EC09  F00F         	call	_BlueInstructions	;wreg free
  4390   000F06                     
  4391                           ;color_instructions.c: 197:         if(LATDbits.LATD7 != 1){
  4392   000F06  BE7C               	btfsc	124,7,c	;volatile
  4393   000F08  EF88  F007         	goto	u2541
  4394   000F0C  EF8A  F007         	goto	u2540
  4395   000F10                     u2541:
  4396   000F10  EF61  F008         	goto	l673
  4397   000F14                     u2540:
  4398   000F14                     
  4399                           ;color_instructions.c: 198:             AppendMoves(3,&moves_index,anti_moves_array);
  4400   000F14  0E56               	movlw	low _moves_index
  4401   000F16  6E09               	movwf	AppendMoves@moves_index^0,c
  4402   000F18  0E00               	movlw	high _moves_index
  4403   000F1A  6E0A               	movwf	(AppendMoves@moves_index+1)^0,c
  4404   000F1C  0E75               	movlw	low _anti_moves_array
  4405   000F1E  6E0B               	movwf	AppendMoves@anti_moves_array^0,c
  4406   000F20  0E00               	movlw	high _anti_moves_array
  4407   000F22  6E0C               	movwf	(AppendMoves@anti_moves_array+1)^0,c
  4408   000F24  0E03               	movlw	3
  4409   000F26  EC94  F014         	call	_AppendMoves
  4410   000F2A  EF61  F008         	goto	l673
  4411   000F2E                     l3245:
  4412   000F2E  0E04               	movlw	4
  4413   000F30  1835               	xorwf	MoveBuggy@color_detected^0,w,c
  4414   000F32  1036               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4415   000F34  A4D8               	btfss	status,2,c
  4416   000F36  EF9F  F007         	goto	u2551
  4417   000F3A  EFA1  F007         	goto	u2550
  4418   000F3E                     u2551:
  4419   000F3E  EFBF  F007         	goto	l3253
  4420   000F42                     u2550:
  4421   000F42                     
  4422                           ;color_instructions.c: 202:         YellowInstructions(mL, mR);
  4423   000F42  C037  F027         	movff	MoveBuggy@mL,YellowInstructions@mL
  4424   000F46  C038  F028         	movff	MoveBuggy@mL+1,YellowInstructions@mL+1
  4425   000F4A  C039  F029         	movff	MoveBuggy@mR,YellowInstructions@mR
  4426   000F4E  C03A  F02A         	movff	MoveBuggy@mR+1,YellowInstructions@mR+1
  4427   000F52  EC58  F010         	call	_YellowInstructions	;wreg free
  4428   000F56                     
  4429                           ;color_instructions.c: 204:         if(LATDbits.LATD7 != 1){
  4430   000F56  BE7C               	btfsc	124,7,c	;volatile
  4431   000F58  EFB0  F007         	goto	u2561
  4432   000F5C  EFB2  F007         	goto	u2560
  4433   000F60                     u2561:
  4434   000F60  EF61  F008         	goto	l673
  4435   000F64                     u2560:
  4436   000F64                     
  4437                           ;color_instructions.c: 205:             AppendMoves(9,&moves_index,anti_moves_array);
  4438   000F64  0E56               	movlw	low _moves_index
  4439   000F66  6E09               	movwf	AppendMoves@moves_index^0,c
  4440   000F68  0E00               	movlw	high _moves_index
  4441   000F6A  6E0A               	movwf	(AppendMoves@moves_index+1)^0,c
  4442   000F6C  0E75               	movlw	low _anti_moves_array
  4443   000F6E  6E0B               	movwf	AppendMoves@anti_moves_array^0,c
  4444   000F70  0E00               	movlw	high _anti_moves_array
  4445   000F72  6E0C               	movwf	(AppendMoves@anti_moves_array+1)^0,c
  4446   000F74  0E09               	movlw	9
  4447   000F76  EC94  F014         	call	_AppendMoves
  4448   000F7A  EF61  F008         	goto	l673
  4449   000F7E                     l3253:
  4450   000F7E  0E05               	movlw	5
  4451   000F80  1835               	xorwf	MoveBuggy@color_detected^0,w,c
  4452   000F82  1036               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4453   000F84  A4D8               	btfss	status,2,c
  4454   000F86  EFC7  F007         	goto	u2571
  4455   000F8A  EFC9  F007         	goto	u2570
  4456   000F8E                     u2571:
  4457   000F8E  EFE7  F007         	goto	l3261
  4458   000F92                     u2570:
  4459   000F92                     
  4460                           ;color_instructions.c: 209:         PinkInstructions(mL, mR);
  4461   000F92  C037  F027         	movff	MoveBuggy@mL,PinkInstructions@mL
  4462   000F96  C038  F028         	movff	MoveBuggy@mL+1,PinkInstructions@mL+1
  4463   000F9A  C039  F029         	movff	MoveBuggy@mR,PinkInstructions@mR
  4464   000F9E  C03A  F02A         	movff	MoveBuggy@mR+1,PinkInstructions@mR+1
  4465   000FA2  EC9B  F010         	call	_PinkInstructions	;wreg free
  4466   000FA6                     
  4467                           ;color_instructions.c: 211:         if(LATDbits.LATD7 != 1){
  4468   000FA6  BE7C               	btfsc	124,7,c	;volatile
  4469   000FA8  EFD8  F007         	goto	u2581
  4470   000FAC  EFDA  F007         	goto	u2580
  4471   000FB0                     u2581:
  4472   000FB0  EF61  F008         	goto	l673
  4473   000FB4                     u2580:
  4474   000FB4                     
  4475                           ;color_instructions.c: 212:             AppendMoves(10,&moves_index,anti_moves_array);
  4476   000FB4  0E56               	movlw	low _moves_index
  4477   000FB6  6E09               	movwf	AppendMoves@moves_index^0,c
  4478   000FB8  0E00               	movlw	high _moves_index
  4479   000FBA  6E0A               	movwf	(AppendMoves@moves_index+1)^0,c
  4480   000FBC  0E75               	movlw	low _anti_moves_array
  4481   000FBE  6E0B               	movwf	AppendMoves@anti_moves_array^0,c
  4482   000FC0  0E00               	movlw	high _anti_moves_array
  4483   000FC2  6E0C               	movwf	(AppendMoves@anti_moves_array+1)^0,c
  4484   000FC4  0E0A               	movlw	10
  4485   000FC6  EC94  F014         	call	_AppendMoves
  4486   000FCA  EF61  F008         	goto	l673
  4487   000FCE                     l3261:
  4488   000FCE  0E06               	movlw	6
  4489   000FD0  1835               	xorwf	MoveBuggy@color_detected^0,w,c
  4490   000FD2  1036               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4491   000FD4  A4D8               	btfss	status,2,c
  4492   000FD6  EFEF  F007         	goto	u2591
  4493   000FDA  EFF1  F007         	goto	u2590
  4494   000FDE                     u2591:
  4495   000FDE  EF0F  F008         	goto	l3269
  4496   000FE2                     u2590:
  4497   000FE2                     
  4498                           ;color_instructions.c: 216:         OrangeInstructions(mL, mR);
  4499   000FE2  C037  F02C         	movff	MoveBuggy@mL,OrangeInstructions@mL
  4500   000FE6  C038  F02D         	movff	MoveBuggy@mL+1,OrangeInstructions@mL+1
  4501   000FEA  C039  F02E         	movff	MoveBuggy@mR,OrangeInstructions@mR
  4502   000FEE  C03A  F02F         	movff	MoveBuggy@mR+1,OrangeInstructions@mR+1
  4503   000FF2  ECDE  F010         	call	_OrangeInstructions	;wreg free
  4504   000FF6                     
  4505                           ;color_instructions.c: 217:         if(LATDbits.LATD7 != 1){
  4506   000FF6  BE7C               	btfsc	124,7,c	;volatile
  4507   000FF8  EF00  F008         	goto	u2601
  4508   000FFC  EF02  F008         	goto	u2600
  4509   001000                     u2601:
  4510   001000  EF61  F008         	goto	l673
  4511   001004                     u2600:
  4512   001004                     
  4513                           ;color_instructions.c: 218:             AppendMoves(7,&moves_index,anti_moves_array);
  4514   001004  0E56               	movlw	low _moves_index
  4515   001006  6E09               	movwf	AppendMoves@moves_index^0,c
  4516   001008  0E00               	movlw	high _moves_index
  4517   00100A  6E0A               	movwf	(AppendMoves@moves_index+1)^0,c
  4518   00100C  0E75               	movlw	low _anti_moves_array
  4519   00100E  6E0B               	movwf	AppendMoves@anti_moves_array^0,c
  4520   001010  0E00               	movlw	high _anti_moves_array
  4521   001012  6E0C               	movwf	(AppendMoves@anti_moves_array+1)^0,c
  4522   001014  0E07               	movlw	7
  4523   001016  EC94  F014         	call	_AppendMoves
  4524   00101A  EF61  F008         	goto	l673
  4525   00101E                     l3269:
  4526   00101E  0E07               	movlw	7
  4527   001020  1835               	xorwf	MoveBuggy@color_detected^0,w,c
  4528   001022  1036               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4529   001024  A4D8               	btfss	status,2,c
  4530   001026  EF17  F008         	goto	u2611
  4531   00102A  EF19  F008         	goto	u2610
  4532   00102E                     u2611:
  4533   00102E  EF37  F008         	goto	l3277
  4534   001032                     u2610:
  4535   001032                     
  4536                           ;color_instructions.c: 222:         LightBlueInstructions(mL, mR);
  4537   001032  C037  F02C         	movff	MoveBuggy@mL,LightBlueInstructions@mL
  4538   001036  C038  F02D         	movff	MoveBuggy@mL+1,LightBlueInstructions@mL+1
  4539   00103A  C039  F02E         	movff	MoveBuggy@mR,LightBlueInstructions@mR
  4540   00103E  C03A  F02F         	movff	MoveBuggy@mR+1,LightBlueInstructions@mR+1
  4541   001042  EC21  F011         	call	_LightBlueInstructions	;wreg free
  4542   001046                     
  4543                           ;color_instructions.c: 223:         if(LATDbits.LATD7 != 1){
  4544   001046  BE7C               	btfsc	124,7,c	;volatile
  4545   001048  EF28  F008         	goto	u2621
  4546   00104C  EF2A  F008         	goto	u2620
  4547   001050                     u2621:
  4548   001050  EF61  F008         	goto	l673
  4549   001054                     u2620:
  4550   001054                     
  4551                           ;color_instructions.c: 224:             AppendMoves(6,&moves_index,anti_moves_array);
  4552   001054  0E56               	movlw	low _moves_index
  4553   001056  6E09               	movwf	AppendMoves@moves_index^0,c
  4554   001058  0E00               	movlw	high _moves_index
  4555   00105A  6E0A               	movwf	(AppendMoves@moves_index+1)^0,c
  4556   00105C  0E75               	movlw	low _anti_moves_array
  4557   00105E  6E0B               	movwf	AppendMoves@anti_moves_array^0,c
  4558   001060  0E00               	movlw	high _anti_moves_array
  4559   001062  6E0C               	movwf	(AppendMoves@anti_moves_array+1)^0,c
  4560   001064  0E06               	movlw	6
  4561   001066  EC94  F014         	call	_AppendMoves
  4562   00106A  EF61  F008         	goto	l673
  4563   00106E                     l3277:
  4564   00106E  0E09               	movlw	9
  4565   001070  1835               	xorwf	MoveBuggy@color_detected^0,w,c
  4566   001072  1036               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4567   001074  A4D8               	btfss	status,2,c
  4568   001076  EF3F  F008         	goto	u2631
  4569   00107A  EF41  F008         	goto	u2630
  4570   00107E                     u2631:
  4571   00107E  EF4D  F008         	goto	l3281
  4572   001082                     u2630:
  4573   001082                     
  4574                           ;color_instructions.c: 230:         AntiYellow(mL, mR);
  4575   001082  C037  F02E         	movff	MoveBuggy@mL,AntiYellow@mL
  4576   001086  C038  F02F         	movff	MoveBuggy@mL+1,AntiYellow@mL+1
  4577   00108A  C039  F030         	movff	MoveBuggy@mR,AntiYellow@mR
  4578   00108E  C03A  F031         	movff	MoveBuggy@mR+1,AntiYellow@mR+1
  4579   001092  EC57  F00E         	call	_AntiYellow	;wreg free
  4580                           
  4581                           ;color_instructions.c: 231:     }
  4582   001096  EF61  F008         	goto	l673
  4583   00109A                     l3281:
  4584   00109A  0E0A               	movlw	10
  4585   00109C  1835               	xorwf	MoveBuggy@color_detected^0,w,c
  4586   00109E  1036               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4587   0010A0  A4D8               	btfss	status,2,c
  4588   0010A2  EF55  F008         	goto	u2641
  4589   0010A6  EF57  F008         	goto	u2640
  4590   0010AA                     u2641:
  4591   0010AA  EF61  F008         	goto	l673
  4592   0010AE                     u2640:
  4593   0010AE                     
  4594                           ;color_instructions.c: 233:         AntiPink(mL, mR);
  4595   0010AE  C037  F02E         	movff	MoveBuggy@mL,AntiPink@mL
  4596   0010B2  C038  F02F         	movff	MoveBuggy@mL+1,AntiPink@mL+1
  4597   0010B6  C039  F030         	movff	MoveBuggy@mR,AntiPink@mR
  4598   0010BA  C03A  F031         	movff	MoveBuggy@mR+1,AntiPink@mR+1
  4599   0010BE  ECB0  F00E         	call	_AntiPink	;wreg free
  4600   0010C2                     l673:
  4601   0010C2  0012               	return		;funcret
  4602   0010C4                     __end_of_MoveBuggy:
  4603                           	callstack 0
  4604                           
  4605 ;; *************** function _YellowInstructions *****************
  4606 ;; Defined at:
  4607 ;;		line 58 in file "color_instructions.c"
  4608 ;; Parameters:    Size  Location     Type
  4609 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  4610 ;;		 -> main@motorL(9), 
  4611 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  4612 ;;		 -> main@motorR(9), 
  4613 ;; Auto vars:     Size  Location     Type
  4614 ;;  a               1   44[COMRAM] unsigned char 
  4615 ;; Return value:  Size  Location     Type
  4616 ;;                  1    wreg      void 
  4617 ;; Registers used:
  4618 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4619 ;; Tracked objects:
  4620 ;;		On entry : 0/0
  4621 ;;		On exit  : 0/0
  4622 ;;		Unchanged: 0/0
  4623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4624 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4625 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4626 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4627 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4628 ;;Total ram usage:        7 bytes
  4629 ;; Hardware stack levels used: 1
  4630 ;; Hardware stack levels required when called: 11
  4631 ;; This function calls:
  4632 ;;		_fullSpeedBackwards
  4633 ;;		_stop
  4634 ;;		_turnRight90
  4635 ;; This function is called by:
  4636 ;;		_MoveBuggy
  4637 ;; This function uses a non-reentrant model
  4638 ;;
  4639                           
  4640                           	psect	text14
  4641   0020B0                     __ptext14:
  4642                           	callstack 0
  4643   0020B0                     _YellowInstructions:
  4644                           	callstack 17
  4645   0020B0                     
  4646                           ;color_instructions.c: 60:     unsigned char a=0;
  4647   0020B0  0E00               	movlw	0
  4648   0020B2  6E2D               	movwf	YellowInstructions@a^0,c
  4649                           
  4650                           ;color_instructions.c: 61:     while (a<45){
  4651   0020B4  EF67  F010         	goto	l3069
  4652   0020B8                     l3065:
  4653                           
  4654                           ;color_instructions.c: 62:         fullSpeedBackwards(mL, mR);
  4655   0020B8  C027  F01C         	movff	YellowInstructions@mL,fullSpeedBackwards@mL
  4656   0020BC  C028  F01D         	movff	YellowInstructions@mL+1,fullSpeedBackwards@mL+1
  4657   0020C0  C029  F01E         	movff	YellowInstructions@mR,fullSpeedBackwards@mR
  4658   0020C4  C02A  F01F         	movff	YellowInstructions@mR+1,fullSpeedBackwards@mR+1
  4659   0020C8  EC01  F00D         	call	_fullSpeedBackwards	;wreg free
  4660   0020CC                     
  4661                           ;color_instructions.c: 63:         a++;
  4662   0020CC  2A2D               	incf	YellowInstructions@a^0,f,c
  4663   0020CE                     l3069:
  4664                           
  4665                           ;color_instructions.c: 61:     while (a<45){
  4666   0020CE  0E2C               	movlw	44
  4667   0020D0  642D               	cpfsgt	YellowInstructions@a^0,c
  4668   0020D2  EF6D  F010         	goto	u2371
  4669   0020D6  EF6F  F010         	goto	u2370
  4670   0020DA                     u2371:
  4671   0020DA  EF5C  F010         	goto	l3065
  4672   0020DE                     u2370:
  4673   0020DE  EF7C  F010         	goto	l3075
  4674   0020E2                     l3071:
  4675                           
  4676                           ;color_instructions.c: 66:         stop(mL, mR);
  4677   0020E2  C027  F01C         	movff	YellowInstructions@mL,stop@mL
  4678   0020E6  C028  F01D         	movff	YellowInstructions@mL+1,stop@mL+1
  4679   0020EA  C029  F01E         	movff	YellowInstructions@mR,stop@mR
  4680   0020EE  C02A  F01F         	movff	YellowInstructions@mR+1,stop@mR+1
  4681   0020F2  ECED  F00D         	call	_stop	;wreg free
  4682   0020F6                     
  4683                           ;color_instructions.c: 67:         a--;
  4684   0020F6  062D               	decf	YellowInstructions@a^0,f,c
  4685   0020F8                     l3075:
  4686                           
  4687                           ;color_instructions.c: 65:     while (a>0){
  4688   0020F8  502D               	movf	YellowInstructions@a^0,w,c
  4689   0020FA  A4D8               	btfss	status,2,c
  4690   0020FC  EF82  F010         	goto	u2381
  4691   002100  EF84  F010         	goto	u2380
  4692   002104                     u2381:
  4693   002104  EF71  F010         	goto	l3071
  4694   002108                     u2380:
  4695   002108                     
  4696                           ;color_instructions.c: 69:     _delay((unsigned long)((50)*(64000000/4000.0)));
  4697   002108  0E05               	movlw	5
  4698   00210A  6E2C               	movwf	(??_YellowInstructions+1)^0,c
  4699   00210C  0E0F               	movlw	15
  4700   00210E  6E2B               	movwf	??_YellowInstructions^0,c
  4701   002110  0EF1               	movlw	241
  4702   002112                     u4547:
  4703   002112  2EE8               	decfsz	wreg,f,c
  4704   002114  D7FE               	bra	u4547
  4705   002116  2E2B               	decfsz	??_YellowInstructions^0,f,c
  4706   002118  D7FC               	bra	u4547
  4707   00211A  2E2C               	decfsz	(??_YellowInstructions+1)^0,f,c
  4708   00211C  D7FA               	bra	u4547
  4709   00211E  F000               	nop	
  4710   002120                     
  4711                           ;color_instructions.c: 70:     turnRight90(mL, mR);
  4712   002120  C027  F022         	movff	YellowInstructions@mL,turnRight90@mL
  4713   002124  C028  F023         	movff	YellowInstructions@mL+1,turnRight90@mL+1
  4714   002128  C029  F024         	movff	YellowInstructions@mR,turnRight90@mR
  4715   00212C  C02A  F025         	movff	YellowInstructions@mR+1,turnRight90@mR+1
  4716   002130  EC62  F00F         	call	_turnRight90	;wreg free
  4717   002134  0012               	return		;funcret
  4718   002136                     __end_of_YellowInstructions:
  4719                           	callstack 0
  4720                           
  4721 ;; *************** function _PinkInstructions *****************
  4722 ;; Defined at:
  4723 ;;		line 73 in file "color_instructions.c"
  4724 ;; Parameters:    Size  Location     Type
  4725 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  4726 ;;		 -> main@motorL(9), 
  4727 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  4728 ;;		 -> main@motorR(9), 
  4729 ;; Auto vars:     Size  Location     Type
  4730 ;;  a               1   44[COMRAM] unsigned char 
  4731 ;; Return value:  Size  Location     Type
  4732 ;;                  1    wreg      void 
  4733 ;; Registers used:
  4734 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4735 ;; Tracked objects:
  4736 ;;		On entry : 0/0
  4737 ;;		On exit  : 0/0
  4738 ;;		Unchanged: 0/0
  4739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4740 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4741 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4742 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4743 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4744 ;;Total ram usage:        7 bytes
  4745 ;; Hardware stack levels used: 1
  4746 ;; Hardware stack levels required when called: 11
  4747 ;; This function calls:
  4748 ;;		_fullSpeedBackwards
  4749 ;;		_stop
  4750 ;;		_turnLeft90
  4751 ;; This function is called by:
  4752 ;;		_MoveBuggy
  4753 ;; This function uses a non-reentrant model
  4754 ;;
  4755                           
  4756                           	psect	text15
  4757   002136                     __ptext15:
  4758                           	callstack 0
  4759   002136                     _PinkInstructions:
  4760                           	callstack 17
  4761   002136                     
  4762                           ;color_instructions.c: 74:     unsigned char a=0;
  4763   002136  0E00               	movlw	0
  4764   002138  6E2D               	movwf	PinkInstructions@a^0,c
  4765                           
  4766                           ;color_instructions.c: 75:     while (a<45){
  4767   00213A  EFAA  F010         	goto	l3087
  4768   00213E                     l3083:
  4769                           
  4770                           ;color_instructions.c: 76:         fullSpeedBackwards(mL, mR);
  4771   00213E  C027  F01C         	movff	PinkInstructions@mL,fullSpeedBackwards@mL
  4772   002142  C028  F01D         	movff	PinkInstructions@mL+1,fullSpeedBackwards@mL+1
  4773   002146  C029  F01E         	movff	PinkInstructions@mR,fullSpeedBackwards@mR
  4774   00214A  C02A  F01F         	movff	PinkInstructions@mR+1,fullSpeedBackwards@mR+1
  4775   00214E  EC01  F00D         	call	_fullSpeedBackwards	;wreg free
  4776   002152                     
  4777                           ;color_instructions.c: 77:         a++;
  4778   002152  2A2D               	incf	PinkInstructions@a^0,f,c
  4779   002154                     l3087:
  4780                           
  4781                           ;color_instructions.c: 75:     while (a<45){
  4782   002154  0E2C               	movlw	44
  4783   002156  642D               	cpfsgt	PinkInstructions@a^0,c
  4784   002158  EFB0  F010         	goto	u2391
  4785   00215C  EFB2  F010         	goto	u2390
  4786   002160                     u2391:
  4787   002160  EF9F  F010         	goto	l3083
  4788   002164                     u2390:
  4789   002164  EFBF  F010         	goto	l3093
  4790   002168                     l3089:
  4791                           
  4792                           ;color_instructions.c: 80:         stop(mL, mR);
  4793   002168  C027  F01C         	movff	PinkInstructions@mL,stop@mL
  4794   00216C  C028  F01D         	movff	PinkInstructions@mL+1,stop@mL+1
  4795   002170  C029  F01E         	movff	PinkInstructions@mR,stop@mR
  4796   002174  C02A  F01F         	movff	PinkInstructions@mR+1,stop@mR+1
  4797   002178  ECED  F00D         	call	_stop	;wreg free
  4798   00217C                     
  4799                           ;color_instructions.c: 81:         a--;
  4800   00217C  062D               	decf	PinkInstructions@a^0,f,c
  4801   00217E                     l3093:
  4802                           
  4803                           ;color_instructions.c: 79:     while (a>0){
  4804   00217E  502D               	movf	PinkInstructions@a^0,w,c
  4805   002180  A4D8               	btfss	status,2,c
  4806   002182  EFC5  F010         	goto	u2401
  4807   002186  EFC7  F010         	goto	u2400
  4808   00218A                     u2401:
  4809   00218A  EFB4  F010         	goto	l3089
  4810   00218E                     u2400:
  4811   00218E                     
  4812                           ;color_instructions.c: 83:     _delay((unsigned long)((50)*(64000000/4000.0)));
  4813   00218E  0E05               	movlw	5
  4814   002190  6E2C               	movwf	(??_PinkInstructions+1)^0,c
  4815   002192  0E0F               	movlw	15
  4816   002194  6E2B               	movwf	??_PinkInstructions^0,c
  4817   002196  0EF1               	movlw	241
  4818   002198                     u4557:
  4819   002198  2EE8               	decfsz	wreg,f,c
  4820   00219A  D7FE               	bra	u4557
  4821   00219C  2E2B               	decfsz	??_PinkInstructions^0,f,c
  4822   00219E  D7FC               	bra	u4557
  4823   0021A0  2E2C               	decfsz	(??_PinkInstructions+1)^0,f,c
  4824   0021A2  D7FA               	bra	u4557
  4825   0021A4  F000               	nop	
  4826   0021A6                     
  4827                           ;color_instructions.c: 84:     turnLeft90(mL, mR);
  4828   0021A6  C027  F022         	movff	PinkInstructions@mL,turnLeft90@mL
  4829   0021AA  C028  F023         	movff	PinkInstructions@mL+1,turnLeft90@mL+1
  4830   0021AE  C029  F024         	movff	PinkInstructions@mR,turnLeft90@mR
  4831   0021B2  C02A  F025         	movff	PinkInstructions@mR+1,turnLeft90@mR+1
  4832   0021B6  ECB9  F00F         	call	_turnLeft90	;wreg free
  4833   0021BA  0012               	return		;funcret
  4834   0021BC                     __end_of_PinkInstructions:
  4835                           	callstack 0
  4836                           
  4837 ;; *************** function _OrangeInstructions *****************
  4838 ;; Defined at:
  4839 ;;		line 88 in file "color_instructions.c"
  4840 ;; Parameters:    Size  Location     Type
  4841 ;;  mL              2   43[COMRAM] PTR struct DC_motor
  4842 ;;		 -> main@motorL(9), 
  4843 ;;  mR              2   45[COMRAM] PTR struct DC_motor
  4844 ;;		 -> main@motorR(9), 
  4845 ;; Auto vars:     Size  Location     Type
  4846 ;;  a               1   49[COMRAM] unsigned char 
  4847 ;; Return value:  Size  Location     Type
  4848 ;;                  1    wreg      void 
  4849 ;; Registers used:
  4850 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4851 ;; Tracked objects:
  4852 ;;		On entry : 0/0
  4853 ;;		On exit  : 0/0
  4854 ;;		Unchanged: 0/0
  4855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4856 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4857 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4858 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4859 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4860 ;;Total ram usage:        7 bytes
  4861 ;; Hardware stack levels used: 1
  4862 ;; Hardware stack levels required when called: 12
  4863 ;; This function calls:
  4864 ;;		_fullSpeedBackwards
  4865 ;;		_stop
  4866 ;;		_turnRight135
  4867 ;; This function is called by:
  4868 ;;		_MoveBuggy
  4869 ;; This function uses a non-reentrant model
  4870 ;;
  4871                           
  4872                           	psect	text16
  4873   0021BC                     __ptext16:
  4874                           	callstack 0
  4875   0021BC                     _OrangeInstructions:
  4876                           	callstack 16
  4877   0021BC                     
  4878                           ;color_instructions.c: 89:     unsigned char a=0;
  4879   0021BC  0E00               	movlw	0
  4880   0021BE  6E32               	movwf	OrangeInstructions@a^0,c
  4881                           
  4882                           ;color_instructions.c: 90:     while (a<16){
  4883   0021C0  EFED  F010         	goto	l3105
  4884   0021C4                     l3101:
  4885                           
  4886                           ;color_instructions.c: 91:         fullSpeedBackwards(mL, mR);
  4887   0021C4  C02C  F01C         	movff	OrangeInstructions@mL,fullSpeedBackwards@mL
  4888   0021C8  C02D  F01D         	movff	OrangeInstructions@mL+1,fullSpeedBackwards@mL+1
  4889   0021CC  C02E  F01E         	movff	OrangeInstructions@mR,fullSpeedBackwards@mR
  4890   0021D0  C02F  F01F         	movff	OrangeInstructions@mR+1,fullSpeedBackwards@mR+1
  4891   0021D4  EC01  F00D         	call	_fullSpeedBackwards	;wreg free
  4892   0021D8                     
  4893                           ;color_instructions.c: 92:         a++;
  4894   0021D8  2A32               	incf	OrangeInstructions@a^0,f,c
  4895   0021DA                     l3105:
  4896                           
  4897                           ;color_instructions.c: 90:     while (a<16){
  4898   0021DA  0E0F               	movlw	15
  4899   0021DC  6432               	cpfsgt	OrangeInstructions@a^0,c
  4900   0021DE  EFF3  F010         	goto	u2411
  4901   0021E2  EFF5  F010         	goto	u2410
  4902   0021E6                     u2411:
  4903   0021E6  EFE2  F010         	goto	l3101
  4904   0021EA                     u2410:
  4905   0021EA  EF02  F011         	goto	l3111
  4906   0021EE                     l3107:
  4907                           
  4908                           ;color_instructions.c: 95:         stop(mL, mR);
  4909   0021EE  C02C  F01C         	movff	OrangeInstructions@mL,stop@mL
  4910   0021F2  C02D  F01D         	movff	OrangeInstructions@mL+1,stop@mL+1
  4911   0021F6  C02E  F01E         	movff	OrangeInstructions@mR,stop@mR
  4912   0021FA  C02F  F01F         	movff	OrangeInstructions@mR+1,stop@mR+1
  4913   0021FE  ECED  F00D         	call	_stop	;wreg free
  4914   002202                     
  4915                           ;color_instructions.c: 96:         a--;
  4916   002202  0632               	decf	OrangeInstructions@a^0,f,c
  4917   002204                     l3111:
  4918                           
  4919                           ;color_instructions.c: 94:     while (a>0){
  4920   002204  5032               	movf	OrangeInstructions@a^0,w,c
  4921   002206  A4D8               	btfss	status,2,c
  4922   002208  EF08  F011         	goto	u2421
  4923   00220C  EF0A  F011         	goto	u2420
  4924   002210                     u2421:
  4925   002210  EFF7  F010         	goto	l3107
  4926   002214                     u2420:
  4927   002214                     
  4928                           ;color_instructions.c: 98:     _delay((unsigned long)((50)*(64000000/4000.0)));
  4929   002214  0E05               	movlw	5
  4930   002216  6E31               	movwf	(??_OrangeInstructions+1)^0,c
  4931   002218  0E0F               	movlw	15
  4932   00221A  6E30               	movwf	??_OrangeInstructions^0,c
  4933   00221C  0EF1               	movlw	241
  4934   00221E                     u4567:
  4935   00221E  2EE8               	decfsz	wreg,f,c
  4936   002220  D7FE               	bra	u4567
  4937   002222  2E30               	decfsz	??_OrangeInstructions^0,f,c
  4938   002224  D7FC               	bra	u4567
  4939   002226  2E31               	decfsz	(??_OrangeInstructions+1)^0,f,c
  4940   002228  D7FA               	bra	u4567
  4941   00222A  F000               	nop	
  4942   00222C                     
  4943                           ;color_instructions.c: 100:     turnRight135(mL, mR);
  4944   00222C  C02C  F027         	movff	OrangeInstructions@mL,turnRight135@mL
  4945   002230  C02D  F028         	movff	OrangeInstructions@mL+1,turnRight135@mL+1
  4946   002234  C02E  F029         	movff	OrangeInstructions@mR,turnRight135@mR
  4947   002238  C02F  F02A         	movff	OrangeInstructions@mR+1,turnRight135@mR+1
  4948   00223C  EC24  F012         	call	_turnRight135	;wreg free
  4949   002240  0012               	return		;funcret
  4950   002242                     __end_of_OrangeInstructions:
  4951                           	callstack 0
  4952                           
  4953 ;; *************** function _turnRight135 *****************
  4954 ;; Defined at:
  4955 ;;		line 249 in file "dc_motor.c"
  4956 ;; Parameters:    Size  Location     Type
  4957 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  4958 ;;		 -> main@motorL(9), 
  4959 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  4960 ;;		 -> main@motorR(9), 
  4961 ;; Auto vars:     Size  Location     Type
  4962 ;;  a               1   42[COMRAM] unsigned char 
  4963 ;; Return value:  Size  Location     Type
  4964 ;;                  1    wreg      void 
  4965 ;; Registers used:
  4966 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4967 ;; Tracked objects:
  4968 ;;		On entry : 0/0
  4969 ;;		On exit  : 0/0
  4970 ;;		Unchanged: 0/0
  4971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4972 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4973 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4975 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4976 ;;Total ram usage:        5 bytes
  4977 ;; Hardware stack levels used: 1
  4978 ;; Hardware stack levels required when called: 11
  4979 ;; This function calls:
  4980 ;;		_stop
  4981 ;;		_turnRight
  4982 ;;		_turnRight90
  4983 ;; This function is called by:
  4984 ;;		_OrangeInstructions
  4985 ;; This function uses a non-reentrant model
  4986 ;;
  4987                           
  4988                           	psect	text17
  4989   002448                     __ptext17:
  4990                           	callstack 0
  4991   002448                     _turnRight135:
  4992                           	callstack 16
  4993   002448                     
  4994                           ;dc_motor.c: 251:     turnRight90(mL,mR);
  4995   002448  C027  F022         	movff	turnRight135@mL,turnRight90@mL
  4996   00244C  C028  F023         	movff	turnRight135@mL+1,turnRight90@mL+1
  4997   002450  C029  F024         	movff	turnRight135@mR,turnRight90@mR
  4998   002454  C02A  F025         	movff	turnRight135@mR+1,turnRight90@mR+1
  4999   002458  EC62  F00F         	call	_turnRight90	;wreg free
  5000   00245C                     
  5001                           ;dc_motor.c: 252:     unsigned char a=0;
  5002   00245C  0E00               	movlw	0
  5003   00245E  6E2B               	movwf	turnRight135@a^0,c
  5004                           
  5005                           ;dc_motor.c: 253:     while(a<15){
  5006   002460  EF3D  F012         	goto	l2939
  5007   002464                     l2935:
  5008                           
  5009                           ;dc_motor.c: 254:         turnRight(mL, mR);
  5010   002464  C027  F01C         	movff	turnRight135@mL,turnRight@mL
  5011   002468  C028  F01D         	movff	turnRight135@mL+1,turnRight@mL+1
  5012   00246C  C029  F01E         	movff	turnRight135@mR,turnRight@mR
  5013   002470  C02A  F01F         	movff	turnRight135@mR+1,turnRight@mR+1
  5014   002474  EC9C  F00B         	call	_turnRight	;wreg free
  5015   002478                     
  5016                           ;dc_motor.c: 255:         a++;
  5017   002478  2A2B               	incf	turnRight135@a^0,f,c
  5018   00247A                     l2939:
  5019                           
  5020                           ;dc_motor.c: 253:     while(a<15){
  5021   00247A  0E0E               	movlw	14
  5022   00247C  642B               	cpfsgt	turnRight135@a^0,c
  5023   00247E  EF43  F012         	goto	u2251
  5024   002482  EF45  F012         	goto	u2250
  5025   002486                     u2251:
  5026   002486  EF32  F012         	goto	l2935
  5027   00248A                     u2250:
  5028   00248A  EF52  F012         	goto	l2945
  5029   00248E                     l2941:
  5030                           
  5031                           ;dc_motor.c: 258:         stop(mL, mR);
  5032   00248E  C027  F01C         	movff	turnRight135@mL,stop@mL
  5033   002492  C028  F01D         	movff	turnRight135@mL+1,stop@mL+1
  5034   002496  C029  F01E         	movff	turnRight135@mR,stop@mR
  5035   00249A  C02A  F01F         	movff	turnRight135@mR+1,stop@mR+1
  5036   00249E  ECED  F00D         	call	_stop	;wreg free
  5037   0024A2                     
  5038                           ;dc_motor.c: 259:         a--;
  5039   0024A2  062B               	decf	turnRight135@a^0,f,c
  5040   0024A4                     l2945:
  5041                           
  5042                           ;dc_motor.c: 257:     while(a>0){
  5043   0024A4  502B               	movf	turnRight135@a^0,w,c
  5044   0024A6  A4D8               	btfss	status,2,c
  5045   0024A8  EF58  F012         	goto	u2261
  5046   0024AC  EF5A  F012         	goto	u2260
  5047   0024B0                     u2261:
  5048   0024B0  EF47  F012         	goto	l2941
  5049   0024B4                     u2260:
  5050   0024B4  0012               	return		;funcret
  5051   0024B6                     __end_of_turnRight135:
  5052                           	callstack 0
  5053                           
  5054 ;; *************** function _LightBlueInstructions *****************
  5055 ;; Defined at:
  5056 ;;		line 103 in file "color_instructions.c"
  5057 ;; Parameters:    Size  Location     Type
  5058 ;;  mL              2   43[COMRAM] PTR struct DC_motor
  5059 ;;		 -> main@motorL(9), 
  5060 ;;  mR              2   45[COMRAM] PTR struct DC_motor
  5061 ;;		 -> main@motorR(9), 
  5062 ;; Auto vars:     Size  Location     Type
  5063 ;;  a               1   49[COMRAM] unsigned char 
  5064 ;; Return value:  Size  Location     Type
  5065 ;;                  1    wreg      void 
  5066 ;; Registers used:
  5067 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5068 ;; Tracked objects:
  5069 ;;		On entry : 0/0
  5070 ;;		On exit  : 0/0
  5071 ;;		Unchanged: 0/0
  5072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5073 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5074 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5075 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5076 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5077 ;;Total ram usage:        7 bytes
  5078 ;; Hardware stack levels used: 1
  5079 ;; Hardware stack levels required when called: 12
  5080 ;; This function calls:
  5081 ;;		_fullSpeedBackwards
  5082 ;;		_stop
  5083 ;;		_turnLeft135
  5084 ;; This function is called by:
  5085 ;;		_MoveBuggy
  5086 ;; This function uses a non-reentrant model
  5087 ;;
  5088                           
  5089                           	psect	text18
  5090   002242                     __ptext18:
  5091                           	callstack 0
  5092   002242                     _LightBlueInstructions:
  5093                           	callstack 16
  5094   002242                     
  5095                           ;color_instructions.c: 104:     unsigned char a=0;
  5096   002242  0E00               	movlw	0
  5097   002244  6E32               	movwf	LightBlueInstructions@a^0,c
  5098                           
  5099                           ;color_instructions.c: 105:     while (a<16){
  5100   002246  EF30  F011         	goto	l3123
  5101   00224A                     l3119:
  5102                           
  5103                           ;color_instructions.c: 106:         fullSpeedBackwards(mL, mR);
  5104   00224A  C02C  F01C         	movff	LightBlueInstructions@mL,fullSpeedBackwards@mL
  5105   00224E  C02D  F01D         	movff	LightBlueInstructions@mL+1,fullSpeedBackwards@mL+1
  5106   002252  C02E  F01E         	movff	LightBlueInstructions@mR,fullSpeedBackwards@mR
  5107   002256  C02F  F01F         	movff	LightBlueInstructions@mR+1,fullSpeedBackwards@mR+1
  5108   00225A  EC01  F00D         	call	_fullSpeedBackwards	;wreg free
  5109   00225E                     
  5110                           ;color_instructions.c: 107:         a++;
  5111   00225E  2A32               	incf	LightBlueInstructions@a^0,f,c
  5112   002260                     l3123:
  5113                           
  5114                           ;color_instructions.c: 105:     while (a<16){
  5115   002260  0E0F               	movlw	15
  5116   002262  6432               	cpfsgt	LightBlueInstructions@a^0,c
  5117   002264  EF36  F011         	goto	u2431
  5118   002268  EF38  F011         	goto	u2430
  5119   00226C                     u2431:
  5120   00226C  EF25  F011         	goto	l3119
  5121   002270                     u2430:
  5122   002270  EF45  F011         	goto	l3129
  5123   002274                     l3125:
  5124                           
  5125                           ;color_instructions.c: 110:         stop(mL, mR);
  5126   002274  C02C  F01C         	movff	LightBlueInstructions@mL,stop@mL
  5127   002278  C02D  F01D         	movff	LightBlueInstructions@mL+1,stop@mL+1
  5128   00227C  C02E  F01E         	movff	LightBlueInstructions@mR,stop@mR
  5129   002280  C02F  F01F         	movff	LightBlueInstructions@mR+1,stop@mR+1
  5130   002284  ECED  F00D         	call	_stop	;wreg free
  5131   002288                     
  5132                           ;color_instructions.c: 111:         a--;
  5133   002288  0632               	decf	LightBlueInstructions@a^0,f,c
  5134   00228A                     l3129:
  5135                           
  5136                           ;color_instructions.c: 109:     while (a>0){
  5137   00228A  5032               	movf	LightBlueInstructions@a^0,w,c
  5138   00228C  A4D8               	btfss	status,2,c
  5139   00228E  EF4B  F011         	goto	u2441
  5140   002292  EF4D  F011         	goto	u2440
  5141   002296                     u2441:
  5142   002296  EF3A  F011         	goto	l3125
  5143   00229A                     u2440:
  5144   00229A                     
  5145                           ;color_instructions.c: 113:     _delay((unsigned long)((50)*(64000000/4000.0)));
  5146   00229A  0E05               	movlw	5
  5147   00229C  6E31               	movwf	(??_LightBlueInstructions+1)^0,c
  5148   00229E  0E0F               	movlw	15
  5149   0022A0  6E30               	movwf	??_LightBlueInstructions^0,c
  5150   0022A2  0EF1               	movlw	241
  5151   0022A4                     u4577:
  5152   0022A4  2EE8               	decfsz	wreg,f,c
  5153   0022A6  D7FE               	bra	u4577
  5154   0022A8  2E30               	decfsz	??_LightBlueInstructions^0,f,c
  5155   0022AA  D7FC               	bra	u4577
  5156   0022AC  2E31               	decfsz	(??_LightBlueInstructions+1)^0,f,c
  5157   0022AE  D7FA               	bra	u4577
  5158   0022B0  F000               	nop	
  5159   0022B2                     
  5160                           ;color_instructions.c: 115:     turnLeft135(mL, mR);
  5161   0022B2  C02C  F027         	movff	LightBlueInstructions@mL,turnLeft135@mL
  5162   0022B6  C02D  F028         	movff	LightBlueInstructions@mL+1,turnLeft135@mL+1
  5163   0022BA  C02E  F029         	movff	LightBlueInstructions@mR,turnLeft135@mR
  5164   0022BE  C02F  F02A         	movff	LightBlueInstructions@mR+1,turnLeft135@mR+1
  5165   0022C2  EC5B  F012         	call	_turnLeft135	;wreg free
  5166   0022C6  0012               	return		;funcret
  5167   0022C8                     __end_of_LightBlueInstructions:
  5168                           	callstack 0
  5169                           
  5170 ;; *************** function _turnLeft135 *****************
  5171 ;; Defined at:
  5172 ;;		line 263 in file "dc_motor.c"
  5173 ;; Parameters:    Size  Location     Type
  5174 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  5175 ;;		 -> main@motorL(9), 
  5176 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  5177 ;;		 -> main@motorR(9), 
  5178 ;; Auto vars:     Size  Location     Type
  5179 ;;  a               1   42[COMRAM] unsigned char 
  5180 ;; Return value:  Size  Location     Type
  5181 ;;                  1    wreg      void 
  5182 ;; Registers used:
  5183 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5184 ;; Tracked objects:
  5185 ;;		On entry : 0/0
  5186 ;;		On exit  : 0/0
  5187 ;;		Unchanged: 0/0
  5188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5189 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5190 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5192 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5193 ;;Total ram usage:        5 bytes
  5194 ;; Hardware stack levels used: 1
  5195 ;; Hardware stack levels required when called: 11
  5196 ;; This function calls:
  5197 ;;		_stop
  5198 ;;		_turnLeft
  5199 ;;		_turnLeft90
  5200 ;; This function is called by:
  5201 ;;		_LightBlueInstructions
  5202 ;; This function uses a non-reentrant model
  5203 ;;
  5204                           
  5205                           	psect	text19
  5206   0024B6                     __ptext19:
  5207                           	callstack 0
  5208   0024B6                     _turnLeft135:
  5209                           	callstack 16
  5210   0024B6                     
  5211                           ;dc_motor.c: 265:     turnLeft90(mL,mR);
  5212   0024B6  C027  F022         	movff	turnLeft135@mL,turnLeft90@mL
  5213   0024BA  C028  F023         	movff	turnLeft135@mL+1,turnLeft90@mL+1
  5214   0024BE  C029  F024         	movff	turnLeft135@mR,turnLeft90@mR
  5215   0024C2  C02A  F025         	movff	turnLeft135@mR+1,turnLeft90@mR+1
  5216   0024C6  ECB9  F00F         	call	_turnLeft90	;wreg free
  5217   0024CA                     
  5218                           ;dc_motor.c: 266:     unsigned char a=0;
  5219   0024CA  0E00               	movlw	0
  5220   0024CC  6E2B               	movwf	turnLeft135@a^0,c
  5221                           
  5222                           ;dc_motor.c: 267:     while(a<16){
  5223   0024CE  EF74  F012         	goto	l2955
  5224   0024D2                     l2951:
  5225                           
  5226                           ;dc_motor.c: 268:         turnLeft(mL, mR);
  5227   0024D2  C027  F01C         	movff	turnLeft135@mL,turnLeft@mL
  5228   0024D6  C028  F01D         	movff	turnLeft135@mL+1,turnLeft@mL+1
  5229   0024DA  C029  F01E         	movff	turnLeft135@mR,turnLeft@mR
  5230   0024DE  C02A  F01F         	movff	turnLeft135@mR+1,turnLeft@mR+1
  5231   0024E2  EC8A  F00C         	call	_turnLeft	;wreg free
  5232   0024E6                     
  5233                           ;dc_motor.c: 269:         a++;
  5234   0024E6  2A2B               	incf	turnLeft135@a^0,f,c
  5235   0024E8                     l2955:
  5236                           
  5237                           ;dc_motor.c: 267:     while(a<16){
  5238   0024E8  0E0F               	movlw	15
  5239   0024EA  642B               	cpfsgt	turnLeft135@a^0,c
  5240   0024EC  EF7A  F012         	goto	u2271
  5241   0024F0  EF7C  F012         	goto	u2270
  5242   0024F4                     u2271:
  5243   0024F4  EF69  F012         	goto	l2951
  5244   0024F8                     u2270:
  5245   0024F8  EF89  F012         	goto	l2961
  5246   0024FC                     l2957:
  5247                           
  5248                           ;dc_motor.c: 272:         stop(mL, mR);
  5249   0024FC  C027  F01C         	movff	turnLeft135@mL,stop@mL
  5250   002500  C028  F01D         	movff	turnLeft135@mL+1,stop@mL+1
  5251   002504  C029  F01E         	movff	turnLeft135@mR,stop@mR
  5252   002508  C02A  F01F         	movff	turnLeft135@mR+1,stop@mR+1
  5253   00250C  ECED  F00D         	call	_stop	;wreg free
  5254   002510                     
  5255                           ;dc_motor.c: 273:         a--;
  5256   002510  062B               	decf	turnLeft135@a^0,f,c
  5257   002512                     l2961:
  5258                           
  5259                           ;dc_motor.c: 271:     while(a>0){
  5260   002512  502B               	movf	turnLeft135@a^0,w,c
  5261   002514  A4D8               	btfss	status,2,c
  5262   002516  EF8F  F012         	goto	u2281
  5263   00251A  EF91  F012         	goto	u2280
  5264   00251E                     u2281:
  5265   00251E  EF7E  F012         	goto	l2957
  5266   002522                     u2280:
  5267   002522  0012               	return		;funcret
  5268   002524                     __end_of_turnLeft135:
  5269                           	callstack 0
  5270                           
  5271 ;; *************** function _AppendMoves *****************
  5272 ;; Defined at:
  5273 ;;		line 17 in file "Memorization.c"
  5274 ;; Parameters:    Size  Location     Type
  5275 ;;  temp            1    wreg     unsigned char 
  5276 ;;  moves_index     2    8[COMRAM] PTR unsigned char 
  5277 ;;		 -> moves_index(1), 
  5278 ;;  anti_moves_a    2   10[COMRAM] PTR unsigned char 
  5279 ;;		 -> anti_moves_array(40), 
  5280 ;; Auto vars:     Size  Location     Type
  5281 ;;  temp            1   13[COMRAM] unsigned char 
  5282 ;; Return value:  Size  Location     Type
  5283 ;;                  1    wreg      void 
  5284 ;; Registers used:
  5285 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5286 ;; Tracked objects:
  5287 ;;		On entry : 0/0
  5288 ;;		On exit  : 0/0
  5289 ;;		Unchanged: 0/0
  5290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5291 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5292 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5293 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5294 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5295 ;;Total ram usage:        6 bytes
  5296 ;; Hardware stack levels used: 1
  5297 ;; Hardware stack levels required when called: 7
  5298 ;; This function calls:
  5299 ;;		Nothing
  5300 ;; This function is called by:
  5301 ;;		_MoveBuggy
  5302 ;; This function uses a non-reentrant model
  5303 ;;
  5304                           
  5305                           	psect	text20
  5306   002928                     __ptext20:
  5307                           	callstack 0
  5308   002928                     _AppendMoves:
  5309                           	callstack 21
  5310                           
  5311                           ;incstack = 0
  5312                           ;AppendMoves@temp stored from wreg
  5313   002928  6E0E               	movwf	AppendMoves@temp^0,c
  5314   00292A                     
  5315                           ;Memorization.c: 19:     anti_moves_array[(*moves_index)++] = temp;
  5316   00292A  C009  FFD9         	movff	AppendMoves@moves_index,fsr2l
  5317   00292E  C00A  FFDA         	movff	AppendMoves@moves_index+1,fsr2h
  5318   002932  CFDF F00D          	movff	indf2,??_AppendMoves
  5319   002936  0E01               	movlw	1
  5320   002938  26DF               	addwf	indf2,f,c
  5321   00293A  500D               	movf	??_AppendMoves^0,w,c
  5322   00293C  240B               	addwf	AppendMoves@anti_moves_array^0,w,c
  5323   00293E  6ED9               	movwf	fsr2l,c
  5324   002940  0E00               	movlw	0
  5325   002942  200C               	addwfc	(AppendMoves@anti_moves_array+1)^0,w,c
  5326   002944  6EDA               	movwf	fsr2h,c
  5327   002946  C00E  FFDF         	movff	AppendMoves@temp,indf2
  5328   00294A  0012               	return		;funcret
  5329   00294C                     __end_of_AppendMoves:
  5330                           	callstack 0
  5331                           
  5332 ;; *************** function _AntiYellow *****************
  5333 ;; Defined at:
  5334 ;;		line 118 in file "color_instructions.c"
  5335 ;; Parameters:    Size  Location     Type
  5336 ;;  mL              2   45[COMRAM] PTR struct DC_motor
  5337 ;;		 -> main@motorL(9), 
  5338 ;;  mR              2   47[COMRAM] PTR struct DC_motor
  5339 ;;		 -> main@motorR(9), 
  5340 ;; Auto vars:     Size  Location     Type
  5341 ;;  a               1   51[COMRAM] unsigned char 
  5342 ;; Return value:  Size  Location     Type
  5343 ;;                  1    wreg      void 
  5344 ;; Registers used:
  5345 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5346 ;; Tracked objects:
  5347 ;;		On entry : 0/0
  5348 ;;		On exit  : 0/0
  5349 ;;		Unchanged: 0/0
  5350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5351 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5352 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5353 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5354 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5355 ;;Total ram usage:        7 bytes
  5356 ;; Hardware stack levels used: 1
  5357 ;; Hardware stack levels required when called: 12
  5358 ;; This function calls:
  5359 ;;		_BlueInstructions
  5360 ;;		_RedInstructions
  5361 ;;		_fullSpeedAhead
  5362 ;;		_stop
  5363 ;; This function is called by:
  5364 ;;		_MoveBuggy
  5365 ;; This function uses a non-reentrant model
  5366 ;;
  5367                           
  5368                           	psect	text21
  5369   001CAE                     __ptext21:
  5370                           	callstack 0
  5371   001CAE                     _AntiYellow:
  5372                           	callstack 16
  5373   001CAE                     
  5374                           ;color_instructions.c: 119:     unsigned char a=0;
  5375   001CAE  0E00               	movlw	0
  5376   001CB0  6E34               	movwf	AntiYellow@a^0,c
  5377   001CB2                     
  5378                           ;color_instructions.c: 121:     RedInstructions(mL, mR);
  5379   001CB2  C02E  F027         	movff	AntiYellow@mL,RedInstructions@mL
  5380   001CB6  C02F  F028         	movff	AntiYellow@mL+1,RedInstructions@mL+1
  5381   001CBA  C030  F029         	movff	AntiYellow@mR,RedInstructions@mR
  5382   001CBE  C031  F02A         	movff	AntiYellow@mR+1,RedInstructions@mR+1
  5383   001CC2  EC64  F011         	call	_RedInstructions	;wreg free
  5384   001CC6                     
  5385                           ;color_instructions.c: 122:     _delay((unsigned long)((50)*(64000000/4000.0)));
  5386   001CC6  0E05               	movlw	5
  5387   001CC8  6E33               	movwf	(??_AntiYellow+1)^0,c
  5388   001CCA  0E0F               	movlw	15
  5389   001CCC  6E32               	movwf	??_AntiYellow^0,c
  5390   001CCE  0EF1               	movlw	241
  5391   001CD0                     u4587:
  5392   001CD0  2EE8               	decfsz	wreg,f,c
  5393   001CD2  D7FE               	bra	u4587
  5394   001CD4  2E32               	decfsz	??_AntiYellow^0,f,c
  5395   001CD6  D7FC               	bra	u4587
  5396   001CD8  2E33               	decfsz	(??_AntiYellow+1)^0,f,c
  5397   001CDA  D7FA               	bra	u4587
  5398   001CDC  F000               	nop	
  5399                           
  5400                           ;color_instructions.c: 124:     while (a<45){
  5401   001CDE  EF7C  F00E         	goto	l3145
  5402   001CE2                     l3141:
  5403                           
  5404                           ;color_instructions.c: 125:         fullSpeedAhead(mL, mR);
  5405   001CE2  C02E  F01C         	movff	AntiYellow@mL,fullSpeedAhead@mL
  5406   001CE6  C02F  F01D         	movff	AntiYellow@mL+1,fullSpeedAhead@mL+1
  5407   001CEA  C030  F01E         	movff	AntiYellow@mR,fullSpeedAhead@mR
  5408   001CEE  C031  F01F         	movff	AntiYellow@mR+1,fullSpeedAhead@mR+1
  5409   001CF2  EC13  F00C         	call	_fullSpeedAhead	;wreg free
  5410   001CF6                     
  5411                           ;color_instructions.c: 126:         a++;
  5412   001CF6  2A34               	incf	AntiYellow@a^0,f,c
  5413   001CF8                     l3145:
  5414                           
  5415                           ;color_instructions.c: 124:     while (a<45){
  5416   001CF8  0E2C               	movlw	44
  5417   001CFA  6434               	cpfsgt	AntiYellow@a^0,c
  5418   001CFC  EF82  F00E         	goto	u2451
  5419   001D00  EF84  F00E         	goto	u2450
  5420   001D04                     u2451:
  5421   001D04  EF71  F00E         	goto	l3141
  5422   001D08                     u2450:
  5423   001D08  EF91  F00E         	goto	l3151
  5424   001D0C                     l3147:
  5425                           
  5426                           ;color_instructions.c: 129:         stop(mL, mR);
  5427   001D0C  C02E  F01C         	movff	AntiYellow@mL,stop@mL
  5428   001D10  C02F  F01D         	movff	AntiYellow@mL+1,stop@mL+1
  5429   001D14  C030  F01E         	movff	AntiYellow@mR,stop@mR
  5430   001D18  C031  F01F         	movff	AntiYellow@mR+1,stop@mR+1
  5431   001D1C  ECED  F00D         	call	_stop	;wreg free
  5432   001D20                     
  5433                           ;color_instructions.c: 130:         a--;
  5434   001D20  0634               	decf	AntiYellow@a^0,f,c
  5435   001D22                     l3151:
  5436                           
  5437                           ;color_instructions.c: 128:     while (a>0){
  5438   001D22  5034               	movf	AntiYellow@a^0,w,c
  5439   001D24  A4D8               	btfss	status,2,c
  5440   001D26  EF97  F00E         	goto	u2461
  5441   001D2A  EF99  F00E         	goto	u2460
  5442   001D2E                     u2461:
  5443   001D2E  EF86  F00E         	goto	l3147
  5444   001D32                     u2460:
  5445   001D32                     
  5446                           ;color_instructions.c: 132:     _delay((unsigned long)((50)*(64000000/4000.0)));
  5447   001D32  0E05               	movlw	5
  5448   001D34  6E33               	movwf	(??_AntiYellow+1)^0,c
  5449   001D36  0E0F               	movlw	15
  5450   001D38  6E32               	movwf	??_AntiYellow^0,c
  5451   001D3A  0EF1               	movlw	241
  5452   001D3C                     u4597:
  5453   001D3C  2EE8               	decfsz	wreg,f,c
  5454   001D3E  D7FE               	bra	u4597
  5455   001D40  2E32               	decfsz	??_AntiYellow^0,f,c
  5456   001D42  D7FC               	bra	u4597
  5457   001D44  2E33               	decfsz	(??_AntiYellow+1)^0,f,c
  5458   001D46  D7FA               	bra	u4597
  5459   001D48  F000               	nop	
  5460   001D4A                     
  5461                           ;color_instructions.c: 134:     BlueInstructions(mL, mR);
  5462   001D4A  C02E  F027         	movff	AntiYellow@mL,BlueInstructions@mL
  5463   001D4E  C02F  F028         	movff	AntiYellow@mL+1,BlueInstructions@mL+1
  5464   001D52  C030  F029         	movff	AntiYellow@mR,BlueInstructions@mR
  5465   001D56  C031  F02A         	movff	AntiYellow@mR+1,BlueInstructions@mR+1
  5466   001D5A  EC09  F00F         	call	_BlueInstructions	;wreg free
  5467   001D5E  0012               	return		;funcret
  5468   001D60                     __end_of_AntiYellow:
  5469                           	callstack 0
  5470                           
  5471 ;; *************** function _RedInstructions *****************
  5472 ;; Defined at:
  5473 ;;		line 10 in file "color_instructions.c"
  5474 ;; Parameters:    Size  Location     Type
  5475 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  5476 ;;		 -> main@motorL(9), 
  5477 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  5478 ;;		 -> main@motorR(9), 
  5479 ;; Auto vars:     Size  Location     Type
  5480 ;;  a               1   44[COMRAM] unsigned char 
  5481 ;; Return value:  Size  Location     Type
  5482 ;;                  1    wreg      void 
  5483 ;; Registers used:
  5484 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5485 ;; Tracked objects:
  5486 ;;		On entry : 0/0
  5487 ;;		On exit  : 0/0
  5488 ;;		Unchanged: 0/0
  5489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5490 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5491 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5492 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5493 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5494 ;;Total ram usage:        7 bytes
  5495 ;; Hardware stack levels used: 1
  5496 ;; Hardware stack levels required when called: 11
  5497 ;; This function calls:
  5498 ;;		_fullSpeedBackwards
  5499 ;;		_stop
  5500 ;;		_turnRight90
  5501 ;; This function is called by:
  5502 ;;		_AntiYellow
  5503 ;;		_MoveBuggy
  5504 ;; This function uses a non-reentrant model
  5505 ;;
  5506                           
  5507                           	psect	text22
  5508   0022C8                     __ptext22:
  5509                           	callstack 0
  5510   0022C8                     _RedInstructions:
  5511                           	callstack 17
  5512   0022C8                     
  5513                           ;color_instructions.c: 12:     unsigned char a=0;
  5514   0022C8  0E00               	movlw	0
  5515   0022CA  6E2D               	movwf	RedInstructions@a^0,c
  5516                           
  5517                           ;color_instructions.c: 13:     while (a<16){
  5518   0022CC  EF73  F011         	goto	l2969
  5519   0022D0                     l2965:
  5520                           
  5521                           ;color_instructions.c: 14:         fullSpeedBackwards(mL, mR);
  5522   0022D0  C027  F01C         	movff	RedInstructions@mL,fullSpeedBackwards@mL
  5523   0022D4  C028  F01D         	movff	RedInstructions@mL+1,fullSpeedBackwards@mL+1
  5524   0022D8  C029  F01E         	movff	RedInstructions@mR,fullSpeedBackwards@mR
  5525   0022DC  C02A  F01F         	movff	RedInstructions@mR+1,fullSpeedBackwards@mR+1
  5526   0022E0  EC01  F00D         	call	_fullSpeedBackwards	;wreg free
  5527   0022E4                     
  5528                           ;color_instructions.c: 15:         a++;
  5529   0022E4  2A2D               	incf	RedInstructions@a^0,f,c
  5530   0022E6                     l2969:
  5531                           
  5532                           ;color_instructions.c: 13:     while (a<16){
  5533   0022E6  0E0F               	movlw	15
  5534   0022E8  642D               	cpfsgt	RedInstructions@a^0,c
  5535   0022EA  EF79  F011         	goto	u2291
  5536   0022EE  EF7B  F011         	goto	u2290
  5537   0022F2                     u2291:
  5538   0022F2  EF68  F011         	goto	l2965
  5539   0022F6                     u2290:
  5540   0022F6  EF88  F011         	goto	l2975
  5541   0022FA                     l2971:
  5542                           
  5543                           ;color_instructions.c: 18:         stop(mL, mR);
  5544   0022FA  C027  F01C         	movff	RedInstructions@mL,stop@mL
  5545   0022FE  C028  F01D         	movff	RedInstructions@mL+1,stop@mL+1
  5546   002302  C029  F01E         	movff	RedInstructions@mR,stop@mR
  5547   002306  C02A  F01F         	movff	RedInstructions@mR+1,stop@mR+1
  5548   00230A  ECED  F00D         	call	_stop	;wreg free
  5549   00230E                     
  5550                           ;color_instructions.c: 19:         a--;
  5551   00230E  062D               	decf	RedInstructions@a^0,f,c
  5552   002310                     l2975:
  5553                           
  5554                           ;color_instructions.c: 17:     while (a>0){
  5555   002310  502D               	movf	RedInstructions@a^0,w,c
  5556   002312  A4D8               	btfss	status,2,c
  5557   002314  EF8E  F011         	goto	u2301
  5558   002318  EF90  F011         	goto	u2300
  5559   00231C                     u2301:
  5560   00231C  EF7D  F011         	goto	l2971
  5561   002320                     u2300:
  5562   002320                     
  5563                           ;color_instructions.c: 21:     _delay((unsigned long)((50)*(64000000/4000.0)));
  5564   002320  0E05               	movlw	5
  5565   002322  6E2C               	movwf	(??_RedInstructions+1)^0,c
  5566   002324  0E0F               	movlw	15
  5567   002326  6E2B               	movwf	??_RedInstructions^0,c
  5568   002328  0EF1               	movlw	241
  5569   00232A                     u4607:
  5570   00232A  2EE8               	decfsz	wreg,f,c
  5571   00232C  D7FE               	bra	u4607
  5572   00232E  2E2B               	decfsz	??_RedInstructions^0,f,c
  5573   002330  D7FC               	bra	u4607
  5574   002332  2E2C               	decfsz	(??_RedInstructions+1)^0,f,c
  5575   002334  D7FA               	bra	u4607
  5576   002336  F000               	nop	
  5577   002338                     
  5578                           ;color_instructions.c: 22:     turnRight90(mL, mR);
  5579   002338  C027  F022         	movff	RedInstructions@mL,turnRight90@mL
  5580   00233C  C028  F023         	movff	RedInstructions@mL+1,turnRight90@mL+1
  5581   002340  C029  F024         	movff	RedInstructions@mR,turnRight90@mR
  5582   002344  C02A  F025         	movff	RedInstructions@mR+1,turnRight90@mR+1
  5583   002348  EC62  F00F         	call	_turnRight90	;wreg free
  5584   00234C  0012               	return		;funcret
  5585   00234E                     __end_of_RedInstructions:
  5586                           	callstack 0
  5587                           
  5588 ;; *************** function _turnRight90 *****************
  5589 ;; Defined at:
  5590 ;;		line 221 in file "dc_motor.c"
  5591 ;; Parameters:    Size  Location     Type
  5592 ;;  mL              2   33[COMRAM] PTR struct DC_motor
  5593 ;;		 -> main@motorL(9), 
  5594 ;;  mR              2   35[COMRAM] PTR struct DC_motor
  5595 ;;		 -> main@motorR(9), 
  5596 ;; Auto vars:     Size  Location     Type
  5597 ;;  a               1   37[COMRAM] unsigned char 
  5598 ;; Return value:  Size  Location     Type
  5599 ;;                  1    wreg      void 
  5600 ;; Registers used:
  5601 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5602 ;; Tracked objects:
  5603 ;;		On entry : 0/0
  5604 ;;		On exit  : 0/0
  5605 ;;		Unchanged: 0/0
  5606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5607 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5608 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5610 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5611 ;;Total ram usage:        5 bytes
  5612 ;; Hardware stack levels used: 1
  5613 ;; Hardware stack levels required when called: 10
  5614 ;; This function calls:
  5615 ;;		_stop
  5616 ;;		_turnRight
  5617 ;; This function is called by:
  5618 ;;		_turnRight135
  5619 ;;		_RedInstructions
  5620 ;;		_YellowInstructions
  5621 ;; This function uses a non-reentrant model
  5622 ;;
  5623                           
  5624                           	psect	text23
  5625   001EC4                     __ptext23:
  5626                           	callstack 0
  5627   001EC4                     _turnRight90:
  5628                           	callstack 17
  5629   001EC4                     
  5630                           ;dc_motor.c: 223:     unsigned char a=0;
  5631   001EC4  0E00               	movlw	0
  5632   001EC6  6E26               	movwf	turnRight90@a^0,c
  5633                           
  5634                           ;dc_motor.c: 224:     while(a<15){
  5635   001EC8  EF71  F00F         	goto	l2887
  5636   001ECC                     l2883:
  5637                           
  5638                           ;dc_motor.c: 225:         turnRight(mL, mR);
  5639   001ECC  C022  F01C         	movff	turnRight90@mL,turnRight@mL
  5640   001ED0  C023  F01D         	movff	turnRight90@mL+1,turnRight@mL+1
  5641   001ED4  C024  F01E         	movff	turnRight90@mR,turnRight@mR
  5642   001ED8  C025  F01F         	movff	turnRight90@mR+1,turnRight@mR+1
  5643   001EDC  EC9C  F00B         	call	_turnRight	;wreg free
  5644   001EE0                     
  5645                           ;dc_motor.c: 226:         a++;
  5646   001EE0  2A26               	incf	turnRight90@a^0,f,c
  5647   001EE2                     l2887:
  5648                           
  5649                           ;dc_motor.c: 224:     while(a<15){
  5650   001EE2  0E0E               	movlw	14
  5651   001EE4  6426               	cpfsgt	turnRight90@a^0,c
  5652   001EE6  EF77  F00F         	goto	u2171
  5653   001EEA  EF79  F00F         	goto	u2170
  5654   001EEE                     u2171:
  5655   001EEE  EF66  F00F         	goto	l2883
  5656   001EF2                     u2170:
  5657   001EF2  EF86  F00F         	goto	l2893
  5658   001EF6                     l2889:
  5659                           
  5660                           ;dc_motor.c: 229:         stop(mL, mR);
  5661   001EF6  C022  F01C         	movff	turnRight90@mL,stop@mL
  5662   001EFA  C023  F01D         	movff	turnRight90@mL+1,stop@mL+1
  5663   001EFE  C024  F01E         	movff	turnRight90@mR,stop@mR
  5664   001F02  C025  F01F         	movff	turnRight90@mR+1,stop@mR+1
  5665   001F06  ECED  F00D         	call	_stop	;wreg free
  5666   001F0A                     
  5667                           ;dc_motor.c: 230:         a--;
  5668   001F0A  0626               	decf	turnRight90@a^0,f,c
  5669   001F0C                     l2893:
  5670                           
  5671                           ;dc_motor.c: 228:     while(a>0){
  5672   001F0C  5026               	movf	turnRight90@a^0,w,c
  5673   001F0E  A4D8               	btfss	status,2,c
  5674   001F10  EF8C  F00F         	goto	u2181
  5675   001F14  EF8E  F00F         	goto	u2180
  5676   001F18                     u2181:
  5677   001F18  EF7B  F00F         	goto	l2889
  5678   001F1C                     u2180:
  5679   001F1C  EF9B  F00F         	goto	l2899
  5680   001F20                     l2895:
  5681                           
  5682                           ;dc_motor.c: 233:         turnRight(mL, mR);
  5683   001F20  C022  F01C         	movff	turnRight90@mL,turnRight@mL
  5684   001F24  C023  F01D         	movff	turnRight90@mL+1,turnRight@mL+1
  5685   001F28  C024  F01E         	movff	turnRight90@mR,turnRight@mR
  5686   001F2C  C025  F01F         	movff	turnRight90@mR+1,turnRight@mR+1
  5687   001F30  EC9C  F00B         	call	_turnRight	;wreg free
  5688   001F34                     
  5689                           ;dc_motor.c: 234:         a++;
  5690   001F34  2A26               	incf	turnRight90@a^0,f,c
  5691   001F36                     l2899:
  5692                           
  5693                           ;dc_motor.c: 232:     while(a<15){
  5694   001F36  0E0E               	movlw	14
  5695   001F38  6426               	cpfsgt	turnRight90@a^0,c
  5696   001F3A  EFA1  F00F         	goto	u2191
  5697   001F3E  EFA3  F00F         	goto	u2190
  5698   001F42                     u2191:
  5699   001F42  EF90  F00F         	goto	l2895
  5700   001F46                     u2190:
  5701   001F46  EFB0  F00F         	goto	l2905
  5702   001F4A                     l2901:
  5703                           
  5704                           ;dc_motor.c: 237:         stop(mL, mR);
  5705   001F4A  C022  F01C         	movff	turnRight90@mL,stop@mL
  5706   001F4E  C023  F01D         	movff	turnRight90@mL+1,stop@mL+1
  5707   001F52  C024  F01E         	movff	turnRight90@mR,stop@mR
  5708   001F56  C025  F01F         	movff	turnRight90@mR+1,stop@mR+1
  5709   001F5A  ECED  F00D         	call	_stop	;wreg free
  5710   001F5E                     
  5711                           ;dc_motor.c: 238:         a--;
  5712   001F5E  0626               	decf	turnRight90@a^0,f,c
  5713   001F60                     l2905:
  5714                           
  5715                           ;dc_motor.c: 236:     while(a>0){
  5716   001F60  5026               	movf	turnRight90@a^0,w,c
  5717   001F62  A4D8               	btfss	status,2,c
  5718   001F64  EFB6  F00F         	goto	u2201
  5719   001F68  EFB8  F00F         	goto	u2200
  5720   001F6C                     u2201:
  5721   001F6C  EFA5  F00F         	goto	l2901
  5722   001F70                     u2200:
  5723   001F70  0012               	return		;funcret
  5724   001F72                     __end_of_turnRight90:
  5725                           	callstack 0
  5726                           
  5727 ;; *************** function _turnRight *****************
  5728 ;; Defined at:
  5729 ;;		line 129 in file "dc_motor.c"
  5730 ;; Parameters:    Size  Location     Type
  5731 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  5732 ;;		 -> main@motorL(9), 
  5733 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  5734 ;;		 -> main@motorR(9), 
  5735 ;; Auto vars:     Size  Location     Type
  5736 ;;		None
  5737 ;; Return value:  Size  Location     Type
  5738 ;;                  1    wreg      void 
  5739 ;; Registers used:
  5740 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5741 ;; Tracked objects:
  5742 ;;		On entry : 0/0
  5743 ;;		On exit  : 0/0
  5744 ;;		Unchanged: 0/0
  5745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5746 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5748 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5749 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5750 ;;Total ram usage:        6 bytes
  5751 ;; Hardware stack levels used: 1
  5752 ;; Hardware stack levels required when called: 9
  5753 ;; This function calls:
  5754 ;;		_setMotorPWM
  5755 ;; This function is called by:
  5756 ;;		_turnRight90
  5757 ;;		_turnRight135
  5758 ;; This function uses a non-reentrant model
  5759 ;;
  5760                           
  5761                           	psect	text24
  5762   001738                     __ptext24:
  5763                           	callstack 0
  5764   001738                     _turnRight:
  5765                           	callstack 17
  5766   001738                     
  5767                           ;dc_motor.c: 129: void turnRight(DC_motor *mL, DC_motor *mR);dc_motor.c: 130: {;dc_motor
      +                          .c: 132:     mL->direction = 1;
  5768   001738  EE20 F001          	lfsr	2,1
  5769   00173C  501C               	movf	turnRight@mL^0,w,c
  5770   00173E  26D9               	addwf	fsr2l,f,c
  5771   001740  501D               	movf	(turnRight@mL+1)^0,w,c
  5772   001742  22DA               	addwfc	fsr2h,f,c
  5773   001744  0E01               	movlw	1
  5774   001746  6EDF               	movwf	indf2,c
  5775                           
  5776                           ;dc_motor.c: 133:     mL->brakemode = 0;
  5777   001748  EE20 F002          	lfsr	2,2
  5778   00174C  501C               	movf	turnRight@mL^0,w,c
  5779   00174E  26D9               	addwf	fsr2l,f,c
  5780   001750  501D               	movf	(turnRight@mL+1)^0,w,c
  5781   001752  22DA               	addwfc	fsr2h,f,c
  5782   001754  0E00               	movlw	0
  5783   001756  6EDF               	movwf	indf2,c
  5784                           
  5785                           ;dc_motor.c: 135:     mR->direction = 0;
  5786   001758  EE20 F001          	lfsr	2,1
  5787   00175C  501E               	movf	turnRight@mR^0,w,c
  5788   00175E  26D9               	addwf	fsr2l,f,c
  5789   001760  501F               	movf	(turnRight@mR+1)^0,w,c
  5790   001762  22DA               	addwfc	fsr2h,f,c
  5791   001764  0E00               	movlw	0
  5792   001766  6EDF               	movwf	indf2,c
  5793                           
  5794                           ;dc_motor.c: 136:     mR->brakemode = 0;
  5795   001768  EE20 F002          	lfsr	2,2
  5796   00176C  501E               	movf	turnRight@mR^0,w,c
  5797   00176E  26D9               	addwf	fsr2l,f,c
  5798   001770  501F               	movf	(turnRight@mR+1)^0,w,c
  5799   001772  22DA               	addwfc	fsr2h,f,c
  5800   001774  0E00               	movlw	0
  5801   001776  6EDF               	movwf	indf2,c
  5802                           
  5803                           ;dc_motor.c: 139:     if(mL->power>62){mL->power=62;}
  5804   001778  C01C  FFD9         	movff	turnRight@mL,fsr2l
  5805   00177C  C01D  FFDA         	movff	turnRight@mL+1,fsr2h
  5806   001780  50DF               	movf	indf2,w,c
  5807   001782  0A80               	xorlw	128
  5808   001784  0F41               	addlw	-191
  5809   001786  A0D8               	btfss	status,0,c
  5810   001788  EFC8  F00B         	goto	u2091
  5811   00178C  EFCA  F00B         	goto	u2090
  5812   001790                     u2091:
  5813   001790  EFD0  F00B         	goto	l2811
  5814   001794                     u2090:
  5815   001794  C01C  FFD9         	movff	turnRight@mL,fsr2l
  5816   001798  C01D  FFDA         	movff	turnRight@mL+1,fsr2h
  5817   00179C  0E3E               	movlw	62
  5818   00179E  6EDF               	movwf	indf2,c
  5819   0017A0                     l2811:
  5820                           
  5821                           ;dc_motor.c: 140:     if(mR->power>62){mR->power=62;}
  5822   0017A0  C01E  FFD9         	movff	turnRight@mR,fsr2l
  5823   0017A4  C01F  FFDA         	movff	turnRight@mR+1,fsr2h
  5824   0017A8  50DF               	movf	indf2,w,c
  5825   0017AA  0A80               	xorlw	128
  5826   0017AC  0F41               	addlw	-191
  5827   0017AE  A0D8               	btfss	status,0,c
  5828   0017B0  EFDC  F00B         	goto	u2101
  5829   0017B4  EFDE  F00B         	goto	u2100
  5830   0017B8                     u2101:
  5831   0017B8  EFE4  F00B         	goto	l2815
  5832   0017BC                     u2100:
  5833   0017BC  C01E  FFD9         	movff	turnRight@mR,fsr2l
  5834   0017C0  C01F  FFDA         	movff	turnRight@mR+1,fsr2h
  5835   0017C4  0E3E               	movlw	62
  5836   0017C6  6EDF               	movwf	indf2,c
  5837   0017C8                     l2815:
  5838                           
  5839                           ;dc_motor.c: 142:     mL->power = mL->power + 10 ;
  5840   0017C8  C01C  FFD9         	movff	turnRight@mL,fsr2l
  5841   0017CC  C01D  FFDA         	movff	turnRight@mL+1,fsr2h
  5842   0017D0  50DF               	movf	indf2,w,c
  5843   0017D2  0F0A               	addlw	10
  5844   0017D4  C01C  FFD9         	movff	turnRight@mL,fsr2l
  5845   0017D8  C01D  FFDA         	movff	turnRight@mL+1,fsr2h
  5846   0017DC  6EDF               	movwf	indf2,c
  5847   0017DE                     
  5848                           ;dc_motor.c: 143:     mR->power = mR->power + 10;
  5849   0017DE  C01E  FFD9         	movff	turnRight@mR,fsr2l
  5850   0017E2  C01F  FFDA         	movff	turnRight@mR+1,fsr2h
  5851   0017E6  50DF               	movf	indf2,w,c
  5852   0017E8  0F0A               	addlw	10
  5853   0017EA  C01E  FFD9         	movff	turnRight@mR,fsr2l
  5854   0017EE  C01F  FFDA         	movff	turnRight@mR+1,fsr2h
  5855   0017F2  6EDF               	movwf	indf2,c
  5856   0017F4                     
  5857                           ;dc_motor.c: 145:     setMotorPWM(mL);
  5858   0017F4  C01C  F016         	movff	turnRight@mL,setMotorPWM@m
  5859   0017F8  C01D  F017         	movff	turnRight@mL+1,setMotorPWM@m+1
  5860   0017FC  EC62  F00A         	call	_setMotorPWM	;wreg free
  5861   001800                     
  5862                           ;dc_motor.c: 146:     setMotorPWM(mR);
  5863   001800  C01E  F016         	movff	turnRight@mR,setMotorPWM@m
  5864   001804  C01F  F017         	movff	turnRight@mR+1,setMotorPWM@m+1
  5865   001808  EC62  F00A         	call	_setMotorPWM	;wreg free
  5866   00180C                     
  5867                           ;dc_motor.c: 147:     _delay((unsigned long)((20)*(64000000/4000.0)));
  5868   00180C  0E02               	movlw	2
  5869   00180E  6E21               	movwf	(??_turnRight+1)^0,c
  5870   001810  0EA0               	movlw	160
  5871   001812  6E20               	movwf	??_turnRight^0,c
  5872   001814  0E92               	movlw	146
  5873   001816                     u4617:
  5874   001816  2EE8               	decfsz	wreg,f,c
  5875   001818  D7FE               	bra	u4617
  5876   00181A  2E20               	decfsz	??_turnRight^0,f,c
  5877   00181C  D7FC               	bra	u4617
  5878   00181E  2E21               	decfsz	(??_turnRight+1)^0,f,c
  5879   001820  D7FA               	bra	u4617
  5880   001822  D000               	nop2	
  5881   001824  0012               	return		;funcret
  5882   001826                     __end_of_turnRight:
  5883                           	callstack 0
  5884                           
  5885 ;; *************** function _AntiPink *****************
  5886 ;; Defined at:
  5887 ;;		line 137 in file "color_instructions.c"
  5888 ;; Parameters:    Size  Location     Type
  5889 ;;  mL              2   45[COMRAM] PTR struct DC_motor
  5890 ;;		 -> main@motorL(9), 
  5891 ;;  mR              2   47[COMRAM] PTR struct DC_motor
  5892 ;;		 -> main@motorR(9), 
  5893 ;; Auto vars:     Size  Location     Type
  5894 ;;  a               1   51[COMRAM] unsigned char 
  5895 ;; Return value:  Size  Location     Type
  5896 ;;                  1    wreg      void 
  5897 ;; Registers used:
  5898 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5899 ;; Tracked objects:
  5900 ;;		On entry : 0/0
  5901 ;;		On exit  : 0/0
  5902 ;;		Unchanged: 0/0
  5903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5904 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5905 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5906 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5907 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5908 ;;Total ram usage:        7 bytes
  5909 ;; Hardware stack levels used: 1
  5910 ;; Hardware stack levels required when called: 12
  5911 ;; This function calls:
  5912 ;;		_BlueInstructions
  5913 ;;		_GreenInstructions
  5914 ;;		_fullSpeedAhead
  5915 ;;		_stop
  5916 ;; This function is called by:
  5917 ;;		_MoveBuggy
  5918 ;; This function uses a non-reentrant model
  5919 ;;
  5920                           
  5921                           	psect	text25
  5922   001D60                     __ptext25:
  5923                           	callstack 0
  5924   001D60                     _AntiPink:
  5925                           	callstack 16
  5926   001D60                     
  5927                           ;color_instructions.c: 138:     unsigned char a=0;
  5928   001D60  0E00               	movlw	0
  5929   001D62  6E34               	movwf	AntiPink@a^0,c
  5930   001D64                     
  5931                           ;color_instructions.c: 140:     GreenInstructions(mL, mR);
  5932   001D64  C02E  F027         	movff	AntiPink@mL,GreenInstructions@mL
  5933   001D68  C02F  F028         	movff	AntiPink@mL+1,GreenInstructions@mL+1
  5934   001D6C  C030  F029         	movff	AntiPink@mR,GreenInstructions@mR
  5935   001D70  C031  F02A         	movff	AntiPink@mR+1,GreenInstructions@mR+1
  5936   001D74  ECA7  F011         	call	_GreenInstructions	;wreg free
  5937   001D78                     
  5938                           ;color_instructions.c: 141:     _delay((unsigned long)((50)*(64000000/4000.0)));
  5939   001D78  0E05               	movlw	5
  5940   001D7A  6E33               	movwf	(??_AntiPink+1)^0,c
  5941   001D7C  0E0F               	movlw	15
  5942   001D7E  6E32               	movwf	??_AntiPink^0,c
  5943   001D80  0EF1               	movlw	241
  5944   001D82                     u4627:
  5945   001D82  2EE8               	decfsz	wreg,f,c
  5946   001D84  D7FE               	bra	u4627
  5947   001D86  2E32               	decfsz	??_AntiPink^0,f,c
  5948   001D88  D7FC               	bra	u4627
  5949   001D8A  2E33               	decfsz	(??_AntiPink+1)^0,f,c
  5950   001D8C  D7FA               	bra	u4627
  5951   001D8E  F000               	nop	
  5952                           
  5953                           ;color_instructions.c: 143:     while (a<45){
  5954   001D90  EFD5  F00E         	goto	l3167
  5955   001D94                     l3163:
  5956                           
  5957                           ;color_instructions.c: 144:         fullSpeedAhead(mL, mR);
  5958   001D94  C02E  F01C         	movff	AntiPink@mL,fullSpeedAhead@mL
  5959   001D98  C02F  F01D         	movff	AntiPink@mL+1,fullSpeedAhead@mL+1
  5960   001D9C  C030  F01E         	movff	AntiPink@mR,fullSpeedAhead@mR
  5961   001DA0  C031  F01F         	movff	AntiPink@mR+1,fullSpeedAhead@mR+1
  5962   001DA4  EC13  F00C         	call	_fullSpeedAhead	;wreg free
  5963   001DA8                     
  5964                           ;color_instructions.c: 145:         a++;
  5965   001DA8  2A34               	incf	AntiPink@a^0,f,c
  5966   001DAA                     l3167:
  5967                           
  5968                           ;color_instructions.c: 143:     while (a<45){
  5969   001DAA  0E2C               	movlw	44
  5970   001DAC  6434               	cpfsgt	AntiPink@a^0,c
  5971   001DAE  EFDB  F00E         	goto	u2471
  5972   001DB2  EFDD  F00E         	goto	u2470
  5973   001DB6                     u2471:
  5974   001DB6  EFCA  F00E         	goto	l3163
  5975   001DBA                     u2470:
  5976   001DBA  EFEA  F00E         	goto	l3173
  5977   001DBE                     l3169:
  5978                           
  5979                           ;color_instructions.c: 148:         stop(mL, mR);
  5980   001DBE  C02E  F01C         	movff	AntiPink@mL,stop@mL
  5981   001DC2  C02F  F01D         	movff	AntiPink@mL+1,stop@mL+1
  5982   001DC6  C030  F01E         	movff	AntiPink@mR,stop@mR
  5983   001DCA  C031  F01F         	movff	AntiPink@mR+1,stop@mR+1
  5984   001DCE  ECED  F00D         	call	_stop	;wreg free
  5985   001DD2                     
  5986                           ;color_instructions.c: 149:         a--;
  5987   001DD2  0634               	decf	AntiPink@a^0,f,c
  5988   001DD4                     l3173:
  5989                           
  5990                           ;color_instructions.c: 147:     while (a>0){
  5991   001DD4  5034               	movf	AntiPink@a^0,w,c
  5992   001DD6  A4D8               	btfss	status,2,c
  5993   001DD8  EFF0  F00E         	goto	u2481
  5994   001DDC  EFF2  F00E         	goto	u2480
  5995   001DE0                     u2481:
  5996   001DE0  EFDF  F00E         	goto	l3169
  5997   001DE4                     u2480:
  5998   001DE4                     
  5999                           ;color_instructions.c: 151:     _delay((unsigned long)((50)*(64000000/4000.0)));
  6000   001DE4  0E05               	movlw	5
  6001   001DE6  6E33               	movwf	(??_AntiPink+1)^0,c
  6002   001DE8  0E0F               	movlw	15
  6003   001DEA  6E32               	movwf	??_AntiPink^0,c
  6004   001DEC  0EF1               	movlw	241
  6005   001DEE                     u4637:
  6006   001DEE  2EE8               	decfsz	wreg,f,c
  6007   001DF0  D7FE               	bra	u4637
  6008   001DF2  2E32               	decfsz	??_AntiPink^0,f,c
  6009   001DF4  D7FC               	bra	u4637
  6010   001DF6  2E33               	decfsz	(??_AntiPink+1)^0,f,c
  6011   001DF8  D7FA               	bra	u4637
  6012   001DFA  F000               	nop	
  6013   001DFC                     
  6014                           ;color_instructions.c: 153:     BlueInstructions(mL, mR);
  6015   001DFC  C02E  F027         	movff	AntiPink@mL,BlueInstructions@mL
  6016   001E00  C02F  F028         	movff	AntiPink@mL+1,BlueInstructions@mL+1
  6017   001E04  C030  F029         	movff	AntiPink@mR,BlueInstructions@mR
  6018   001E08  C031  F02A         	movff	AntiPink@mR+1,BlueInstructions@mR+1
  6019   001E0C  EC09  F00F         	call	_BlueInstructions	;wreg free
  6020   001E10  0012               	return		;funcret
  6021   001E12                     __end_of_AntiPink:
  6022                           	callstack 0
  6023                           
  6024 ;; *************** function _fullSpeedAhead *****************
  6025 ;; Defined at:
  6026 ;;		line 151 in file "dc_motor.c"
  6027 ;; Parameters:    Size  Location     Type
  6028 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  6029 ;;		 -> main@motorL(9), 
  6030 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  6031 ;;		 -> main@motorR(9), 
  6032 ;; Auto vars:     Size  Location     Type
  6033 ;;		None
  6034 ;; Return value:  Size  Location     Type
  6035 ;;                  1    wreg      void 
  6036 ;; Registers used:
  6037 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6038 ;; Tracked objects:
  6039 ;;		On entry : 0/0
  6040 ;;		On exit  : 0/0
  6041 ;;		Unchanged: 0/0
  6042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6043 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6045 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6046 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6047 ;;Total ram usage:        6 bytes
  6048 ;; Hardware stack levels used: 1
  6049 ;; Hardware stack levels required when called: 9
  6050 ;; This function calls:
  6051 ;;		_setMotorPWM
  6052 ;; This function is called by:
  6053 ;;		_main
  6054 ;;		_AntiYellow
  6055 ;;		_AntiPink
  6056 ;;		_WhiteInstructions
  6057 ;; This function uses a non-reentrant model
  6058 ;;
  6059                           
  6060                           	psect	text26
  6061   001826                     __ptext26:
  6062                           	callstack 0
  6063   001826                     _fullSpeedAhead:
  6064                           	callstack 21
  6065   001826                     
  6066                           ;dc_motor.c: 151: void fullSpeedAhead(DC_motor *mL, DC_motor *mR);dc_motor.c: 152: {;dc_
      +                          motor.c: 154:     mL->direction = 1;
  6067   001826  EE20 F001          	lfsr	2,1
  6068   00182A  501C               	movf	fullSpeedAhead@mL^0,w,c
  6069   00182C  26D9               	addwf	fsr2l,f,c
  6070   00182E  501D               	movf	(fullSpeedAhead@mL+1)^0,w,c
  6071   001830  22DA               	addwfc	fsr2h,f,c
  6072   001832  0E01               	movlw	1
  6073   001834  6EDF               	movwf	indf2,c
  6074                           
  6075                           ;dc_motor.c: 155:     mL->brakemode = 0;
  6076   001836  EE20 F002          	lfsr	2,2
  6077   00183A  501C               	movf	fullSpeedAhead@mL^0,w,c
  6078   00183C  26D9               	addwf	fsr2l,f,c
  6079   00183E  501D               	movf	(fullSpeedAhead@mL+1)^0,w,c
  6080   001840  22DA               	addwfc	fsr2h,f,c
  6081   001842  0E00               	movlw	0
  6082   001844  6EDF               	movwf	indf2,c
  6083                           
  6084                           ;dc_motor.c: 157:     mR->direction = 1;
  6085   001846  EE20 F001          	lfsr	2,1
  6086   00184A  501E               	movf	fullSpeedAhead@mR^0,w,c
  6087   00184C  26D9               	addwf	fsr2l,f,c
  6088   00184E  501F               	movf	(fullSpeedAhead@mR+1)^0,w,c
  6089   001850  22DA               	addwfc	fsr2h,f,c
  6090   001852  0E01               	movlw	1
  6091   001854  6EDF               	movwf	indf2,c
  6092                           
  6093                           ;dc_motor.c: 158:     mR->brakemode = 0;
  6094   001856  EE20 F002          	lfsr	2,2
  6095   00185A  501E               	movf	fullSpeedAhead@mR^0,w,c
  6096   00185C  26D9               	addwf	fsr2l,f,c
  6097   00185E  501F               	movf	(fullSpeedAhead@mR+1)^0,w,c
  6098   001860  22DA               	addwfc	fsr2h,f,c
  6099   001862  0E00               	movlw	0
  6100   001864  6EDF               	movwf	indf2,c
  6101                           
  6102                           ;dc_motor.c: 162:     if(mL->power>40){mL->power=40;}
  6103   001866  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  6104   00186A  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  6105   00186E  50DF               	movf	indf2,w,c
  6106   001870  0A80               	xorlw	128
  6107   001872  0F57               	addlw	-169
  6108   001874  A0D8               	btfss	status,0,c
  6109   001876  EF3F  F00C         	goto	u2231
  6110   00187A  EF41  F00C         	goto	u2230
  6111   00187E                     u2231:
  6112   00187E  EF47  F00C         	goto	l2917
  6113   001882                     u2230:
  6114   001882  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  6115   001886  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  6116   00188A  0E28               	movlw	40
  6117   00188C  6EDF               	movwf	indf2,c
  6118   00188E                     l2917:
  6119                           
  6120                           ;dc_motor.c: 163:     if(mR->power>43){mR->power=43;}
  6121   00188E  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  6122   001892  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  6123   001896  50DF               	movf	indf2,w,c
  6124   001898  0A80               	xorlw	128
  6125   00189A  0F54               	addlw	-172
  6126   00189C  A0D8               	btfss	status,0,c
  6127   00189E  EF53  F00C         	goto	u2241
  6128   0018A2  EF55  F00C         	goto	u2240
  6129   0018A6                     u2241:
  6130   0018A6  EF5B  F00C         	goto	l2921
  6131   0018AA                     u2240:
  6132   0018AA  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  6133   0018AE  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  6134   0018B2  0E2B               	movlw	43
  6135   0018B4  6EDF               	movwf	indf2,c
  6136   0018B6                     l2921:
  6137                           
  6138                           ;dc_motor.c: 165:     mL->power = mL->power + 5 ;
  6139   0018B6  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  6140   0018BA  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  6141   0018BE  50DF               	movf	indf2,w,c
  6142   0018C0  0F05               	addlw	5
  6143   0018C2  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  6144   0018C6  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  6145   0018CA  6EDF               	movwf	indf2,c
  6146   0018CC                     
  6147                           ;dc_motor.c: 166:     mR->power = mR->power + 7;
  6148   0018CC  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  6149   0018D0  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  6150   0018D4  50DF               	movf	indf2,w,c
  6151   0018D6  0F07               	addlw	7
  6152   0018D8  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  6153   0018DC  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  6154   0018E0  6EDF               	movwf	indf2,c
  6155   0018E2                     
  6156                           ;dc_motor.c: 168:     setMotorPWM(mL);
  6157   0018E2  C01C  F016         	movff	fullSpeedAhead@mL,setMotorPWM@m
  6158   0018E6  C01D  F017         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  6159   0018EA  EC62  F00A         	call	_setMotorPWM	;wreg free
  6160   0018EE                     
  6161                           ;dc_motor.c: 169:     setMotorPWM(mR);
  6162   0018EE  C01E  F016         	movff	fullSpeedAhead@mR,setMotorPWM@m
  6163   0018F2  C01F  F017         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  6164   0018F6  EC62  F00A         	call	_setMotorPWM	;wreg free
  6165   0018FA                     
  6166                           ;dc_motor.c: 170:     _delay((unsigned long)((50)*(64000000/4000.0)));
  6167   0018FA  0E05               	movlw	5
  6168   0018FC  6E21               	movwf	(??_fullSpeedAhead+1)^0,c
  6169   0018FE  0E0F               	movlw	15
  6170   001900  6E20               	movwf	??_fullSpeedAhead^0,c
  6171   001902  0EF1               	movlw	241
  6172   001904                     u4647:
  6173   001904  2EE8               	decfsz	wreg,f,c
  6174   001906  D7FE               	bra	u4647
  6175   001908  2E20               	decfsz	??_fullSpeedAhead^0,f,c
  6176   00190A  D7FC               	bra	u4647
  6177   00190C  2E21               	decfsz	(??_fullSpeedAhead+1)^0,f,c
  6178   00190E  D7FA               	bra	u4647
  6179   001910  F000               	nop	
  6180   001912  0012               	return		;funcret
  6181   001914                     __end_of_fullSpeedAhead:
  6182                           	callstack 0
  6183                           
  6184 ;; *************** function _GreenInstructions *****************
  6185 ;; Defined at:
  6186 ;;		line 25 in file "color_instructions.c"
  6187 ;; Parameters:    Size  Location     Type
  6188 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  6189 ;;		 -> main@motorL(9), 
  6190 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  6191 ;;		 -> main@motorR(9), 
  6192 ;; Auto vars:     Size  Location     Type
  6193 ;;  a               1   44[COMRAM] unsigned char 
  6194 ;; Return value:  Size  Location     Type
  6195 ;;                  1    wreg      void 
  6196 ;; Registers used:
  6197 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6198 ;; Tracked objects:
  6199 ;;		On entry : 0/0
  6200 ;;		On exit  : 0/0
  6201 ;;		Unchanged: 0/0
  6202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6203 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6204 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6205 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6206 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6207 ;;Total ram usage:        7 bytes
  6208 ;; Hardware stack levels used: 1
  6209 ;; Hardware stack levels required when called: 11
  6210 ;; This function calls:
  6211 ;;		_fullSpeedBackwards
  6212 ;;		_stop
  6213 ;;		_turnLeft90
  6214 ;; This function is called by:
  6215 ;;		_AntiPink
  6216 ;;		_MoveBuggy
  6217 ;; This function uses a non-reentrant model
  6218 ;;
  6219                           
  6220                           	psect	text27
  6221   00234E                     __ptext27:
  6222                           	callstack 0
  6223   00234E                     _GreenInstructions:
  6224                           	callstack 17
  6225   00234E                     
  6226                           ;color_instructions.c: 26:     unsigned char a=0;
  6227   00234E  0E00               	movlw	0
  6228   002350  6E2D               	movwf	GreenInstructions@a^0,c
  6229                           
  6230                           ;color_instructions.c: 27:     while (a<16){
  6231   002352  EFB6  F011         	goto	l2987
  6232   002356                     l2983:
  6233                           
  6234                           ;color_instructions.c: 28:         fullSpeedBackwards(mL, mR);
  6235   002356  C027  F01C         	movff	GreenInstructions@mL,fullSpeedBackwards@mL
  6236   00235A  C028  F01D         	movff	GreenInstructions@mL+1,fullSpeedBackwards@mL+1
  6237   00235E  C029  F01E         	movff	GreenInstructions@mR,fullSpeedBackwards@mR
  6238   002362  C02A  F01F         	movff	GreenInstructions@mR+1,fullSpeedBackwards@mR+1
  6239   002366  EC01  F00D         	call	_fullSpeedBackwards	;wreg free
  6240   00236A                     
  6241                           ;color_instructions.c: 29:         a++;
  6242   00236A  2A2D               	incf	GreenInstructions@a^0,f,c
  6243   00236C                     l2987:
  6244                           
  6245                           ;color_instructions.c: 27:     while (a<16){
  6246   00236C  0E0F               	movlw	15
  6247   00236E  642D               	cpfsgt	GreenInstructions@a^0,c
  6248   002370  EFBC  F011         	goto	u2311
  6249   002374  EFBE  F011         	goto	u2310
  6250   002378                     u2311:
  6251   002378  EFAB  F011         	goto	l2983
  6252   00237C                     u2310:
  6253   00237C  EFCB  F011         	goto	l2993
  6254   002380                     l2989:
  6255                           
  6256                           ;color_instructions.c: 32:         stop(mL, mR);
  6257   002380  C027  F01C         	movff	GreenInstructions@mL,stop@mL
  6258   002384  C028  F01D         	movff	GreenInstructions@mL+1,stop@mL+1
  6259   002388  C029  F01E         	movff	GreenInstructions@mR,stop@mR
  6260   00238C  C02A  F01F         	movff	GreenInstructions@mR+1,stop@mR+1
  6261   002390  ECED  F00D         	call	_stop	;wreg free
  6262   002394                     
  6263                           ;color_instructions.c: 33:         a--;
  6264   002394  062D               	decf	GreenInstructions@a^0,f,c
  6265   002396                     l2993:
  6266                           
  6267                           ;color_instructions.c: 31:     while (a>0){
  6268   002396  502D               	movf	GreenInstructions@a^0,w,c
  6269   002398  A4D8               	btfss	status,2,c
  6270   00239A  EFD1  F011         	goto	u2321
  6271   00239E  EFD3  F011         	goto	u2320
  6272   0023A2                     u2321:
  6273   0023A2  EFC0  F011         	goto	l2989
  6274   0023A6                     u2320:
  6275   0023A6                     
  6276                           ;color_instructions.c: 35:     _delay((unsigned long)((50)*(64000000/4000.0)));
  6277   0023A6  0E05               	movlw	5
  6278   0023A8  6E2C               	movwf	(??_GreenInstructions+1)^0,c
  6279   0023AA  0E0F               	movlw	15
  6280   0023AC  6E2B               	movwf	??_GreenInstructions^0,c
  6281   0023AE  0EF1               	movlw	241
  6282   0023B0                     u4657:
  6283   0023B0  2EE8               	decfsz	wreg,f,c
  6284   0023B2  D7FE               	bra	u4657
  6285   0023B4  2E2B               	decfsz	??_GreenInstructions^0,f,c
  6286   0023B6  D7FC               	bra	u4657
  6287   0023B8  2E2C               	decfsz	(??_GreenInstructions+1)^0,f,c
  6288   0023BA  D7FA               	bra	u4657
  6289   0023BC  F000               	nop	
  6290   0023BE                     
  6291                           ;color_instructions.c: 36:     turnLeft90(mL, mR);
  6292   0023BE  C027  F022         	movff	GreenInstructions@mL,turnLeft90@mL
  6293   0023C2  C028  F023         	movff	GreenInstructions@mL+1,turnLeft90@mL+1
  6294   0023C6  C029  F024         	movff	GreenInstructions@mR,turnLeft90@mR
  6295   0023CA  C02A  F025         	movff	GreenInstructions@mR+1,turnLeft90@mR+1
  6296   0023CE  ECB9  F00F         	call	_turnLeft90	;wreg free
  6297   0023D2  0012               	return		;funcret
  6298   0023D4                     __end_of_GreenInstructions:
  6299                           	callstack 0
  6300                           
  6301 ;; *************** function _BlueInstructions *****************
  6302 ;; Defined at:
  6303 ;;		line 39 in file "color_instructions.c"
  6304 ;; Parameters:    Size  Location     Type
  6305 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  6306 ;;		 -> main@motorL(9), 
  6307 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  6308 ;;		 -> main@motorR(9), 
  6309 ;; Auto vars:     Size  Location     Type
  6310 ;;  a               1   44[COMRAM] unsigned char 
  6311 ;; Return value:  Size  Location     Type
  6312 ;;                  1    wreg      void 
  6313 ;; Registers used:
  6314 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6315 ;; Tracked objects:
  6316 ;;		On entry : 0/0
  6317 ;;		On exit  : 0/0
  6318 ;;		Unchanged: 0/0
  6319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6320 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6321 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6322 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6323 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6324 ;;Total ram usage:        7 bytes
  6325 ;; Hardware stack levels used: 1
  6326 ;; Hardware stack levels required when called: 11
  6327 ;; This function calls:
  6328 ;;		_fullSpeedBackwards
  6329 ;;		_stop
  6330 ;;		_turnLeft90
  6331 ;; This function is called by:
  6332 ;;		_AntiYellow
  6333 ;;		_AntiPink
  6334 ;;		_WhiteInstructions
  6335 ;;		_MoveBuggy
  6336 ;; This function uses a non-reentrant model
  6337 ;;
  6338                           
  6339                           	psect	text28
  6340   001E12                     __ptext28:
  6341                           	callstack 0
  6342   001E12                     _BlueInstructions:
  6343                           	callstack 17
  6344   001E12                     
  6345                           ;color_instructions.c: 40:     unsigned char a=0;
  6346   001E12  0E00               	movlw	0
  6347   001E14  6E2D               	movwf	BlueInstructions@a^0,c
  6348                           
  6349                           ;color_instructions.c: 41:     while (a<16){
  6350   001E16  EF18  F00F         	goto	l3005
  6351   001E1A                     l3001:
  6352                           
  6353                           ;color_instructions.c: 42:         fullSpeedBackwards(mL, mR);
  6354   001E1A  C027  F01C         	movff	BlueInstructions@mL,fullSpeedBackwards@mL
  6355   001E1E  C028  F01D         	movff	BlueInstructions@mL+1,fullSpeedBackwards@mL+1
  6356   001E22  C029  F01E         	movff	BlueInstructions@mR,fullSpeedBackwards@mR
  6357   001E26  C02A  F01F         	movff	BlueInstructions@mR+1,fullSpeedBackwards@mR+1
  6358   001E2A  EC01  F00D         	call	_fullSpeedBackwards	;wreg free
  6359   001E2E                     
  6360                           ;color_instructions.c: 43:         a++;
  6361   001E2E  2A2D               	incf	BlueInstructions@a^0,f,c
  6362   001E30                     l3005:
  6363                           
  6364                           ;color_instructions.c: 41:     while (a<16){
  6365   001E30  0E0F               	movlw	15
  6366   001E32  642D               	cpfsgt	BlueInstructions@a^0,c
  6367   001E34  EF1E  F00F         	goto	u2331
  6368   001E38  EF20  F00F         	goto	u2330
  6369   001E3C                     u2331:
  6370   001E3C  EF0D  F00F         	goto	l3001
  6371   001E40                     u2330:
  6372   001E40  EF2D  F00F         	goto	l3011
  6373   001E44                     l3007:
  6374                           
  6375                           ;color_instructions.c: 46:         stop(mL, mR);
  6376   001E44  C027  F01C         	movff	BlueInstructions@mL,stop@mL
  6377   001E48  C028  F01D         	movff	BlueInstructions@mL+1,stop@mL+1
  6378   001E4C  C029  F01E         	movff	BlueInstructions@mR,stop@mR
  6379   001E50  C02A  F01F         	movff	BlueInstructions@mR+1,stop@mR+1
  6380   001E54  ECED  F00D         	call	_stop	;wreg free
  6381   001E58                     
  6382                           ;color_instructions.c: 47:         a--;
  6383   001E58  062D               	decf	BlueInstructions@a^0,f,c
  6384   001E5A                     l3011:
  6385                           
  6386                           ;color_instructions.c: 45:     while (a>0){
  6387   001E5A  502D               	movf	BlueInstructions@a^0,w,c
  6388   001E5C  A4D8               	btfss	status,2,c
  6389   001E5E  EF33  F00F         	goto	u2341
  6390   001E62  EF35  F00F         	goto	u2340
  6391   001E66                     u2341:
  6392   001E66  EF22  F00F         	goto	l3007
  6393   001E6A                     u2340:
  6394   001E6A                     
  6395                           ;color_instructions.c: 49:     _delay((unsigned long)((50)*(64000000/4000.0)));
  6396   001E6A  0E05               	movlw	5
  6397   001E6C  6E2C               	movwf	(??_BlueInstructions+1)^0,c
  6398   001E6E  0E0F               	movlw	15
  6399   001E70  6E2B               	movwf	??_BlueInstructions^0,c
  6400   001E72  0EF1               	movlw	241
  6401   001E74                     u4667:
  6402   001E74  2EE8               	decfsz	wreg,f,c
  6403   001E76  D7FE               	bra	u4667
  6404   001E78  2E2B               	decfsz	??_BlueInstructions^0,f,c
  6405   001E7A  D7FC               	bra	u4667
  6406   001E7C  2E2C               	decfsz	(??_BlueInstructions+1)^0,f,c
  6407   001E7E  D7FA               	bra	u4667
  6408   001E80  F000               	nop	
  6409   001E82                     
  6410                           ;color_instructions.c: 52:     turnLeft90(mL, mR);
  6411   001E82  C027  F022         	movff	BlueInstructions@mL,turnLeft90@mL
  6412   001E86  C028  F023         	movff	BlueInstructions@mL+1,turnLeft90@mL+1
  6413   001E8A  C029  F024         	movff	BlueInstructions@mR,turnLeft90@mR
  6414   001E8E  C02A  F025         	movff	BlueInstructions@mR+1,turnLeft90@mR+1
  6415   001E92  ECB9  F00F         	call	_turnLeft90	;wreg free
  6416   001E96                     
  6417                           ;color_instructions.c: 53:     _delay((unsigned long)((50)*(64000000/4000.0)));
  6418   001E96  0E05               	movlw	5
  6419   001E98  6E2C               	movwf	(??_BlueInstructions+1)^0,c
  6420   001E9A  0E0F               	movlw	15
  6421   001E9C  6E2B               	movwf	??_BlueInstructions^0,c
  6422   001E9E  0EF1               	movlw	241
  6423   001EA0                     u4677:
  6424   001EA0  2EE8               	decfsz	wreg,f,c
  6425   001EA2  D7FE               	bra	u4677
  6426   001EA4  2E2B               	decfsz	??_BlueInstructions^0,f,c
  6427   001EA6  D7FC               	bra	u4677
  6428   001EA8  2E2C               	decfsz	(??_BlueInstructions+1)^0,f,c
  6429   001EAA  D7FA               	bra	u4677
  6430   001EAC  F000               	nop	
  6431                           
  6432                           ;color_instructions.c: 54:     turnLeft90(mL, mR);
  6433   001EAE  C027  F022         	movff	BlueInstructions@mL,turnLeft90@mL
  6434   001EB2  C028  F023         	movff	BlueInstructions@mL+1,turnLeft90@mL+1
  6435   001EB6  C029  F024         	movff	BlueInstructions@mR,turnLeft90@mR
  6436   001EBA  C02A  F025         	movff	BlueInstructions@mR+1,turnLeft90@mR+1
  6437   001EBE  ECB9  F00F         	call	_turnLeft90	;wreg free
  6438   001EC2  0012               	return		;funcret
  6439   001EC4                     __end_of_BlueInstructions:
  6440                           	callstack 0
  6441                           
  6442 ;; *************** function _turnLeft90 *****************
  6443 ;; Defined at:
  6444 ;;		line 200 in file "dc_motor.c"
  6445 ;; Parameters:    Size  Location     Type
  6446 ;;  mL              2   33[COMRAM] PTR struct DC_motor
  6447 ;;		 -> main@motorL(9), 
  6448 ;;  mR              2   35[COMRAM] PTR struct DC_motor
  6449 ;;		 -> main@motorR(9), 
  6450 ;; Auto vars:     Size  Location     Type
  6451 ;;  a               1   37[COMRAM] unsigned char 
  6452 ;; Return value:  Size  Location     Type
  6453 ;;                  1    wreg      void 
  6454 ;; Registers used:
  6455 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6456 ;; Tracked objects:
  6457 ;;		On entry : 0/0
  6458 ;;		On exit  : 0/0
  6459 ;;		Unchanged: 0/0
  6460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6461 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6462 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6464 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6465 ;;Total ram usage:        5 bytes
  6466 ;; Hardware stack levels used: 1
  6467 ;; Hardware stack levels required when called: 10
  6468 ;; This function calls:
  6469 ;;		_stop
  6470 ;;		_turnLeft
  6471 ;; This function is called by:
  6472 ;;		_turnLeft135
  6473 ;;		_GreenInstructions
  6474 ;;		_BlueInstructions
  6475 ;;		_PinkInstructions
  6476 ;;		_turn180
  6477 ;; This function uses a non-reentrant model
  6478 ;;
  6479                           
  6480                           	psect	text29
  6481   001F72                     __ptext29:
  6482                           	callstack 0
  6483   001F72                     _turnLeft90:
  6484                           	callstack 17
  6485   001F72                     
  6486                           ;dc_motor.c: 202:     unsigned char a=0;
  6487   001F72  0E00               	movlw	0
  6488   001F74  6E26               	movwf	turnLeft90@a^0,c
  6489                           
  6490                           ;dc_motor.c: 203:     while(a<16){
  6491   001F76  EFC8  F00F         	goto	l2861
  6492   001F7A                     l2857:
  6493                           
  6494                           ;dc_motor.c: 204:         turnLeft(mL, mR);
  6495   001F7A  C022  F01C         	movff	turnLeft90@mL,turnLeft@mL
  6496   001F7E  C023  F01D         	movff	turnLeft90@mL+1,turnLeft@mL+1
  6497   001F82  C024  F01E         	movff	turnLeft90@mR,turnLeft@mR
  6498   001F86  C025  F01F         	movff	turnLeft90@mR+1,turnLeft@mR+1
  6499   001F8A  EC8A  F00C         	call	_turnLeft	;wreg free
  6500   001F8E                     
  6501                           ;dc_motor.c: 205:         a++;
  6502   001F8E  2A26               	incf	turnLeft90@a^0,f,c
  6503   001F90                     l2861:
  6504                           
  6505                           ;dc_motor.c: 203:     while(a<16){
  6506   001F90  0E0F               	movlw	15
  6507   001F92  6426               	cpfsgt	turnLeft90@a^0,c
  6508   001F94  EFCE  F00F         	goto	u2131
  6509   001F98  EFD0  F00F         	goto	u2130
  6510   001F9C                     u2131:
  6511   001F9C  EFBD  F00F         	goto	l2857
  6512   001FA0                     u2130:
  6513   001FA0  EFDD  F00F         	goto	l2867
  6514   001FA4                     l2863:
  6515                           
  6516                           ;dc_motor.c: 208:         stop(mL, mR);
  6517   001FA4  C022  F01C         	movff	turnLeft90@mL,stop@mL
  6518   001FA8  C023  F01D         	movff	turnLeft90@mL+1,stop@mL+1
  6519   001FAC  C024  F01E         	movff	turnLeft90@mR,stop@mR
  6520   001FB0  C025  F01F         	movff	turnLeft90@mR+1,stop@mR+1
  6521   001FB4  ECED  F00D         	call	_stop	;wreg free
  6522   001FB8                     
  6523                           ;dc_motor.c: 209:         a--;
  6524   001FB8  0626               	decf	turnLeft90@a^0,f,c
  6525   001FBA                     l2867:
  6526                           
  6527                           ;dc_motor.c: 207:     while(a>0){
  6528   001FBA  5026               	movf	turnLeft90@a^0,w,c
  6529   001FBC  A4D8               	btfss	status,2,c
  6530   001FBE  EFE3  F00F         	goto	u2141
  6531   001FC2  EFE5  F00F         	goto	u2140
  6532   001FC6                     u2141:
  6533   001FC6  EFD2  F00F         	goto	l2863
  6534   001FCA                     u2140:
  6535   001FCA  EFF2  F00F         	goto	l2873
  6536   001FCE                     l2869:
  6537                           
  6538                           ;dc_motor.c: 212:         turnLeft(mL, mR);
  6539   001FCE  C022  F01C         	movff	turnLeft90@mL,turnLeft@mL
  6540   001FD2  C023  F01D         	movff	turnLeft90@mL+1,turnLeft@mL+1
  6541   001FD6  C024  F01E         	movff	turnLeft90@mR,turnLeft@mR
  6542   001FDA  C025  F01F         	movff	turnLeft90@mR+1,turnLeft@mR+1
  6543   001FDE  EC8A  F00C         	call	_turnLeft	;wreg free
  6544   001FE2                     
  6545                           ;dc_motor.c: 213:         a++;
  6546   001FE2  2A26               	incf	turnLeft90@a^0,f,c
  6547   001FE4                     l2873:
  6548                           
  6549                           ;dc_motor.c: 211:     while(a<15){
  6550   001FE4  0E0E               	movlw	14
  6551   001FE6  6426               	cpfsgt	turnLeft90@a^0,c
  6552   001FE8  EFF8  F00F         	goto	u2151
  6553   001FEC  EFFA  F00F         	goto	u2150
  6554   001FF0                     u2151:
  6555   001FF0  EFE7  F00F         	goto	l2869
  6556   001FF4                     u2150:
  6557   001FF4  EF07  F010         	goto	l2879
  6558   001FF8                     l2875:
  6559                           
  6560                           ;dc_motor.c: 216:         stop(mL, mR);
  6561   001FF8  C022  F01C         	movff	turnLeft90@mL,stop@mL
  6562   001FFC  C023  F01D         	movff	turnLeft90@mL+1,stop@mL+1
  6563   002000  C024  F01E         	movff	turnLeft90@mR,stop@mR
  6564   002004  C025  F01F         	movff	turnLeft90@mR+1,stop@mR+1
  6565   002008  ECED  F00D         	call	_stop	;wreg free
  6566   00200C                     
  6567                           ;dc_motor.c: 217:         a--;
  6568   00200C  0626               	decf	turnLeft90@a^0,f,c
  6569   00200E                     l2879:
  6570                           
  6571                           ;dc_motor.c: 215:     while(a>0){
  6572   00200E  5026               	movf	turnLeft90@a^0,w,c
  6573   002010  A4D8               	btfss	status,2,c
  6574   002012  EF0D  F010         	goto	u2161
  6575   002016  EF0F  F010         	goto	u2160
  6576   00201A                     u2161:
  6577   00201A  EFFC  F00F         	goto	l2875
  6578   00201E                     u2160:
  6579   00201E  0012               	return		;funcret
  6580   002020                     __end_of_turnLeft90:
  6581                           	callstack 0
  6582                           
  6583 ;; *************** function _turnLeft *****************
  6584 ;; Defined at:
  6585 ;;		line 107 in file "dc_motor.c"
  6586 ;; Parameters:    Size  Location     Type
  6587 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  6588 ;;		 -> main@motorL(9), 
  6589 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  6590 ;;		 -> main@motorR(9), 
  6591 ;; Auto vars:     Size  Location     Type
  6592 ;;		None
  6593 ;; Return value:  Size  Location     Type
  6594 ;;                  1    wreg      void 
  6595 ;; Registers used:
  6596 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6597 ;; Tracked objects:
  6598 ;;		On entry : 0/0
  6599 ;;		On exit  : 0/0
  6600 ;;		Unchanged: 0/0
  6601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6602 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6604 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6605 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6606 ;;Total ram usage:        6 bytes
  6607 ;; Hardware stack levels used: 1
  6608 ;; Hardware stack levels required when called: 9
  6609 ;; This function calls:
  6610 ;;		_setMotorPWM
  6611 ;; This function is called by:
  6612 ;;		_turnLeft90
  6613 ;;		_turnLeft135
  6614 ;; This function uses a non-reentrant model
  6615 ;;
  6616                           
  6617                           	psect	text30
  6618   001914                     __ptext30:
  6619                           	callstack 0
  6620   001914                     _turnLeft:
  6621                           	callstack 17
  6622   001914                     
  6623                           ;dc_motor.c: 107: void turnLeft(DC_motor *mL, DC_motor *mR);dc_motor.c: 108: {;dc_motor.
      +                          c: 110:     mL->direction = 0;
  6624   001914  EE20 F001          	lfsr	2,1
  6625   001918  501C               	movf	turnLeft@mL^0,w,c
  6626   00191A  26D9               	addwf	fsr2l,f,c
  6627   00191C  501D               	movf	(turnLeft@mL+1)^0,w,c
  6628   00191E  22DA               	addwfc	fsr2h,f,c
  6629   001920  0E00               	movlw	0
  6630   001922  6EDF               	movwf	indf2,c
  6631                           
  6632                           ;dc_motor.c: 111:     mL->brakemode = 0;
  6633   001924  EE20 F002          	lfsr	2,2
  6634   001928  501C               	movf	turnLeft@mL^0,w,c
  6635   00192A  26D9               	addwf	fsr2l,f,c
  6636   00192C  501D               	movf	(turnLeft@mL+1)^0,w,c
  6637   00192E  22DA               	addwfc	fsr2h,f,c
  6638   001930  0E00               	movlw	0
  6639   001932  6EDF               	movwf	indf2,c
  6640                           
  6641                           ;dc_motor.c: 113:     mR->direction = 1;
  6642   001934  EE20 F001          	lfsr	2,1
  6643   001938  501E               	movf	turnLeft@mR^0,w,c
  6644   00193A  26D9               	addwf	fsr2l,f,c
  6645   00193C  501F               	movf	(turnLeft@mR+1)^0,w,c
  6646   00193E  22DA               	addwfc	fsr2h,f,c
  6647   001940  0E01               	movlw	1
  6648   001942  6EDF               	movwf	indf2,c
  6649                           
  6650                           ;dc_motor.c: 114:     mR->brakemode = 0;
  6651   001944  EE20 F002          	lfsr	2,2
  6652   001948  501E               	movf	turnLeft@mR^0,w,c
  6653   00194A  26D9               	addwf	fsr2l,f,c
  6654   00194C  501F               	movf	(turnLeft@mR+1)^0,w,c
  6655   00194E  22DA               	addwfc	fsr2h,f,c
  6656   001950  0E00               	movlw	0
  6657   001952  6EDF               	movwf	indf2,c
  6658                           
  6659                           ;dc_motor.c: 117:     if(mL->power>62){mL->power=62;}
  6660   001954  C01C  FFD9         	movff	turnLeft@mL,fsr2l
  6661   001958  C01D  FFDA         	movff	turnLeft@mL+1,fsr2h
  6662   00195C  50DF               	movf	indf2,w,c
  6663   00195E  0A80               	xorlw	128
  6664   001960  0F41               	addlw	-191
  6665   001962  A0D8               	btfss	status,0,c
  6666   001964  EFB6  F00C         	goto	u2071
  6667   001968  EFB8  F00C         	goto	u2070
  6668   00196C                     u2071:
  6669   00196C  EFBE  F00C         	goto	l2793
  6670   001970                     u2070:
  6671   001970  C01C  FFD9         	movff	turnLeft@mL,fsr2l
  6672   001974  C01D  FFDA         	movff	turnLeft@mL+1,fsr2h
  6673   001978  0E3E               	movlw	62
  6674   00197A  6EDF               	movwf	indf2,c
  6675   00197C                     l2793:
  6676                           
  6677                           ;dc_motor.c: 118:     if(mR->power>62){mR->power=62;}
  6678   00197C  C01E  FFD9         	movff	turnLeft@mR,fsr2l
  6679   001980  C01F  FFDA         	movff	turnLeft@mR+1,fsr2h
  6680   001984  50DF               	movf	indf2,w,c
  6681   001986  0A80               	xorlw	128
  6682   001988  0F41               	addlw	-191
  6683   00198A  A0D8               	btfss	status,0,c
  6684   00198C  EFCA  F00C         	goto	u2081
  6685   001990  EFCC  F00C         	goto	u2080
  6686   001994                     u2081:
  6687   001994  EFD2  F00C         	goto	l2797
  6688   001998                     u2080:
  6689   001998  C01E  FFD9         	movff	turnLeft@mR,fsr2l
  6690   00199C  C01F  FFDA         	movff	turnLeft@mR+1,fsr2h
  6691   0019A0  0E3E               	movlw	62
  6692   0019A2  6EDF               	movwf	indf2,c
  6693   0019A4                     l2797:
  6694                           
  6695                           ;dc_motor.c: 120:     mL->power = mL->power + 10 ;
  6696   0019A4  C01C  FFD9         	movff	turnLeft@mL,fsr2l
  6697   0019A8  C01D  FFDA         	movff	turnLeft@mL+1,fsr2h
  6698   0019AC  50DF               	movf	indf2,w,c
  6699   0019AE  0F0A               	addlw	10
  6700   0019B0  C01C  FFD9         	movff	turnLeft@mL,fsr2l
  6701   0019B4  C01D  FFDA         	movff	turnLeft@mL+1,fsr2h
  6702   0019B8  6EDF               	movwf	indf2,c
  6703   0019BA                     
  6704                           ;dc_motor.c: 121:     mR->power = mR->power + 10;
  6705   0019BA  C01E  FFD9         	movff	turnLeft@mR,fsr2l
  6706   0019BE  C01F  FFDA         	movff	turnLeft@mR+1,fsr2h
  6707   0019C2  50DF               	movf	indf2,w,c
  6708   0019C4  0F0A               	addlw	10
  6709   0019C6  C01E  FFD9         	movff	turnLeft@mR,fsr2l
  6710   0019CA  C01F  FFDA         	movff	turnLeft@mR+1,fsr2h
  6711   0019CE  6EDF               	movwf	indf2,c
  6712   0019D0                     
  6713                           ;dc_motor.c: 123:     setMotorPWM(mL);
  6714   0019D0  C01C  F016         	movff	turnLeft@mL,setMotorPWM@m
  6715   0019D4  C01D  F017         	movff	turnLeft@mL+1,setMotorPWM@m+1
  6716   0019D8  EC62  F00A         	call	_setMotorPWM	;wreg free
  6717   0019DC                     
  6718                           ;dc_motor.c: 124:     setMotorPWM(mR);
  6719   0019DC  C01E  F016         	movff	turnLeft@mR,setMotorPWM@m
  6720   0019E0  C01F  F017         	movff	turnLeft@mR+1,setMotorPWM@m+1
  6721   0019E4  EC62  F00A         	call	_setMotorPWM	;wreg free
  6722   0019E8                     
  6723                           ;dc_motor.c: 125:     _delay((unsigned long)((20)*(64000000/4000.0)));
  6724   0019E8  0E02               	movlw	2
  6725   0019EA  6E21               	movwf	(??_turnLeft+1)^0,c
  6726   0019EC  0EA0               	movlw	160
  6727   0019EE  6E20               	movwf	??_turnLeft^0,c
  6728   0019F0  0E92               	movlw	146
  6729   0019F2                     u4687:
  6730   0019F2  2EE8               	decfsz	wreg,f,c
  6731   0019F4  D7FE               	bra	u4687
  6732   0019F6  2E20               	decfsz	??_turnLeft^0,f,c
  6733   0019F8  D7FC               	bra	u4687
  6734   0019FA  2E21               	decfsz	(??_turnLeft+1)^0,f,c
  6735   0019FC  D7FA               	bra	u4687
  6736   0019FE  D000               	nop2	
  6737   001A00  0012               	return		;funcret
  6738   001A02                     __end_of_turnLeft:
  6739                           	callstack 0
  6740                           
  6741 ;; *************** function _stop *****************
  6742 ;; Defined at:
  6743 ;;		line 87 in file "dc_motor.c"
  6744 ;; Parameters:    Size  Location     Type
  6745 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  6746 ;;		 -> main@motorL(9), 
  6747 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  6748 ;;		 -> main@motorR(9), 
  6749 ;; Auto vars:     Size  Location     Type
  6750 ;;		None
  6751 ;; Return value:  Size  Location     Type
  6752 ;;                  1    wreg      void 
  6753 ;; Registers used:
  6754 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6755 ;; Tracked objects:
  6756 ;;		On entry : 0/0
  6757 ;;		On exit  : 0/0
  6758 ;;		Unchanged: 0/0
  6759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6760 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6762 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6763 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6764 ;;Total ram usage:        5 bytes
  6765 ;; Hardware stack levels used: 1
  6766 ;; Hardware stack levels required when called: 9
  6767 ;; This function calls:
  6768 ;;		_setMotorPWM
  6769 ;; This function is called by:
  6770 ;;		_turnLeft90
  6771 ;;		_turnRight90
  6772 ;;		_turnRight135
  6773 ;;		_turnLeft135
  6774 ;;		_main
  6775 ;;		_RedInstructions
  6776 ;;		_GreenInstructions
  6777 ;;		_BlueInstructions
  6778 ;;		_YellowInstructions
  6779 ;;		_PinkInstructions
  6780 ;;		_OrangeInstructions
  6781 ;;		_LightBlueInstructions
  6782 ;;		_AntiYellow
  6783 ;;		_AntiPink
  6784 ;;		_WhiteInstructions
  6785 ;; This function uses a non-reentrant model
  6786 ;;
  6787                           
  6788                           	psect	text31
  6789   001BDA                     __ptext31:
  6790                           	callstack 0
  6791   001BDA                     _stop:
  6792                           	callstack 21
  6793   001BDA                     
  6794                           ;dc_motor.c: 87: void stop(DC_motor *mL, DC_motor *mR);dc_motor.c: 88: {;dc_motor.c: 90:
      +                               mL->brakemode = 1;
  6795   001BDA  EE20 F002          	lfsr	2,2
  6796   001BDE  501C               	movf	stop@mL^0,w,c
  6797   001BE0  26D9               	addwf	fsr2l,f,c
  6798   001BE2  501D               	movf	(stop@mL+1)^0,w,c
  6799   001BE4  22DA               	addwfc	fsr2h,f,c
  6800   001BE6  0E01               	movlw	1
  6801   001BE8  6EDF               	movwf	indf2,c
  6802                           
  6803                           ;dc_motor.c: 91:     mR->brakemode = 1;
  6804   001BEA  EE20 F002          	lfsr	2,2
  6805   001BEE  501E               	movf	stop@mR^0,w,c
  6806   001BF0  26D9               	addwf	fsr2l,f,c
  6807   001BF2  501F               	movf	(stop@mR+1)^0,w,c
  6808   001BF4  22DA               	addwfc	fsr2h,f,c
  6809   001BF6  0E01               	movlw	1
  6810   001BF8  6EDF               	movwf	indf2,c
  6811                           
  6812                           ;dc_motor.c: 93:     if(mL->power<0){mL->power=0;}
  6813   001BFA  C01C  FFD9         	movff	stop@mL,fsr2l
  6814   001BFE  C01D  FFDA         	movff	stop@mL+1,fsr2h
  6815   001C02  0E00               	movlw	0
  6816   001C04  BEDB               	btfsc	plusw2,7,c
  6817   001C06  EF09  F00E         	goto	u2050
  6818   001C0A  EF07  F00E         	goto	u2051
  6819   001C0E                     u2051:
  6820   001C0E  EF0F  F00E         	goto	l2775
  6821   001C12                     u2050:
  6822   001C12  C01C  FFD9         	movff	stop@mL,fsr2l
  6823   001C16  C01D  FFDA         	movff	stop@mL+1,fsr2h
  6824   001C1A  0E00               	movlw	0
  6825   001C1C  6EDF               	movwf	indf2,c
  6826   001C1E                     l2775:
  6827                           
  6828                           ;dc_motor.c: 94:     if(mR->power<0){mR->power=0;}
  6829   001C1E  C01E  FFD9         	movff	stop@mR,fsr2l
  6830   001C22  C01F  FFDA         	movff	stop@mR+1,fsr2h
  6831   001C26  0E00               	movlw	0
  6832   001C28  BEDB               	btfsc	plusw2,7,c
  6833   001C2A  EF1B  F00E         	goto	u2060
  6834   001C2E  EF19  F00E         	goto	u2061
  6835   001C32                     u2061:
  6836   001C32  EF21  F00E         	goto	l2779
  6837   001C36                     u2060:
  6838   001C36  C01E  FFD9         	movff	stop@mR,fsr2l
  6839   001C3A  C01F  FFDA         	movff	stop@mR+1,fsr2h
  6840   001C3E  0E00               	movlw	0
  6841   001C40  6EDF               	movwf	indf2,c
  6842   001C42                     l2779:
  6843                           
  6844                           ;dc_motor.c: 96:     mL->power = mL->power - 5 ;
  6845   001C42  C01C  FFD9         	movff	stop@mL,fsr2l
  6846   001C46  C01D  FFDA         	movff	stop@mL+1,fsr2h
  6847   001C4A  50DF               	movf	indf2,w,c
  6848   001C4C  0FFB               	addlw	251
  6849   001C4E  C01C  FFD9         	movff	stop@mL,fsr2l
  6850   001C52  C01D  FFDA         	movff	stop@mL+1,fsr2h
  6851   001C56  6EDF               	movwf	indf2,c
  6852   001C58                     
  6853                           ;dc_motor.c: 97:     mR->power = mR->power - 5;
  6854   001C58  C01E  FFD9         	movff	stop@mR,fsr2l
  6855   001C5C  C01F  FFDA         	movff	stop@mR+1,fsr2h
  6856   001C60  50DF               	movf	indf2,w,c
  6857   001C62  0FFB               	addlw	251
  6858   001C64  C01E  FFD9         	movff	stop@mR,fsr2l
  6859   001C68  C01F  FFDA         	movff	stop@mR+1,fsr2h
  6860   001C6C  6EDF               	movwf	indf2,c
  6861                           
  6862                           ;dc_motor.c: 99:     mL->power = 0;
  6863   001C6E  C01C  FFD9         	movff	stop@mL,fsr2l
  6864   001C72  C01D  FFDA         	movff	stop@mL+1,fsr2h
  6865   001C76  0E00               	movlw	0
  6866   001C78  6EDF               	movwf	indf2,c
  6867                           
  6868                           ;dc_motor.c: 100:     mR->power = 0;
  6869   001C7A  C01E  FFD9         	movff	stop@mR,fsr2l
  6870   001C7E  C01F  FFDA         	movff	stop@mR+1,fsr2h
  6871   001C82  0E00               	movlw	0
  6872   001C84  6EDF               	movwf	indf2,c
  6873   001C86                     
  6874                           ;dc_motor.c: 101:     setMotorPWM(mL);
  6875   001C86  C01C  F016         	movff	stop@mL,setMotorPWM@m
  6876   001C8A  C01D  F017         	movff	stop@mL+1,setMotorPWM@m+1
  6877   001C8E  EC62  F00A         	call	_setMotorPWM	;wreg free
  6878   001C92                     
  6879                           ;dc_motor.c: 102:     setMotorPWM(mR);
  6880   001C92  C01E  F016         	movff	stop@mR,setMotorPWM@m
  6881   001C96  C01F  F017         	movff	stop@mR+1,setMotorPWM@m+1
  6882   001C9A  EC62  F00A         	call	_setMotorPWM	;wreg free
  6883   001C9E                     
  6884                           ;dc_motor.c: 103:     _delay((unsigned long)((10)*(64000000/4000.0)));
  6885   001C9E  0ED0               	movlw	208
  6886   001CA0  6E20               	movwf	??_stop^0,c
  6887   001CA2  0ECA               	movlw	202
  6888   001CA4                     u4697:
  6889   001CA4  2EE8               	decfsz	wreg,f,c
  6890   001CA6  D7FE               	bra	u4697
  6891   001CA8  2E20               	decfsz	??_stop^0,f,c
  6892   001CAA  D7FC               	bra	u4697
  6893   001CAC  0012               	return		;funcret
  6894   001CAE                     __end_of_stop:
  6895                           	callstack 0
  6896                           
  6897 ;; *************** function _fullSpeedBackwards *****************
  6898 ;; Defined at:
  6899 ;;		line 174 in file "dc_motor.c"
  6900 ;; Parameters:    Size  Location     Type
  6901 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  6902 ;;		 -> main@motorL(9), 
  6903 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  6904 ;;		 -> main@motorR(9), 
  6905 ;; Auto vars:     Size  Location     Type
  6906 ;;		None
  6907 ;; Return value:  Size  Location     Type
  6908 ;;                  1    wreg      void 
  6909 ;; Registers used:
  6910 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6911 ;; Tracked objects:
  6912 ;;		On entry : 0/0
  6913 ;;		On exit  : 0/0
  6914 ;;		Unchanged: 0/0
  6915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6916 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6918 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6919 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6920 ;;Total ram usage:        6 bytes
  6921 ;; Hardware stack levels used: 1
  6922 ;; Hardware stack levels required when called: 9
  6923 ;; This function calls:
  6924 ;;		_setMotorPWM
  6925 ;; This function is called by:
  6926 ;;		_RedInstructions
  6927 ;;		_GreenInstructions
  6928 ;;		_BlueInstructions
  6929 ;;		_YellowInstructions
  6930 ;;		_PinkInstructions
  6931 ;;		_OrangeInstructions
  6932 ;;		_LightBlueInstructions
  6933 ;; This function uses a non-reentrant model
  6934 ;;
  6935                           
  6936                           	psect	text32
  6937   001A02                     __ptext32:
  6938                           	callstack 0
  6939   001A02                     _fullSpeedBackwards:
  6940                           	callstack 18
  6941   001A02                     
  6942                           ;dc_motor.c: 177:     mL->direction = 0;
  6943   001A02  EE20 F001          	lfsr	2,1
  6944   001A06  501C               	movf	fullSpeedBackwards@mL^0,w,c
  6945   001A08  26D9               	addwf	fsr2l,f,c
  6946   001A0A  501D               	movf	(fullSpeedBackwards@mL+1)^0,w,c
  6947   001A0C  22DA               	addwfc	fsr2h,f,c
  6948   001A0E  0E00               	movlw	0
  6949   001A10  6EDF               	movwf	indf2,c
  6950                           
  6951                           ;dc_motor.c: 178:     mL->brakemode = 0;
  6952   001A12  EE20 F002          	lfsr	2,2
  6953   001A16  501C               	movf	fullSpeedBackwards@mL^0,w,c
  6954   001A18  26D9               	addwf	fsr2l,f,c
  6955   001A1A  501D               	movf	(fullSpeedBackwards@mL+1)^0,w,c
  6956   001A1C  22DA               	addwfc	fsr2h,f,c
  6957   001A1E  0E00               	movlw	0
  6958   001A20  6EDF               	movwf	indf2,c
  6959                           
  6960                           ;dc_motor.c: 180:     mR->direction = 0;
  6961   001A22  EE20 F001          	lfsr	2,1
  6962   001A26  501E               	movf	fullSpeedBackwards@mR^0,w,c
  6963   001A28  26D9               	addwf	fsr2l,f,c
  6964   001A2A  501F               	movf	(fullSpeedBackwards@mR+1)^0,w,c
  6965   001A2C  22DA               	addwfc	fsr2h,f,c
  6966   001A2E  0E00               	movlw	0
  6967   001A30  6EDF               	movwf	indf2,c
  6968                           
  6969                           ;dc_motor.c: 181:     mR->brakemode = 0;
  6970   001A32  EE20 F002          	lfsr	2,2
  6971   001A36  501E               	movf	fullSpeedBackwards@mR^0,w,c
  6972   001A38  26D9               	addwf	fsr2l,f,c
  6973   001A3A  501F               	movf	(fullSpeedBackwards@mR+1)^0,w,c
  6974   001A3C  22DA               	addwfc	fsr2h,f,c
  6975   001A3E  0E00               	movlw	0
  6976   001A40  6EDF               	movwf	indf2,c
  6977                           
  6978                           ;dc_motor.c: 184:     if(mL->power>38){mL->power=38;}
  6979   001A42  C01C  FFD9         	movff	fullSpeedBackwards@mL,fsr2l
  6980   001A46  C01D  FFDA         	movff	fullSpeedBackwards@mL+1,fsr2h
  6981   001A4A  50DF               	movf	indf2,w,c
  6982   001A4C  0A80               	xorlw	128
  6983   001A4E  0F59               	addlw	-167
  6984   001A50  A0D8               	btfss	status,0,c
  6985   001A52  EF2D  F00D         	goto	u2111
  6986   001A56  EF2F  F00D         	goto	u2110
  6987   001A5A                     u2111:
  6988   001A5A  EF35  F00D         	goto	l2841
  6989   001A5E                     u2110:
  6990   001A5E  C01C  FFD9         	movff	fullSpeedBackwards@mL,fsr2l
  6991   001A62  C01D  FFDA         	movff	fullSpeedBackwards@mL+1,fsr2h
  6992   001A66  0E26               	movlw	38
  6993   001A68  6EDF               	movwf	indf2,c
  6994   001A6A                     l2841:
  6995                           
  6996                           ;dc_motor.c: 185:     if(mR->power>46){mR->power=46;}
  6997   001A6A  C01E  FFD9         	movff	fullSpeedBackwards@mR,fsr2l
  6998   001A6E  C01F  FFDA         	movff	fullSpeedBackwards@mR+1,fsr2h
  6999   001A72  50DF               	movf	indf2,w,c
  7000   001A74  0A80               	xorlw	128
  7001   001A76  0F51               	addlw	-175
  7002   001A78  A0D8               	btfss	status,0,c
  7003   001A7A  EF41  F00D         	goto	u2121
  7004   001A7E  EF43  F00D         	goto	u2120
  7005   001A82                     u2121:
  7006   001A82  EF49  F00D         	goto	l2845
  7007   001A86                     u2120:
  7008   001A86  C01E  FFD9         	movff	fullSpeedBackwards@mR,fsr2l
  7009   001A8A  C01F  FFDA         	movff	fullSpeedBackwards@mR+1,fsr2h
  7010   001A8E  0E2E               	movlw	46
  7011   001A90  6EDF               	movwf	indf2,c
  7012   001A92                     l2845:
  7013                           
  7014                           ;dc_motor.c: 187:     mL->power = mL->power + 5 ;
  7015   001A92  C01C  FFD9         	movff	fullSpeedBackwards@mL,fsr2l
  7016   001A96  C01D  FFDA         	movff	fullSpeedBackwards@mL+1,fsr2h
  7017   001A9A  50DF               	movf	indf2,w,c
  7018   001A9C  0F05               	addlw	5
  7019   001A9E  C01C  FFD9         	movff	fullSpeedBackwards@mL,fsr2l
  7020   001AA2  C01D  FFDA         	movff	fullSpeedBackwards@mL+1,fsr2h
  7021   001AA6  6EDF               	movwf	indf2,c
  7022   001AA8                     
  7023                           ;dc_motor.c: 188:     mR->power = mR->power + 8;
  7024   001AA8  C01E  FFD9         	movff	fullSpeedBackwards@mR,fsr2l
  7025   001AAC  C01F  FFDA         	movff	fullSpeedBackwards@mR+1,fsr2h
  7026   001AB0  50DF               	movf	indf2,w,c
  7027   001AB2  0F08               	addlw	8
  7028   001AB4  C01E  FFD9         	movff	fullSpeedBackwards@mR,fsr2l
  7029   001AB8  C01F  FFDA         	movff	fullSpeedBackwards@mR+1,fsr2h
  7030   001ABC  6EDF               	movwf	indf2,c
  7031   001ABE                     
  7032                           ;dc_motor.c: 190:     setMotorPWM(mL);
  7033   001ABE  C01C  F016         	movff	fullSpeedBackwards@mL,setMotorPWM@m
  7034   001AC2  C01D  F017         	movff	fullSpeedBackwards@mL+1,setMotorPWM@m+1
  7035   001AC6  EC62  F00A         	call	_setMotorPWM	;wreg free
  7036   001ACA                     
  7037                           ;dc_motor.c: 191:     setMotorPWM(mR);
  7038   001ACA  C01E  F016         	movff	fullSpeedBackwards@mR,setMotorPWM@m
  7039   001ACE  C01F  F017         	movff	fullSpeedBackwards@mR+1,setMotorPWM@m+1
  7040   001AD2  EC62  F00A         	call	_setMotorPWM	;wreg free
  7041   001AD6                     
  7042                           ;dc_motor.c: 192:     _delay((unsigned long)((50)*(64000000/4000.0)));
  7043   001AD6  0E05               	movlw	5
  7044   001AD8  6E21               	movwf	(??_fullSpeedBackwards+1)^0,c
  7045   001ADA  0E0F               	movlw	15
  7046   001ADC  6E20               	movwf	??_fullSpeedBackwards^0,c
  7047   001ADE  0EF1               	movlw	241
  7048   001AE0                     u4707:
  7049   001AE0  2EE8               	decfsz	wreg,f,c
  7050   001AE2  D7FE               	bra	u4707
  7051   001AE4  2E20               	decfsz	??_fullSpeedBackwards^0,f,c
  7052   001AE6  D7FC               	bra	u4707
  7053   001AE8  2E21               	decfsz	(??_fullSpeedBackwards+1)^0,f,c
  7054   001AEA  D7FA               	bra	u4707
  7055   001AEC  F000               	nop	
  7056   001AEE  0012               	return		;funcret
  7057   001AF0                     __end_of_fullSpeedBackwards:
  7058                           	callstack 0
  7059                           
  7060 ;; *************** function _setMotorPWM *****************
  7061 ;; Defined at:
  7062 ;;		line 64 in file "dc_motor.c"
  7063 ;; Parameters:    Size  Location     Type
  7064 ;;  m               2   21[COMRAM] PTR struct DC_motor
  7065 ;;		 -> main@motorR(9), main@motorL(9), 
  7066 ;; Auto vars:     Size  Location     Type
  7067 ;;  negDuty         1   26[COMRAM] unsigned char 
  7068 ;;  posDuty         1   25[COMRAM] unsigned char 
  7069 ;; Return value:  Size  Location     Type
  7070 ;;                  1    wreg      void 
  7071 ;; Registers used:
  7072 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7073 ;; Tracked objects:
  7074 ;;		On entry : 0/0
  7075 ;;		On exit  : 0/0
  7076 ;;		Unchanged: 0/0
  7077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7078 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7079 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7080 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7081 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7082 ;;Total ram usage:        6 bytes
  7083 ;; Hardware stack levels used: 1
  7084 ;; Hardware stack levels required when called: 8
  7085 ;; This function calls:
  7086 ;;		___lwdiv
  7087 ;;		___wmul
  7088 ;; This function is called by:
  7089 ;;		_stop
  7090 ;;		_turnLeft
  7091 ;;		_turnRight
  7092 ;;		_fullSpeedAhead
  7093 ;;		_fullSpeedBackwards
  7094 ;; This function uses a non-reentrant model
  7095 ;;
  7096                           
  7097                           	psect	text33
  7098   0014C4                     __ptext33:
  7099                           	callstack 0
  7100   0014C4                     _setMotorPWM:
  7101                           	callstack 21
  7102   0014C4                     
  7103                           ;dc_motor.c: 64: void setMotorPWM(DC_motor *m);dc_motor.c: 65: {;dc_motor.c: 66:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 68:     if(m->brakemode) {
  7104   0014C4  EE20 F002          	lfsr	2,2
  7105   0014C8  5016               	movf	setMotorPWM@m^0,w,c
  7106   0014CA  26D9               	addwf	fsr2l,f,c
  7107   0014CC  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7108   0014CE  22DA               	addwfc	fsr2h,f,c
  7109   0014D0  50DF               	movf	indf2,w,c
  7110   0014D2  B4D8               	btfsc	status,2,c
  7111   0014D4  EF6E  F00A         	goto	u2011
  7112   0014D8  EF70  F00A         	goto	u2010
  7113   0014DC                     u2011:
  7114   0014DC  EFA4  F00A         	goto	l2757
  7115   0014E0                     u2010:
  7116   0014E0                     
  7117                           ;dc_motor.c: 69:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  7118   0014E0  C016  FFD9         	movff	setMotorPWM@m,fsr2l
  7119   0014E4  C017  FFDA         	movff	setMotorPWM@m+1,fsr2h
  7120   0014E8  50DF               	movf	indf2,w,c
  7121   0014EA  6E09               	movwf	___wmul@multiplier^0,c
  7122   0014EC  6A0A               	clrf	(___wmul@multiplier+1)^0,c
  7123   0014EE  BE09               	btfsc	___wmul@multiplier^0,7,c
  7124   0014F0  060A               	decf	(___wmul@multiplier+1)^0,f,c
  7125   0014F2  EE20 F003          	lfsr	2,3
  7126   0014F6  5016               	movf	setMotorPWM@m^0,w,c
  7127   0014F8  26D9               	addwf	fsr2l,f,c
  7128   0014FA  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7129   0014FC  22DA               	addwfc	fsr2h,f,c
  7130   0014FE  CFDE F00B          	movff	postinc2,___wmul@multiplicand
  7131   001502  CFDD F00C          	movff	postdec2,___wmul@multiplicand+1
  7132   001506  EC81  F014         	call	___wmul	;wreg free
  7133   00150A  C009  F00F         	movff	?___wmul,___lwdiv@dividend
  7134   00150E  C00A  F010         	movff	?___wmul+1,___lwdiv@dividend+1
  7135   001512  0E00               	movlw	0
  7136   001514  6E12               	movwf	(___lwdiv@divisor+1)^0,c
  7137   001516  0E64               	movlw	100
  7138   001518  6E11               	movwf	___lwdiv@divisor^0,c
  7139   00151A  ECEA  F011         	call	___lwdiv	;wreg free
  7140   00151E  EE20 F003          	lfsr	2,3
  7141   001522  5016               	movf	setMotorPWM@m^0,w,c
  7142   001524  26D9               	addwf	fsr2l,f,c
  7143   001526  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7144   001528  22DA               	addwfc	fsr2h,f,c
  7145   00152A  50DF               	movf	indf2,w,c
  7146   00152C  6E18               	movwf	??_setMotorPWM^0,c
  7147   00152E  500F               	movf	?___lwdiv^0,w,c
  7148   001530  5C18               	subwf	??_setMotorPWM^0,w,c
  7149   001532  6E1A               	movwf	setMotorPWM@posDuty^0,c
  7150   001534                     
  7151                           ;dc_motor.c: 70:         negDuty=m->PWMperiod;
  7152   001534  EE20 F003          	lfsr	2,3
  7153   001538  5016               	movf	setMotorPWM@m^0,w,c
  7154   00153A  26D9               	addwf	fsr2l,f,c
  7155   00153C  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7156   00153E  22DA               	addwfc	fsr2h,f,c
  7157   001540  50DF               	movf	indf2,w,c
  7158   001542  6E1B               	movwf	setMotorPWM@negDuty^0,c
  7159                           
  7160                           ;dc_motor.c: 71:     }
  7161   001544  EFC7  F00A         	goto	l2761
  7162   001548                     l2757:
  7163                           
  7164                           ;dc_motor.c: 73:         posDuty=0;
  7165   001548  0E00               	movlw	0
  7166   00154A  6E1A               	movwf	setMotorPWM@posDuty^0,c
  7167   00154C                     
  7168                           ;dc_motor.c: 74:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  7169   00154C  C016  FFD9         	movff	setMotorPWM@m,fsr2l
  7170   001550  C017  FFDA         	movff	setMotorPWM@m+1,fsr2h
  7171   001554  50DF               	movf	indf2,w,c
  7172   001556  6E09               	movwf	___wmul@multiplier^0,c
  7173   001558  6A0A               	clrf	(___wmul@multiplier+1)^0,c
  7174   00155A  BE09               	btfsc	___wmul@multiplier^0,7,c
  7175   00155C  060A               	decf	(___wmul@multiplier+1)^0,f,c
  7176   00155E  EE20 F003          	lfsr	2,3
  7177   001562  5016               	movf	setMotorPWM@m^0,w,c
  7178   001564  26D9               	addwf	fsr2l,f,c
  7179   001566  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7180   001568  22DA               	addwfc	fsr2h,f,c
  7181   00156A  CFDE F00B          	movff	postinc2,___wmul@multiplicand
  7182   00156E  CFDD F00C          	movff	postdec2,___wmul@multiplicand+1
  7183   001572  EC81  F014         	call	___wmul	;wreg free
  7184   001576  C009  F00F         	movff	?___wmul,___lwdiv@dividend
  7185   00157A  C00A  F010         	movff	?___wmul+1,___lwdiv@dividend+1
  7186   00157E  0E00               	movlw	0
  7187   001580  6E12               	movwf	(___lwdiv@divisor+1)^0,c
  7188   001582  0E64               	movlw	100
  7189   001584  6E11               	movwf	___lwdiv@divisor^0,c
  7190   001586  ECEA  F011         	call	___lwdiv	;wreg free
  7191   00158A  500F               	movf	?___lwdiv^0,w,c
  7192   00158C  6E1B               	movwf	setMotorPWM@negDuty^0,c
  7193   00158E                     l2761:
  7194                           
  7195                           ;dc_motor.c: 77:     if (m->direction) {
  7196   00158E  EE20 F001          	lfsr	2,1
  7197   001592  5016               	movf	setMotorPWM@m^0,w,c
  7198   001594  26D9               	addwf	fsr2l,f,c
  7199   001596  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7200   001598  22DA               	addwfc	fsr2h,f,c
  7201   00159A  50DF               	movf	indf2,w,c
  7202   00159C  B4D8               	btfsc	status,2,c
  7203   00159E  EFD3  F00A         	goto	u2021
  7204   0015A2  EFD5  F00A         	goto	u2020
  7205   0015A6                     u2021:
  7206   0015A6  EFF7  F00A         	goto	l2765
  7207   0015AA                     u2020:
  7208   0015AA                     
  7209                           ;dc_motor.c: 78:         *(m->posDutyHighByte)=posDuty;
  7210   0015AA  EE20 F005          	lfsr	2,5
  7211   0015AE  5016               	movf	setMotorPWM@m^0,w,c
  7212   0015B0  26D9               	addwf	fsr2l,f,c
  7213   0015B2  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7214   0015B4  22DA               	addwfc	fsr2h,f,c
  7215   0015B6  CFDE F018          	movff	postinc2,??_setMotorPWM
  7216   0015BA  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  7217   0015BE  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  7218   0015C2  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  7219   0015C6  C01A  FFDF         	movff	setMotorPWM@posDuty,indf2
  7220                           
  7221                           ;dc_motor.c: 79:         *(m->negDutyHighByte)=negDuty;
  7222   0015CA  EE20 F007          	lfsr	2,7
  7223   0015CE  5016               	movf	setMotorPWM@m^0,w,c
  7224   0015D0  26D9               	addwf	fsr2l,f,c
  7225   0015D2  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7226   0015D4  22DA               	addwfc	fsr2h,f,c
  7227   0015D6  CFDE F018          	movff	postinc2,??_setMotorPWM
  7228   0015DA  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  7229   0015DE  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  7230   0015E2  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  7231   0015E6  C01B  FFDF         	movff	setMotorPWM@negDuty,indf2
  7232                           
  7233                           ;dc_motor.c: 80:     } else {
  7234   0015EA  EF17  F00B         	goto	l191
  7235   0015EE                     l2765:
  7236                           
  7237                           ;dc_motor.c: 81:         *(m->posDutyHighByte)=negDuty;
  7238   0015EE  EE20 F005          	lfsr	2,5
  7239   0015F2  5016               	movf	setMotorPWM@m^0,w,c
  7240   0015F4  26D9               	addwf	fsr2l,f,c
  7241   0015F6  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7242   0015F8  22DA               	addwfc	fsr2h,f,c
  7243   0015FA  CFDE F018          	movff	postinc2,??_setMotorPWM
  7244   0015FE  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  7245   001602  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  7246   001606  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  7247   00160A  C01B  FFDF         	movff	setMotorPWM@negDuty,indf2
  7248                           
  7249                           ;dc_motor.c: 82:         *(m->negDutyHighByte)=posDuty;
  7250   00160E  EE20 F007          	lfsr	2,7
  7251   001612  5016               	movf	setMotorPWM@m^0,w,c
  7252   001614  26D9               	addwf	fsr2l,f,c
  7253   001616  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7254   001618  22DA               	addwfc	fsr2h,f,c
  7255   00161A  CFDE F018          	movff	postinc2,??_setMotorPWM
  7256   00161E  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  7257   001622  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  7258   001626  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  7259   00162A  C01A  FFDF         	movff	setMotorPWM@posDuty,indf2
  7260   00162E                     l191:
  7261   00162E  0012               	return		;funcret
  7262   001630                     __end_of_setMotorPWM:
  7263                           	callstack 0
  7264                           
  7265 ;; *************** function ___wmul *****************
  7266 ;; Defined at:
  7267 ;;		line 15 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\Umul16.c"
  7268 ;; Parameters:    Size  Location     Type
  7269 ;;  multiplier      2    8[COMRAM] unsigned int 
  7270 ;;  multiplicand    2   10[COMRAM] unsigned int 
  7271 ;; Auto vars:     Size  Location     Type
  7272 ;;  product         2   12[COMRAM] unsigned int 
  7273 ;; Return value:  Size  Location     Type
  7274 ;;                  2    8[COMRAM] unsigned int 
  7275 ;; Registers used:
  7276 ;;		wreg, status,2, status,0, prodl, prodh
  7277 ;; Tracked objects:
  7278 ;;		On entry : 0/0
  7279 ;;		On exit  : 0/0
  7280 ;;		Unchanged: 0/0
  7281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7282 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7283 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7285 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7286 ;;Total ram usage:        6 bytes
  7287 ;; Hardware stack levels used: 1
  7288 ;; Hardware stack levels required when called: 7
  7289 ;; This function calls:
  7290 ;;		Nothing
  7291 ;; This function is called by:
  7292 ;;		_setMotorPWM
  7293 ;; This function uses a non-reentrant model
  7294 ;;
  7295                           
  7296                           	psect	text34
  7297   002902                     __ptext34:
  7298                           	callstack 0
  7299   002902                     ___wmul:
  7300                           	callstack 21
  7301   002902  5009               	movf	___wmul@multiplier^0,w,c
  7302   002904  020B               	mulwf	___wmul@multiplicand^0,c
  7303   002906  CFF3 F00D          	movff	prodl,___wmul@product
  7304   00290A  CFF4 F00E          	movff	prodh,___wmul@product+1
  7305   00290E  5009               	movf	___wmul@multiplier^0,w,c
  7306   002910  020C               	mulwf	(___wmul@multiplicand+1)^0,c
  7307   002912  50F3               	movf	243,w,c
  7308   002914  260E               	addwf	(___wmul@product+1)^0,f,c
  7309   002916  500A               	movf	(___wmul@multiplier+1)^0,w,c
  7310   002918  020B               	mulwf	___wmul@multiplicand^0,c
  7311   00291A  50F3               	movf	243,w,c
  7312   00291C  260E               	addwf	(___wmul@product+1)^0,f,c
  7313   00291E  C00D  F009         	movff	___wmul@product,?___wmul
  7314   002922  C00E  F00A         	movff	___wmul@product+1,?___wmul+1
  7315   002926  0012               	return		;funcret
  7316   002928                     __end_of___wmul:
  7317                           	callstack 0
  7318                           
  7319 ;; *************** function ___lwdiv *****************
  7320 ;; Defined at:
  7321 ;;		line 7 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\lwdiv.c"
  7322 ;; Parameters:    Size  Location     Type
  7323 ;;  dividend        2   14[COMRAM] unsigned int 
  7324 ;;  divisor         2   16[COMRAM] unsigned int 
  7325 ;; Auto vars:     Size  Location     Type
  7326 ;;  quotient        2   18[COMRAM] unsigned int 
  7327 ;;  counter         1   20[COMRAM] unsigned char 
  7328 ;; Return value:  Size  Location     Type
  7329 ;;                  2   14[COMRAM] unsigned int 
  7330 ;; Registers used:
  7331 ;;		wreg, status,2, status,0
  7332 ;; Tracked objects:
  7333 ;;		On entry : 0/0
  7334 ;;		On exit  : 0/0
  7335 ;;		Unchanged: 0/0
  7336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7337 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7338 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7340 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7341 ;;Total ram usage:        7 bytes
  7342 ;; Hardware stack levels used: 1
  7343 ;; Hardware stack levels required when called: 7
  7344 ;; This function calls:
  7345 ;;		Nothing
  7346 ;; This function is called by:
  7347 ;;		_setMotorPWM
  7348 ;; This function uses a non-reentrant model
  7349 ;;
  7350                           
  7351                           	psect	text35
  7352   0023D4                     __ptext35:
  7353                           	callstack 0
  7354   0023D4                     ___lwdiv:
  7355                           	callstack 21
  7356   0023D4  0E00               	movlw	0
  7357   0023D6  6E14               	movwf	(___lwdiv@quotient+1)^0,c
  7358   0023D8  0E00               	movlw	0
  7359   0023DA  6E13               	movwf	___lwdiv@quotient^0,c
  7360   0023DC  5011               	movf	___lwdiv@divisor^0,w,c
  7361   0023DE  1012               	iorwf	(___lwdiv@divisor+1)^0,w,c
  7362   0023E0  B4D8               	btfsc	status,2,c
  7363   0023E2  EFF5  F011         	goto	u1981
  7364   0023E6  EFF7  F011         	goto	u1980
  7365   0023EA                     u1981:
  7366   0023EA  EF1F  F012         	goto	l1187
  7367   0023EE                     u1980:
  7368   0023EE  0E01               	movlw	1
  7369   0023F0  6E15               	movwf	___lwdiv@counter^0,c
  7370   0023F2  EFFF  F011         	goto	l2737
  7371   0023F6                     l2735:
  7372   0023F6  90D8               	bcf	status,0,c
  7373   0023F8  3611               	rlcf	___lwdiv@divisor^0,f,c
  7374   0023FA  3612               	rlcf	(___lwdiv@divisor+1)^0,f,c
  7375   0023FC  2A15               	incf	___lwdiv@counter^0,f,c
  7376   0023FE                     l2737:
  7377   0023FE  AE12               	btfss	(___lwdiv@divisor+1)^0,7,c
  7378   002400  EF04  F012         	goto	u1991
  7379   002404  EF06  F012         	goto	u1990
  7380   002408                     u1991:
  7381   002408  EFFB  F011         	goto	l2735
  7382   00240C                     u1990:
  7383   00240C                     l2739:
  7384   00240C  90D8               	bcf	status,0,c
  7385   00240E  3613               	rlcf	___lwdiv@quotient^0,f,c
  7386   002410  3614               	rlcf	(___lwdiv@quotient+1)^0,f,c
  7387   002412  5011               	movf	___lwdiv@divisor^0,w,c
  7388   002414  5C0F               	subwf	___lwdiv@dividend^0,w,c
  7389   002416  5012               	movf	(___lwdiv@divisor+1)^0,w,c
  7390   002418  5810               	subwfb	(___lwdiv@dividend+1)^0,w,c
  7391   00241A  A0D8               	btfss	status,0,c
  7392   00241C  EF12  F012         	goto	u2001
  7393   002420  EF14  F012         	goto	u2000
  7394   002424                     u2001:
  7395   002424  EF19  F012         	goto	l2747
  7396   002428                     u2000:
  7397   002428  5011               	movf	___lwdiv@divisor^0,w,c
  7398   00242A  5E0F               	subwf	___lwdiv@dividend^0,f,c
  7399   00242C  5012               	movf	(___lwdiv@divisor+1)^0,w,c
  7400   00242E  5A10               	subwfb	(___lwdiv@dividend+1)^0,f,c
  7401   002430  8013               	bsf	___lwdiv@quotient^0,0,c
  7402   002432                     l2747:
  7403   002432  90D8               	bcf	status,0,c
  7404   002434  3212               	rrcf	(___lwdiv@divisor+1)^0,f,c
  7405   002436  3211               	rrcf	___lwdiv@divisor^0,f,c
  7406   002438  2E15               	decfsz	___lwdiv@counter^0,f,c
  7407   00243A  EF06  F012         	goto	l2739
  7408   00243E                     l1187:
  7409   00243E  C013  F00F         	movff	___lwdiv@quotient,?___lwdiv
  7410   002442  C014  F010         	movff	___lwdiv@quotient+1,?___lwdiv+1
  7411   002446  0012               	return		;funcret
  7412   002448                     __end_of___lwdiv:
  7413                           	callstack 0
  7414                           
  7415 ;; *************** function _Update_RGBC *****************
  7416 ;; Defined at:
  7417 ;;		line 90 in file "color.c"
  7418 ;; Parameters:    Size  Location     Type
  7419 ;;  tempval         2   19[COMRAM] PTR struct RGB_val
  7420 ;;		 -> main@initial_color(8), 
  7421 ;; Auto vars:     Size  Location     Type
  7422 ;;		None
  7423 ;; Return value:  Size  Location     Type
  7424 ;;                  1    wreg      void 
  7425 ;; Registers used:
  7426 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7427 ;; Tracked objects:
  7428 ;;		On entry : 0/0
  7429 ;;		On exit  : 0/0
  7430 ;;		Unchanged: 0/0
  7431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7432 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7435 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7436 ;;Total ram usage:        2 bytes
  7437 ;; Hardware stack levels used: 1
  7438 ;; Hardware stack levels required when called: 10
  7439 ;; This function calls:
  7440 ;;		_color_read_Blue
  7441 ;;		_color_read_Clear
  7442 ;;		_color_read_Green
  7443 ;;		_color_read_Red
  7444 ;; This function is called by:
  7445 ;;		_main
  7446 ;; This function uses a non-reentrant model
  7447 ;;
  7448                           
  7449                           	psect	text36
  7450   002524                     __ptext36:
  7451                           	callstack 0
  7452   002524                     _Update_RGBC:
  7453                           	callstack 20
  7454   002524                     
  7455                           ;color.c: 92:     tempval->R = color_read_Red();
  7456   002524  ECC1  F012         	call	_color_read_Red	;wreg free
  7457   002528  C014  FFD9         	movff	Update_RGBC@tempval,fsr2l
  7458   00252C  C015  FFDA         	movff	Update_RGBC@tempval+1,fsr2h
  7459   002530  C00D  FFDE         	movff	?_color_read_Red,postinc2
  7460   002534  C00E  FFDD         	movff	?_color_read_Red+1,postdec2
  7461                           
  7462                           ;color.c: 93:     tempval->G = color_read_Green();
  7463   002538  ECE9  F012         	call	_color_read_Green	;wreg free
  7464   00253C  EE20 F002          	lfsr	2,2
  7465   002540  5014               	movf	Update_RGBC@tempval^0,w,c
  7466   002542  26D9               	addwf	fsr2l,f,c
  7467   002544  5015               	movf	(Update_RGBC@tempval+1)^0,w,c
  7468   002546  22DA               	addwfc	fsr2h,f,c
  7469   002548  C00D  FFDE         	movff	?_color_read_Green,postinc2
  7470   00254C  C00E  FFDD         	movff	?_color_read_Green+1,postdec2
  7471                           
  7472                           ;color.c: 94:     tempval->B = color_read_Blue();
  7473   002550  EC39  F013         	call	_color_read_Blue	;wreg free
  7474   002554  EE20 F004          	lfsr	2,4
  7475   002558  5014               	movf	Update_RGBC@tempval^0,w,c
  7476   00255A  26D9               	addwf	fsr2l,f,c
  7477   00255C  5015               	movf	(Update_RGBC@tempval+1)^0,w,c
  7478   00255E  22DA               	addwfc	fsr2h,f,c
  7479   002560  C00D  FFDE         	movff	?_color_read_Blue,postinc2
  7480   002564  C00E  FFDD         	movff	?_color_read_Blue+1,postdec2
  7481                           
  7482                           ;color.c: 95:     tempval->C = color_read_Clear();
  7483   002568  EC11  F013         	call	_color_read_Clear	;wreg free
  7484   00256C  EE20 F006          	lfsr	2,6
  7485   002570  5014               	movf	Update_RGBC@tempval^0,w,c
  7486   002572  26D9               	addwf	fsr2l,f,c
  7487   002574  5015               	movf	(Update_RGBC@tempval+1)^0,w,c
  7488   002576  22DA               	addwfc	fsr2h,f,c
  7489   002578  C00D  FFDE         	movff	?_color_read_Clear,postinc2
  7490   00257C  C00E  FFDD         	movff	?_color_read_Clear+1,postdec2
  7491   002580  0012               	return		;funcret
  7492   002582                     __end_of_Update_RGBC:
  7493                           	callstack 0
  7494                           
  7495 ;; *************** function _color_read_Red *****************
  7496 ;; Defined at:
  7497 ;;		line 32 in file "color.c"
  7498 ;; Parameters:    Size  Location     Type
  7499 ;;		None
  7500 ;; Auto vars:     Size  Location     Type
  7501 ;;  tmp             2   17[COMRAM] unsigned int 
  7502 ;; Return value:  Size  Location     Type
  7503 ;;                  2   12[COMRAM] unsigned int 
  7504 ;; Registers used:
  7505 ;;		wreg, status,2, status,0, cstack
  7506 ;; Tracked objects:
  7507 ;;		On entry : 0/0
  7508 ;;		On exit  : 0/0
  7509 ;;		Unchanged: 0/0
  7510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7511 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7512 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7513 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7514 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7515 ;;Total ram usage:        7 bytes
  7516 ;; Hardware stack levels used: 1
  7517 ;; Hardware stack levels required when called: 9
  7518 ;; This function calls:
  7519 ;;		_I2C_2_Master_Read
  7520 ;;		_I2C_2_Master_RepStart
  7521 ;;		_I2C_2_Master_Start
  7522 ;;		_I2C_2_Master_Stop
  7523 ;;		_I2C_2_Master_Write
  7524 ;; This function is called by:
  7525 ;;		_Update_RGBC
  7526 ;; This function uses a non-reentrant model
  7527 ;;
  7528                           
  7529                           	psect	text37
  7530   002582                     __ptext37:
  7531                           	callstack 0
  7532   002582                     _color_read_Red:
  7533                           	callstack 20
  7534   002582                     
  7535                           ;color.c: 34:  unsigned int tmp;;color.c: 35:  I2C_2_Master_Start();
  7536   002582  EC3E  F015         	call	_I2C_2_Master_Start	;wreg free
  7537                           
  7538                           ;color.c: 36:  I2C_2_Master_Write(0x52 | 0x00);
  7539   002586  0E52               	movlw	82
  7540   002588  EC28  F015         	call	_I2C_2_Master_Write
  7541                           
  7542                           ;color.c: 37:  I2C_2_Master_Write(0xA0 | 0x16);
  7543   00258C  0EB6               	movlw	182
  7544   00258E  EC28  F015         	call	_I2C_2_Master_Write
  7545                           
  7546                           ;color.c: 38:  I2C_2_Master_RepStart();
  7547   002592  EC34  F015         	call	_I2C_2_Master_RepStart	;wreg free
  7548                           
  7549                           ;color.c: 39:  I2C_2_Master_Write(0x52 | 0x01);
  7550   002596  0E53               	movlw	83
  7551   002598  EC28  F015         	call	_I2C_2_Master_Write
  7552                           
  7553                           ;color.c: 40:  tmp=I2C_2_Master_Read(1);
  7554   00259C  0E01               	movlw	1
  7555   00259E  ECD4  F013         	call	_I2C_2_Master_Read
  7556   0025A2  6E0F               	movwf	??_color_read_Red^0,c
  7557   0025A4  500F               	movf	??_color_read_Red^0,w,c
  7558   0025A6  6E12               	movwf	color_read_Red@tmp^0,c
  7559   0025A8  6A13               	clrf	(color_read_Red@tmp+1)^0,c
  7560                           
  7561                           ;color.c: 41:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7562   0025AA  0E00               	movlw	0
  7563   0025AC  ECD4  F013         	call	_I2C_2_Master_Read
  7564   0025B0  6E0F               	movwf	??_color_read_Red^0,c
  7565   0025B2  500F               	movf	??_color_read_Red^0,w,c
  7566   0025B4  6E11               	movwf	(??_color_read_Red+2)^0,c
  7567   0025B6  6A10               	clrf	(??_color_read_Red+1)^0,c
  7568   0025B8  5012               	movf	color_read_Red@tmp^0,w,c
  7569   0025BA  1010               	iorwf	(??_color_read_Red+1)^0,w,c
  7570   0025BC  6E12               	movwf	color_read_Red@tmp^0,c
  7571   0025BE  5013               	movf	(color_read_Red@tmp+1)^0,w,c
  7572   0025C0  1011               	iorwf	(??_color_read_Red+2)^0,w,c
  7573   0025C2  6E13               	movwf	(color_read_Red@tmp+1)^0,c
  7574                           
  7575                           ;color.c: 42:  I2C_2_Master_Stop();
  7576   0025C4  EC39  F015         	call	_I2C_2_Master_Stop	;wreg free
  7577   0025C8                     
  7578                           ;color.c: 43:  return tmp;
  7579   0025C8  C012  F00D         	movff	color_read_Red@tmp,?_color_read_Red
  7580   0025CC  C013  F00E         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  7581   0025D0  0012               	return		;funcret
  7582   0025D2                     __end_of_color_read_Red:
  7583                           	callstack 0
  7584                           
  7585 ;; *************** function _color_read_Green *****************
  7586 ;; Defined at:
  7587 ;;		line 46 in file "color.c"
  7588 ;; Parameters:    Size  Location     Type
  7589 ;;		None
  7590 ;; Auto vars:     Size  Location     Type
  7591 ;;  tmp             2   17[COMRAM] unsigned int 
  7592 ;; Return value:  Size  Location     Type
  7593 ;;                  2   12[COMRAM] unsigned int 
  7594 ;; Registers used:
  7595 ;;		wreg, status,2, status,0, cstack
  7596 ;; Tracked objects:
  7597 ;;		On entry : 0/0
  7598 ;;		On exit  : 0/0
  7599 ;;		Unchanged: 0/0
  7600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7601 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7602 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7603 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7604 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7605 ;;Total ram usage:        7 bytes
  7606 ;; Hardware stack levels used: 1
  7607 ;; Hardware stack levels required when called: 9
  7608 ;; This function calls:
  7609 ;;		_I2C_2_Master_Read
  7610 ;;		_I2C_2_Master_RepStart
  7611 ;;		_I2C_2_Master_Start
  7612 ;;		_I2C_2_Master_Stop
  7613 ;;		_I2C_2_Master_Write
  7614 ;; This function is called by:
  7615 ;;		_Update_RGBC
  7616 ;; This function uses a non-reentrant model
  7617 ;;
  7618                           
  7619                           	psect	text38
  7620   0025D2                     __ptext38:
  7621                           	callstack 0
  7622   0025D2                     _color_read_Green:
  7623                           	callstack 20
  7624   0025D2                     
  7625                           ;color.c: 48:  unsigned int tmp;;color.c: 49:  I2C_2_Master_Start();
  7626   0025D2  EC3E  F015         	call	_I2C_2_Master_Start	;wreg free
  7627                           
  7628                           ;color.c: 50:  I2C_2_Master_Write(0x52 | 0x00);
  7629   0025D6  0E52               	movlw	82
  7630   0025D8  EC28  F015         	call	_I2C_2_Master_Write
  7631                           
  7632                           ;color.c: 51:  I2C_2_Master_Write(0xA0 | 0x18);
  7633   0025DC  0EB8               	movlw	184
  7634   0025DE  EC28  F015         	call	_I2C_2_Master_Write
  7635                           
  7636                           ;color.c: 52:  I2C_2_Master_RepStart();
  7637   0025E2  EC34  F015         	call	_I2C_2_Master_RepStart	;wreg free
  7638                           
  7639                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x01);
  7640   0025E6  0E53               	movlw	83
  7641   0025E8  EC28  F015         	call	_I2C_2_Master_Write
  7642                           
  7643                           ;color.c: 54:  tmp=I2C_2_Master_Read(1);
  7644   0025EC  0E01               	movlw	1
  7645   0025EE  ECD4  F013         	call	_I2C_2_Master_Read
  7646   0025F2  6E0F               	movwf	??_color_read_Green^0,c
  7647   0025F4  500F               	movf	??_color_read_Green^0,w,c
  7648   0025F6  6E12               	movwf	color_read_Green@tmp^0,c
  7649   0025F8  6A13               	clrf	(color_read_Green@tmp+1)^0,c
  7650                           
  7651                           ;color.c: 55:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7652   0025FA  0E00               	movlw	0
  7653   0025FC  ECD4  F013         	call	_I2C_2_Master_Read
  7654   002600  6E0F               	movwf	??_color_read_Green^0,c
  7655   002602  500F               	movf	??_color_read_Green^0,w,c
  7656   002604  6E11               	movwf	(??_color_read_Green+2)^0,c
  7657   002606  6A10               	clrf	(??_color_read_Green+1)^0,c
  7658   002608  5012               	movf	color_read_Green@tmp^0,w,c
  7659   00260A  1010               	iorwf	(??_color_read_Green+1)^0,w,c
  7660   00260C  6E12               	movwf	color_read_Green@tmp^0,c
  7661   00260E  5013               	movf	(color_read_Green@tmp+1)^0,w,c
  7662   002610  1011               	iorwf	(??_color_read_Green+2)^0,w,c
  7663   002612  6E13               	movwf	(color_read_Green@tmp+1)^0,c
  7664                           
  7665                           ;color.c: 56:  I2C_2_Master_Stop();
  7666   002614  EC39  F015         	call	_I2C_2_Master_Stop	;wreg free
  7667   002618                     
  7668                           ;color.c: 57:  return tmp;
  7669   002618  C012  F00D         	movff	color_read_Green@tmp,?_color_read_Green
  7670   00261C  C013  F00E         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  7671   002620  0012               	return		;funcret
  7672   002622                     __end_of_color_read_Green:
  7673                           	callstack 0
  7674                           
  7675 ;; *************** function _color_read_Clear *****************
  7676 ;; Defined at:
  7677 ;;		line 74 in file "color.c"
  7678 ;; Parameters:    Size  Location     Type
  7679 ;;		None
  7680 ;; Auto vars:     Size  Location     Type
  7681 ;;  tmp             2   17[COMRAM] unsigned int 
  7682 ;; Return value:  Size  Location     Type
  7683 ;;                  2   12[COMRAM] unsigned int 
  7684 ;; Registers used:
  7685 ;;		wreg, status,2, status,0, cstack
  7686 ;; Tracked objects:
  7687 ;;		On entry : 0/0
  7688 ;;		On exit  : 0/0
  7689 ;;		Unchanged: 0/0
  7690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7691 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7692 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7693 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7694 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7695 ;;Total ram usage:        7 bytes
  7696 ;; Hardware stack levels used: 1
  7697 ;; Hardware stack levels required when called: 9
  7698 ;; This function calls:
  7699 ;;		_I2C_2_Master_Read
  7700 ;;		_I2C_2_Master_RepStart
  7701 ;;		_I2C_2_Master_Start
  7702 ;;		_I2C_2_Master_Stop
  7703 ;;		_I2C_2_Master_Write
  7704 ;; This function is called by:
  7705 ;;		_Update_RGBC
  7706 ;; This function uses a non-reentrant model
  7707 ;;
  7708                           
  7709                           	psect	text39
  7710   002622                     __ptext39:
  7711                           	callstack 0
  7712   002622                     _color_read_Clear:
  7713                           	callstack 20
  7714   002622                     
  7715                           ;color.c: 76:  unsigned int tmp;;color.c: 77:  I2C_2_Master_Start();
  7716   002622  EC3E  F015         	call	_I2C_2_Master_Start	;wreg free
  7717                           
  7718                           ;color.c: 78:  I2C_2_Master_Write(0x52 | 0x00);
  7719   002626  0E52               	movlw	82
  7720   002628  EC28  F015         	call	_I2C_2_Master_Write
  7721                           
  7722                           ;color.c: 79:  I2C_2_Master_Write(0xA0 | 0x14);
  7723   00262C  0EB4               	movlw	180
  7724   00262E  EC28  F015         	call	_I2C_2_Master_Write
  7725                           
  7726                           ;color.c: 80:  I2C_2_Master_RepStart();
  7727   002632  EC34  F015         	call	_I2C_2_Master_RepStart	;wreg free
  7728                           
  7729                           ;color.c: 81:  I2C_2_Master_Write(0x52 | 0x01);
  7730   002636  0E53               	movlw	83
  7731   002638  EC28  F015         	call	_I2C_2_Master_Write
  7732                           
  7733                           ;color.c: 82:  tmp=I2C_2_Master_Read(1);
  7734   00263C  0E01               	movlw	1
  7735   00263E  ECD4  F013         	call	_I2C_2_Master_Read
  7736   002642  6E0F               	movwf	??_color_read_Clear^0,c
  7737   002644  500F               	movf	??_color_read_Clear^0,w,c
  7738   002646  6E12               	movwf	color_read_Clear@tmp^0,c
  7739   002648  6A13               	clrf	(color_read_Clear@tmp+1)^0,c
  7740                           
  7741                           ;color.c: 83:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7742   00264A  0E00               	movlw	0
  7743   00264C  ECD4  F013         	call	_I2C_2_Master_Read
  7744   002650  6E0F               	movwf	??_color_read_Clear^0,c
  7745   002652  500F               	movf	??_color_read_Clear^0,w,c
  7746   002654  6E11               	movwf	(??_color_read_Clear+2)^0,c
  7747   002656  6A10               	clrf	(??_color_read_Clear+1)^0,c
  7748   002658  5012               	movf	color_read_Clear@tmp^0,w,c
  7749   00265A  1010               	iorwf	(??_color_read_Clear+1)^0,w,c
  7750   00265C  6E12               	movwf	color_read_Clear@tmp^0,c
  7751   00265E  5013               	movf	(color_read_Clear@tmp+1)^0,w,c
  7752   002660  1011               	iorwf	(??_color_read_Clear+2)^0,w,c
  7753   002662  6E13               	movwf	(color_read_Clear@tmp+1)^0,c
  7754                           
  7755                           ;color.c: 84:  I2C_2_Master_Stop();
  7756   002664  EC39  F015         	call	_I2C_2_Master_Stop	;wreg free
  7757   002668                     
  7758                           ;color.c: 85:  return tmp;
  7759   002668  C012  F00D         	movff	color_read_Clear@tmp,?_color_read_Clear
  7760   00266C  C013  F00E         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  7761   002670  0012               	return		;funcret
  7762   002672                     __end_of_color_read_Clear:
  7763                           	callstack 0
  7764                           
  7765 ;; *************** function _color_read_Blue *****************
  7766 ;; Defined at:
  7767 ;;		line 60 in file "color.c"
  7768 ;; Parameters:    Size  Location     Type
  7769 ;;		None
  7770 ;; Auto vars:     Size  Location     Type
  7771 ;;  tmp             2   17[COMRAM] unsigned int 
  7772 ;; Return value:  Size  Location     Type
  7773 ;;                  2   12[COMRAM] unsigned int 
  7774 ;; Registers used:
  7775 ;;		wreg, status,2, status,0, cstack
  7776 ;; Tracked objects:
  7777 ;;		On entry : 0/0
  7778 ;;		On exit  : 0/0
  7779 ;;		Unchanged: 0/0
  7780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7781 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7782 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7783 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7784 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7785 ;;Total ram usage:        7 bytes
  7786 ;; Hardware stack levels used: 1
  7787 ;; Hardware stack levels required when called: 9
  7788 ;; This function calls:
  7789 ;;		_I2C_2_Master_Read
  7790 ;;		_I2C_2_Master_RepStart
  7791 ;;		_I2C_2_Master_Start
  7792 ;;		_I2C_2_Master_Stop
  7793 ;;		_I2C_2_Master_Write
  7794 ;; This function is called by:
  7795 ;;		_Update_RGBC
  7796 ;; This function uses a non-reentrant model
  7797 ;;
  7798                           
  7799                           	psect	text40
  7800   002672                     __ptext40:
  7801                           	callstack 0
  7802   002672                     _color_read_Blue:
  7803                           	callstack 20
  7804   002672                     
  7805                           ;color.c: 62:  unsigned int tmp;;color.c: 63:  I2C_2_Master_Start();
  7806   002672  EC3E  F015         	call	_I2C_2_Master_Start	;wreg free
  7807                           
  7808                           ;color.c: 64:  I2C_2_Master_Write(0x52 | 0x00);
  7809   002676  0E52               	movlw	82
  7810   002678  EC28  F015         	call	_I2C_2_Master_Write
  7811                           
  7812                           ;color.c: 65:  I2C_2_Master_Write(0xA0 | 0x1A);
  7813   00267C  0EBA               	movlw	186
  7814   00267E  EC28  F015         	call	_I2C_2_Master_Write
  7815                           
  7816                           ;color.c: 66:  I2C_2_Master_RepStart();
  7817   002682  EC34  F015         	call	_I2C_2_Master_RepStart	;wreg free
  7818                           
  7819                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x01);
  7820   002686  0E53               	movlw	83
  7821   002688  EC28  F015         	call	_I2C_2_Master_Write
  7822                           
  7823                           ;color.c: 68:  tmp=I2C_2_Master_Read(1);
  7824   00268C  0E01               	movlw	1
  7825   00268E  ECD4  F013         	call	_I2C_2_Master_Read
  7826   002692  6E0F               	movwf	??_color_read_Blue^0,c
  7827   002694  500F               	movf	??_color_read_Blue^0,w,c
  7828   002696  6E12               	movwf	color_read_Blue@tmp^0,c
  7829   002698  6A13               	clrf	(color_read_Blue@tmp+1)^0,c
  7830                           
  7831                           ;color.c: 69:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7832   00269A  0E00               	movlw	0
  7833   00269C  ECD4  F013         	call	_I2C_2_Master_Read
  7834   0026A0  6E0F               	movwf	??_color_read_Blue^0,c
  7835   0026A2  500F               	movf	??_color_read_Blue^0,w,c
  7836   0026A4  6E11               	movwf	(??_color_read_Blue+2)^0,c
  7837   0026A6  6A10               	clrf	(??_color_read_Blue+1)^0,c
  7838   0026A8  5012               	movf	color_read_Blue@tmp^0,w,c
  7839   0026AA  1010               	iorwf	(??_color_read_Blue+1)^0,w,c
  7840   0026AC  6E12               	movwf	color_read_Blue@tmp^0,c
  7841   0026AE  5013               	movf	(color_read_Blue@tmp+1)^0,w,c
  7842   0026B0  1011               	iorwf	(??_color_read_Blue+2)^0,w,c
  7843   0026B2  6E13               	movwf	(color_read_Blue@tmp+1)^0,c
  7844                           
  7845                           ;color.c: 70:  I2C_2_Master_Stop();
  7846   0026B4  EC39  F015         	call	_I2C_2_Master_Stop	;wreg free
  7847   0026B8                     
  7848                           ;color.c: 71:  return tmp;
  7849   0026B8  C012  F00D         	movff	color_read_Blue@tmp,?_color_read_Blue
  7850   0026BC  C013  F00E         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  7851   0026C0  0012               	return		;funcret
  7852   0026C2                     __end_of_color_read_Blue:
  7853                           	callstack 0
  7854                           
  7855 ;; *************** function _I2C_2_Master_RepStart *****************
  7856 ;; Defined at:
  7857 ;;		line 33 in file "i2c.c"
  7858 ;; Parameters:    Size  Location     Type
  7859 ;;		None
  7860 ;; Auto vars:     Size  Location     Type
  7861 ;;		None
  7862 ;; Return value:  Size  Location     Type
  7863 ;;                  1    wreg      void 
  7864 ;; Registers used:
  7865 ;;		wreg, status,2, status,0, cstack
  7866 ;; Tracked objects:
  7867 ;;		On entry : 0/0
  7868 ;;		On exit  : 0/0
  7869 ;;		Unchanged: 0/0
  7870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7874 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7875 ;;Total ram usage:        0 bytes
  7876 ;; Hardware stack levels used: 1
  7877 ;; Hardware stack levels required when called: 8
  7878 ;; This function calls:
  7879 ;;		_I2C_2_Master_Idle
  7880 ;; This function is called by:
  7881 ;;		_color_read_Red
  7882 ;;		_color_read_Green
  7883 ;;		_color_read_Blue
  7884 ;;		_color_read_Clear
  7885 ;; This function uses a non-reentrant model
  7886 ;;
  7887                           
  7888                           	psect	text41
  7889   002A68                     __ptext41:
  7890                           	callstack 0
  7891   002A68                     _I2C_2_Master_RepStart:
  7892                           	callstack 20
  7893   002A68                     
  7894                           ;i2c.c: 35:   I2C_2_Master_Idle();
  7895   002A68  EC59  F014         	call	_I2C_2_Master_Idle	;wreg free
  7896   002A6C                     
  7897                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  7898   002A6C  010E               	movlb	14	; () banked
  7899   002A6E  83DA               	bsf	218,1,b	;volatile
  7900   002A70                     
  7901                           ; BSR set to: 14
  7902   002A70  0012               	return		;funcret
  7903   002A72                     __end_of_I2C_2_Master_RepStart:
  7904                           	callstack 0
  7905                           
  7906 ;; *************** function _I2C_2_Master_Read *****************
  7907 ;; Defined at:
  7908 ;;		line 51 in file "i2c.c"
  7909 ;; Parameters:    Size  Location     Type
  7910 ;;  ack             1    wreg     unsigned char 
  7911 ;; Auto vars:     Size  Location     Type
  7912 ;;  ack             1   10[COMRAM] unsigned char 
  7913 ;;  tmp             1   11[COMRAM] unsigned char 
  7914 ;; Return value:  Size  Location     Type
  7915 ;;                  1    wreg      unsigned char 
  7916 ;; Registers used:
  7917 ;;		wreg, status,2, status,0, cstack
  7918 ;; Tracked objects:
  7919 ;;		On entry : 0/0
  7920 ;;		On exit  : 0/0
  7921 ;;		Unchanged: 0/0
  7922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7924 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7925 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7926 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7927 ;;Total ram usage:        3 bytes
  7928 ;; Hardware stack levels used: 1
  7929 ;; Hardware stack levels required when called: 8
  7930 ;; This function calls:
  7931 ;;		_I2C_2_Master_Idle
  7932 ;; This function is called by:
  7933 ;;		_color_read_Red
  7934 ;;		_color_read_Green
  7935 ;;		_color_read_Blue
  7936 ;;		_color_read_Clear
  7937 ;; This function uses a non-reentrant model
  7938 ;;
  7939                           
  7940                           	psect	text42
  7941   0027A8                     __ptext42:
  7942                           	callstack 0
  7943   0027A8                     _I2C_2_Master_Read:
  7944                           	callstack 20
  7945                           
  7946                           ; BSR set to: 14
  7947                           ;incstack = 0
  7948                           ;I2C_2_Master_Read@ack stored from wreg
  7949   0027A8  6E0B               	movwf	I2C_2_Master_Read@ack^0,c
  7950   0027AA                     
  7951                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  7952   0027AA  EC59  F014         	call	_I2C_2_Master_Idle	;wreg free
  7953   0027AE                     
  7954                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  7955   0027AE  010E               	movlb	14	; () banked
  7956   0027B0  87DA               	bsf	218,3,b	;volatile
  7957                           
  7958                           ;i2c.c: 56:   I2C_2_Master_Idle();
  7959   0027B2  EC59  F014         	call	_I2C_2_Master_Idle	;wreg free
  7960   0027B6                     
  7961                           ;i2c.c: 57:   tmp = SSP2BUF;
  7962   0027B6  CED5 F00C          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  7963                           
  7964                           ;i2c.c: 58:   I2C_2_Master_Idle();
  7965   0027BA  EC59  F014         	call	_I2C_2_Master_Idle	;wreg free
  7966   0027BE                     
  7967                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  7968   0027BE  500B               	movf	I2C_2_Master_Read@ack^0,w,c
  7969   0027C0  B4D8               	btfsc	status,2,c
  7970   0027C2  EFE5  F013         	goto	u2351
  7971   0027C6  EFE9  F013         	goto	u2350
  7972   0027CA                     u2351:
  7973   0027CA  6A0A               	clrf	??_I2C_2_Master_Read^0,c
  7974   0027CC  2A0A               	incf	??_I2C_2_Master_Read^0,f,c
  7975   0027CE  EFEA  F013         	goto	u2368
  7976   0027D2                     u2350:
  7977   0027D2  6A0A               	clrf	??_I2C_2_Master_Read^0,c
  7978   0027D4                     u2368:
  7979   0027D4  3A0A               	swapf	??_I2C_2_Master_Read^0,f,c
  7980   0027D6  460A               	rlncf	??_I2C_2_Master_Read^0,f,c
  7981   0027D8  010E               	movlb	14	; () banked
  7982   0027DA  51DA               	movf	218,w,b	;volatile
  7983   0027DC  180A               	xorwf	??_I2C_2_Master_Read^0,w,c
  7984   0027DE  0BDF               	andlw	-33
  7985   0027E0  180A               	xorwf	??_I2C_2_Master_Read^0,w,c
  7986   0027E2  6FDA               	movwf	218,b	;volatile
  7987   0027E4                     
  7988                           ; BSR set to: 14
  7989                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  7990   0027E4  89DA               	bsf	218,4,b	;volatile
  7991   0027E6                     
  7992                           ; BSR set to: 14
  7993                           ;i2c.c: 61:   return tmp;
  7994   0027E6  500C               	movf	I2C_2_Master_Read@tmp^0,w,c
  7995   0027E8                     
  7996                           ; BSR set to: 14
  7997   0027E8  0012               	return		;funcret
  7998   0027EA                     __end_of_I2C_2_Master_Read:
  7999                           	callstack 0
  8000                           
  8001 ;; *************** function _Timer0_init *****************
  8002 ;; Defined at:
  8003 ;;		line 7 in file "timers.c"
  8004 ;; Parameters:    Size  Location     Type
  8005 ;;		None
  8006 ;; Auto vars:     Size  Location     Type
  8007 ;;		None
  8008 ;; Return value:  Size  Location     Type
  8009 ;;                  1    wreg      void 
  8010 ;; Registers used:
  8011 ;;		wreg, status,2
  8012 ;; Tracked objects:
  8013 ;;		On entry : 0/0
  8014 ;;		On exit  : 0/0
  8015 ;;		Unchanged: 0/0
  8016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8020 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8021 ;;Total ram usage:        0 bytes
  8022 ;; Hardware stack levels used: 1
  8023 ;; Hardware stack levels required when called: 7
  8024 ;; This function calls:
  8025 ;;		Nothing
  8026 ;; This function is called by:
  8027 ;;		_main
  8028 ;; This function uses a non-reentrant model
  8029 ;;
  8030                           
  8031                           	psect	text43
  8032   00296E                     __ptext43:
  8033                           	callstack 0
  8034   00296E                     _Timer0_init:
  8035                           	callstack 23
  8036   00296E                     
  8037                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  8038   00296E  50D6               	movf	214,w,c	;volatile
  8039   002970  0B1F               	andlw	-225
  8040   002972  0940               	iorlw	64
  8041   002974  6ED6               	movwf	214,c	;volatile
  8042   002976                     
  8043                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  8044   002976  88D6               	bsf	214,4,c	;volatile
  8045                           
  8046                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1000;
  8047   002978  50D6               	movf	214,w,c	;volatile
  8048   00297A  0BF0               	andlw	-16
  8049   00297C  0908               	iorlw	8
  8050   00297E  6ED6               	movwf	214,c	;volatile
  8051   002980                     
  8052                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
  8053   002980  88D5               	bsf	213,4,c	;volatile
  8054                           
  8055                           ;timers.c: 15:     TMR0H = 0b11000010;
  8056   002982  0EC2               	movlw	194
  8057   002984  6ED4               	movwf	212,c	;volatile
  8058                           
  8059                           ;timers.c: 16:     TMR0L = 0b11110110;
  8060   002986  0EF6               	movlw	246
  8061   002988  6ED3               	movwf	211,c	;volatile
  8062   00298A                     
  8063                           ;timers.c: 17:     T0CON0bits.T0EN=1;
  8064   00298A  8ED5               	bsf	213,7,c	;volatile
  8065   00298C  0012               	return		;funcret
  8066   00298E                     __end_of_Timer0_init:
  8067                           	callstack 0
  8068                           
  8069 ;; *************** function _LED_init *****************
  8070 ;; Defined at:
  8071 ;;		line 7 in file "LED_Buttons.c"
  8072 ;; Parameters:    Size  Location     Type
  8073 ;;		None
  8074 ;; Auto vars:     Size  Location     Type
  8075 ;;		None
  8076 ;; Return value:  Size  Location     Type
  8077 ;;                  1    wreg      void 
  8078 ;; Registers used:
  8079 ;;		None
  8080 ;; Tracked objects:
  8081 ;;		On entry : 0/0
  8082 ;;		On exit  : 0/0
  8083 ;;		Unchanged: 0/0
  8084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8089 ;;Total ram usage:        0 bytes
  8090 ;; Hardware stack levels used: 1
  8091 ;; Hardware stack levels required when called: 7
  8092 ;; This function calls:
  8093 ;;		Nothing
  8094 ;; This function is called by:
  8095 ;;		_main
  8096 ;; This function uses a non-reentrant model
  8097 ;;
  8098                           
  8099                           	psect	text44
  8100   002A40                     __ptext44:
  8101                           	callstack 0
  8102   002A40                     _LED_init:
  8103                           	callstack 23
  8104   002A40                     
  8105                           ;LED_Buttons.c: 8:     TRISGbits.TRISG1 = 0;
  8106   002A40  9287               	bcf	135,1,c	;volatile
  8107                           
  8108                           ;LED_Buttons.c: 9:     TRISAbits.TRISA4 = 0;
  8109   002A42  9881               	bcf	129,4,c	;volatile
  8110                           
  8111                           ;LED_Buttons.c: 10:     TRISFbits.TRISF7 = 0;
  8112   002A44  9E86               	bcf	134,7,c	;volatile
  8113                           
  8114                           ;LED_Buttons.c: 12:     LATHbits.LATH3 = 0;
  8115   002A46  9680               	bcf	128,3,c	;volatile
  8116                           
  8117                           ;LED_Buttons.c: 13:     TRISHbits.TRISH3 = 0;
  8118   002A48  9688               	bcf	136,3,c	;volatile
  8119                           
  8120                           ;LED_Buttons.c: 15:     LATDbits.LATD7 = 0;
  8121   002A4A  9E7C               	bcf	124,7,c	;volatile
  8122                           
  8123                           ;LED_Buttons.c: 16:     TRISDbits.TRISD7 = 0;
  8124   002A4C  9E84               	bcf	132,7,c	;volatile
  8125   002A4E  0012               	return		;funcret
  8126   002A50                     __end_of_LED_init:
  8127                           	callstack 0
  8128                           
  8129 ;; *************** function _Interrupts_init *****************
  8130 ;; Defined at:
  8131 ;;		line 12 in file "interrupts.c"
  8132 ;; Parameters:    Size  Location     Type
  8133 ;;		None
  8134 ;; Auto vars:     Size  Location     Type
  8135 ;;		None
  8136 ;; Return value:  Size  Location     Type
  8137 ;;                  1    wreg      void 
  8138 ;; Registers used:
  8139 ;;		wreg, status,2, status,0, cstack
  8140 ;; Tracked objects:
  8141 ;;		On entry : 0/0
  8142 ;;		On exit  : 0/0
  8143 ;;		Unchanged: 0/0
  8144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8148 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8149 ;;Total ram usage:        0 bytes
  8150 ;; Hardware stack levels used: 1
  8151 ;; Hardware stack levels required when called: 12
  8152 ;; This function calls:
  8153 ;;		_interrupts_clear_colorclick
  8154 ;; This function is called by:
  8155 ;;		_main
  8156 ;; This function uses a non-reentrant model
  8157 ;;
  8158                           
  8159                           	psect	text45
  8160   0029EE                     __ptext45:
  8161                           	callstack 0
  8162   0029EE                     _Interrupts_init:
  8163                           	callstack 18
  8164   0029EE                     
  8165                           ;interrupts.c: 18:     TRISBbits.TRISB1 = 1;
  8166   0029EE  8282               	bsf	130,1,c	;volatile
  8167                           
  8168                           ;interrupts.c: 19:     ANSELBbits.ANSELB1 = 0;
  8169   0029F0  010E               	movlb	14	; () banked
  8170   0029F2  939A               	bcf	154,1,b	;volatile
  8171                           
  8172                           ;interrupts.c: 21:     PIE0bits.INT1IE = 1;
  8173   0029F4  8329               	bsf	41,1,b	;volatile
  8174                           
  8175                           ;interrupts.c: 22:     IPR0bits.INT1IP = 1;
  8176   0029F6  831F               	bsf	31,1,b	;volatile
  8177                           
  8178                           ;interrupts.c: 23:     INTCONbits.INT1EDG = 0;
  8179   0029F8  92F2               	bcf	242,1,c	;volatile
  8180                           
  8181                           ;interrupts.c: 26:     PIE0bits.TMR0IE=1;
  8182   0029FA  8B29               	bsf	41,5,b	;volatile
  8183                           
  8184                           ;interrupts.c: 27:     IPR0bits.TMR0IP = 0;
  8185   0029FC  9B1F               	bcf	31,5,b	;volatile
  8186                           
  8187                           ;interrupts.c: 30:     PIE4bits.RC4IE=1;
  8188   0029FE  872D               	bsf	45,3,b	;volatile
  8189   002A00                     
  8190                           ; BSR set to: 14
  8191                           ;interrupts.c: 32:     interrupts_clear_colorclick();
  8192   002A00  EC06  F015         	call	_interrupts_clear_colorclick	;wreg free
  8193   002A04                     
  8194                           ;interrupts.c: 34:     INTCONbits.IPEN = 1;
  8195   002A04  8AF2               	bsf	242,5,c	;volatile
  8196   002A06                     
  8197                           ;interrupts.c: 35:     INTCONbits.PEIE = 1;
  8198   002A06  8CF2               	bsf	242,6,c	;volatile
  8199   002A08                     
  8200                           ;interrupts.c: 36:     INTCONbits.GIE=1;
  8201   002A08  8EF2               	bsf	242,7,c	;volatile
  8202   002A0A  0012               	return		;funcret
  8203   002A0C                     __end_of_Interrupts_init:
  8204                           	callstack 0
  8205                           
  8206 ;; *************** function _interrupts_clear_colorclick *****************
  8207 ;; Defined at:
  8208 ;;		line 57 in file "interrupts.c"
  8209 ;; Parameters:    Size  Location     Type
  8210 ;;		None
  8211 ;; Auto vars:     Size  Location     Type
  8212 ;;		None
  8213 ;; Return value:  Size  Location     Type
  8214 ;;                  1    wreg      void 
  8215 ;; Registers used:
  8216 ;;		wreg, status,2, status,0, cstack
  8217 ;; Tracked objects:
  8218 ;;		On entry : 0/0
  8219 ;;		On exit  : 0/0
  8220 ;;		Unchanged: 0/0
  8221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8225 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8226 ;;Total ram usage:        0 bytes
  8227 ;; Hardware stack levels used: 1
  8228 ;; Hardware stack levels required when called: 11
  8229 ;; This function calls:
  8230 ;;		_I2C_2_Master_Start
  8231 ;;		_I2C_2_Master_Stop
  8232 ;;		_I2C_2_Master_Write
  8233 ;;		_init_colorclick_interrupts
  8234 ;; This function is called by:
  8235 ;;		_Interrupts_init
  8236 ;; This function uses a non-reentrant model
  8237 ;;
  8238                           
  8239                           	psect	text46
  8240   002A0C                     __ptext46:
  8241                           	callstack 0
  8242   002A0C                     _interrupts_clear_colorclick:
  8243                           	callstack 18
  8244   002A0C                     
  8245                           ;interrupts.c: 59:     I2C_2_Master_Start();
  8246   002A0C  EC3E  F015         	call	_I2C_2_Master_Start	;wreg free
  8247                           
  8248                           ;interrupts.c: 60:     I2C_2_Master_Write(0x52 | 0x00);
  8249   002A10  0E52               	movlw	82
  8250   002A12  EC28  F015         	call	_I2C_2_Master_Write
  8251                           
  8252                           ;interrupts.c: 61:     I2C_2_Master_Write(0b11100110);
  8253   002A16  0EE6               	movlw	230
  8254   002A18  EC28  F015         	call	_I2C_2_Master_Write
  8255                           
  8256                           ;interrupts.c: 62:     I2C_2_Master_Stop();
  8257   002A1C  EC39  F015         	call	_I2C_2_Master_Stop	;wreg free
  8258                           
  8259                           ;interrupts.c: 64:     init_colorclick_interrupts();
  8260   002A20  EC61  F013         	call	_init_colorclick_interrupts	;wreg free
  8261   002A24  0012               	return		;funcret
  8262   002A26                     __end_of_interrupts_clear_colorclick:
  8263                           	callstack 0
  8264                           
  8265 ;; *************** function _init_colorclick_interrupts *****************
  8266 ;; Defined at:
  8267 ;;		line 43 in file "interrupts.c"
  8268 ;; Parameters:    Size  Location     Type
  8269 ;;		None
  8270 ;; Auto vars:     Size  Location     Type
  8271 ;;		None
  8272 ;; Return value:  Size  Location     Type
  8273 ;;                  1    wreg      void 
  8274 ;; Registers used:
  8275 ;;		wreg, status,2, status,0, cstack
  8276 ;; Tracked objects:
  8277 ;;		On entry : 0/0
  8278 ;;		On exit  : 0/0
  8279 ;;		Unchanged: 0/0
  8280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8283 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8284 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8285 ;;Total ram usage:        1 bytes
  8286 ;; Hardware stack levels used: 1
  8287 ;; Hardware stack levels required when called: 10
  8288 ;; This function calls:
  8289 ;;		_color_writetoaddr
  8290 ;; This function is called by:
  8291 ;;		_interrupts_clear_colorclick
  8292 ;; This function uses a non-reentrant model
  8293 ;;
  8294                           
  8295                           	psect	text47
  8296   0026C2                     __ptext47:
  8297                           	callstack 0
  8298   0026C2                     _init_colorclick_interrupts:
  8299                           	callstack 18
  8300   0026C2                     
  8301                           ;interrupts.c: 45:     color_writetoaddr(0x00,0b10011);
  8302   0026C2  0E13               	movlw	19
  8303   0026C4  6E0B               	movwf	color_writetoaddr@value^0,c
  8304   0026C6  0E00               	movlw	0
  8305   0026C8  ECC7  F014         	call	_color_writetoaddr
  8306   0026CC                     
  8307                           ;interrupts.c: 46:     _delay((unsigned long)((3)*(64000000/4000.0)));
  8308   0026CC  0E3F               	movlw	63
  8309   0026CE  6E0D               	movwf	??_init_colorclick_interrupts^0,c
  8310   0026D0  0E55               	movlw	85
  8311   0026D2                     u4717:
  8312   0026D2  2EE8               	decfsz	wreg,f,c
  8313   0026D4  D7FE               	bra	u4717
  8314   0026D6  2E0D               	decfsz	??_init_colorclick_interrupts^0,f,c
  8315   0026D8  D7FC               	bra	u4717
  8316   0026DA  F000               	nop	
  8317   0026DC                     
  8318                           ;interrupts.c: 48:     color_writetoaddr(0x0C,0b0100);
  8319   0026DC  0E04               	movlw	4
  8320   0026DE  6E0B               	movwf	color_writetoaddr@value^0,c
  8321   0026E0  0E0C               	movlw	12
  8322   0026E2  ECC7  F014         	call	_color_writetoaddr
  8323   0026E6                     
  8324                           ;interrupts.c: 49:     color_writetoaddr(0x04,(int_threshold_low & 0xFF));
  8325   0026E6  C04F  F00B         	movff	_int_threshold_low,color_writetoaddr@value
  8326   0026EA  0E04               	movlw	4
  8327   0026EC  ECC7  F014         	call	_color_writetoaddr
  8328   0026F0                     
  8329                           ;interrupts.c: 50:     color_writetoaddr(0x05,(int_threshold_low >> 8));
  8330   0026F0  5050               	movf	(_int_threshold_low+1)^0,w,c
  8331   0026F2  6E0B               	movwf	color_writetoaddr@value^0,c
  8332   0026F4  0E05               	movlw	5
  8333   0026F6  ECC7  F014         	call	_color_writetoaddr
  8334   0026FA                     
  8335                           ;interrupts.c: 51:     color_writetoaddr(0x06,(int_threshold_high & 0xFF));
  8336   0026FA  C0D3  F00B         	movff	_int_threshold_high,color_writetoaddr@value
  8337   0026FE  0E06               	movlw	6
  8338   002700  ECC7  F014         	call	_color_writetoaddr
  8339   002704                     
  8340                           ;interrupts.c: 52:     color_writetoaddr(0x07,(int_threshold_high >> 8));
  8341   002704  0100               	movlb	0	; () banked
  8342   002706  51D4               	movf	(_int_threshold_high+1)& (0+255),w,b
  8343   002708  6E0B               	movwf	color_writetoaddr@value^0,c
  8344   00270A  0E07               	movlw	7
  8345   00270C  ECC7  F014         	call	_color_writetoaddr
  8346   002710  0012               	return		;funcret
  8347   002712                     __end_of_init_colorclick_interrupts:
  8348                           	callstack 0
  8349                           
  8350 ;; *************** function _color_writetoaddr *****************
  8351 ;; Defined at:
  8352 ;;		line 22 in file "color.c"
  8353 ;; Parameters:    Size  Location     Type
  8354 ;;  address         1    wreg     unsigned char 
  8355 ;;  value           1   10[COMRAM] unsigned char 
  8356 ;; Auto vars:     Size  Location     Type
  8357 ;;  address         1   11[COMRAM] unsigned char 
  8358 ;; Return value:  Size  Location     Type
  8359 ;;                  1    wreg      void 
  8360 ;; Registers used:
  8361 ;;		wreg, status,2, status,0, cstack
  8362 ;; Tracked objects:
  8363 ;;		On entry : 0/0
  8364 ;;		On exit  : 0/0
  8365 ;;		Unchanged: 0/0
  8366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8367 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8368 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8370 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8371 ;;Total ram usage:        2 bytes
  8372 ;; Hardware stack levels used: 1
  8373 ;; Hardware stack levels required when called: 9
  8374 ;; This function calls:
  8375 ;;		_I2C_2_Master_Start
  8376 ;;		_I2C_2_Master_Stop
  8377 ;;		_I2C_2_Master_Write
  8378 ;; This function is called by:
  8379 ;;		_color_click_init
  8380 ;;		_init_colorclick_interrupts
  8381 ;; This function uses a non-reentrant model
  8382 ;;
  8383                           
  8384                           	psect	text48
  8385   00298E                     __ptext48:
  8386                           	callstack 0
  8387   00298E                     _color_writetoaddr:
  8388                           	callstack 20
  8389                           
  8390                           ;incstack = 0
  8391                           ;color_writetoaddr@address stored from wreg
  8392   00298E  6E0C               	movwf	color_writetoaddr@address^0,c
  8393   002990                     
  8394                           ;color.c: 23:     I2C_2_Master_Start();
  8395   002990  EC3E  F015         	call	_I2C_2_Master_Start	;wreg free
  8396                           
  8397                           ;color.c: 24:     I2C_2_Master_Write(0x52 | 0x00);
  8398   002994  0E52               	movlw	82
  8399   002996  EC28  F015         	call	_I2C_2_Master_Write
  8400                           
  8401                           ;color.c: 25:     I2C_2_Master_Write(0x80 | address);
  8402   00299A  500C               	movf	color_writetoaddr@address^0,w,c
  8403   00299C  0980               	iorlw	128
  8404   00299E  EC28  F015         	call	_I2C_2_Master_Write
  8405                           
  8406                           ;color.c: 26:     I2C_2_Master_Write(value);
  8407   0029A2  500B               	movf	color_writetoaddr@value^0,w,c
  8408   0029A4  EC28  F015         	call	_I2C_2_Master_Write
  8409                           
  8410                           ;color.c: 27:     I2C_2_Master_Stop();
  8411   0029A8  EC39  F015         	call	_I2C_2_Master_Stop	;wreg free
  8412   0029AC  0012               	return		;funcret
  8413   0029AE                     __end_of_color_writetoaddr:
  8414                           	callstack 0
  8415                           
  8416 ;; *************** function _I2C_2_Master_Write *****************
  8417 ;; Defined at:
  8418 ;;		line 45 in file "i2c.c"
  8419 ;; Parameters:    Size  Location     Type
  8420 ;;  data_byte       1    wreg     unsigned char 
  8421 ;; Auto vars:     Size  Location     Type
  8422 ;;  data_byte       1    9[COMRAM] unsigned char 
  8423 ;; Return value:  Size  Location     Type
  8424 ;;                  1    wreg      void 
  8425 ;; Registers used:
  8426 ;;		wreg, status,2, status,0, cstack
  8427 ;; Tracked objects:
  8428 ;;		On entry : 0/0
  8429 ;;		On exit  : 0/0
  8430 ;;		Unchanged: 0/0
  8431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8433 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8435 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8436 ;;Total ram usage:        1 bytes
  8437 ;; Hardware stack levels used: 1
  8438 ;; Hardware stack levels required when called: 8
  8439 ;; This function calls:
  8440 ;;		_I2C_2_Master_Idle
  8441 ;; This function is called by:
  8442 ;;		_color_writetoaddr
  8443 ;;		_color_read_Red
  8444 ;;		_color_read_Green
  8445 ;;		_color_read_Blue
  8446 ;;		_color_read_Clear
  8447 ;;		_interrupts_clear_colorclick
  8448 ;; This function uses a non-reentrant model
  8449 ;;
  8450                           
  8451                           	psect	text49
  8452   002A50                     __ptext49:
  8453                           	callstack 0
  8454   002A50                     _I2C_2_Master_Write:
  8455                           	callstack 20
  8456                           
  8457                           ;incstack = 0
  8458                           ;I2C_2_Master_Write@data_byte stored from wreg
  8459   002A50  6E0A               	movwf	I2C_2_Master_Write@data_byte^0,c
  8460   002A52                     
  8461                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  8462   002A52  EC59  F014         	call	_I2C_2_Master_Idle	;wreg free
  8463   002A56                     
  8464                           ;i2c.c: 48:   SSP2BUF = data_byte;
  8465   002A56  C00A  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  8466   002A5A  0012               	return		;funcret
  8467   002A5C                     __end_of_I2C_2_Master_Write:
  8468                           	callstack 0
  8469                           
  8470 ;; *************** function _I2C_2_Master_Stop *****************
  8471 ;; Defined at:
  8472 ;;		line 39 in file "i2c.c"
  8473 ;; Parameters:    Size  Location     Type
  8474 ;;		None
  8475 ;; Auto vars:     Size  Location     Type
  8476 ;;		None
  8477 ;; Return value:  Size  Location     Type
  8478 ;;                  1    wreg      void 
  8479 ;; Registers used:
  8480 ;;		wreg, status,2, status,0, cstack
  8481 ;; Tracked objects:
  8482 ;;		On entry : 0/0
  8483 ;;		On exit  : 0/0
  8484 ;;		Unchanged: 0/0
  8485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8489 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8490 ;;Total ram usage:        0 bytes
  8491 ;; Hardware stack levels used: 1
  8492 ;; Hardware stack levels required when called: 8
  8493 ;; This function calls:
  8494 ;;		_I2C_2_Master_Idle
  8495 ;; This function is called by:
  8496 ;;		_color_writetoaddr
  8497 ;;		_color_read_Red
  8498 ;;		_color_read_Green
  8499 ;;		_color_read_Blue
  8500 ;;		_color_read_Clear
  8501 ;;		_interrupts_clear_colorclick
  8502 ;; This function uses a non-reentrant model
  8503 ;;
  8504                           
  8505                           	psect	text50
  8506   002A72                     __ptext50:
  8507                           	callstack 0
  8508   002A72                     _I2C_2_Master_Stop:
  8509                           	callstack 20
  8510   002A72                     
  8511                           ;i2c.c: 41:   I2C_2_Master_Idle();
  8512   002A72  EC59  F014         	call	_I2C_2_Master_Idle	;wreg free
  8513   002A76                     
  8514                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  8515   002A76  010E               	movlb	14	; () banked
  8516   002A78  85DA               	bsf	218,2,b	;volatile
  8517   002A7A                     
  8518                           ; BSR set to: 14
  8519   002A7A  0012               	return		;funcret
  8520   002A7C                     __end_of_I2C_2_Master_Stop:
  8521                           	callstack 0
  8522                           
  8523 ;; *************** function _I2C_2_Master_Start *****************
  8524 ;; Defined at:
  8525 ;;		line 27 in file "i2c.c"
  8526 ;; Parameters:    Size  Location     Type
  8527 ;;		None
  8528 ;; Auto vars:     Size  Location     Type
  8529 ;;		None
  8530 ;; Return value:  Size  Location     Type
  8531 ;;                  1    wreg      void 
  8532 ;; Registers used:
  8533 ;;		wreg, status,2, status,0, cstack
  8534 ;; Tracked objects:
  8535 ;;		On entry : 0/0
  8536 ;;		On exit  : 0/0
  8537 ;;		Unchanged: 0/0
  8538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8542 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8543 ;;Total ram usage:        0 bytes
  8544 ;; Hardware stack levels used: 1
  8545 ;; Hardware stack levels required when called: 8
  8546 ;; This function calls:
  8547 ;;		_I2C_2_Master_Idle
  8548 ;; This function is called by:
  8549 ;;		_color_writetoaddr
  8550 ;;		_color_read_Red
  8551 ;;		_color_read_Green
  8552 ;;		_color_read_Blue
  8553 ;;		_color_read_Clear
  8554 ;;		_interrupts_clear_colorclick
  8555 ;; This function uses a non-reentrant model
  8556 ;;
  8557                           
  8558                           	psect	text51
  8559   002A7C                     __ptext51:
  8560                           	callstack 0
  8561   002A7C                     _I2C_2_Master_Start:
  8562                           	callstack 20
  8563   002A7C                     
  8564                           ;i2c.c: 29:   I2C_2_Master_Idle();
  8565   002A7C  EC59  F014         	call	_I2C_2_Master_Idle	;wreg free
  8566   002A80                     
  8567                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  8568   002A80  010E               	movlb	14	; () banked
  8569   002A82  81DA               	bsf	218,0,b	;volatile
  8570   002A84                     
  8571                           ; BSR set to: 14
  8572   002A84  0012               	return		;funcret
  8573   002A86                     __end_of_I2C_2_Master_Start:
  8574                           	callstack 0
  8575                           
  8576 ;; *************** function _I2C_2_Master_Idle *****************
  8577 ;; Defined at:
  8578 ;;		line 22 in file "i2c.c"
  8579 ;; Parameters:    Size  Location     Type
  8580 ;;		None
  8581 ;; Auto vars:     Size  Location     Type
  8582 ;;		None
  8583 ;; Return value:  Size  Location     Type
  8584 ;;                  1    wreg      void 
  8585 ;; Registers used:
  8586 ;;		wreg, status,2, status,0
  8587 ;; Tracked objects:
  8588 ;;		On entry : 0/0
  8589 ;;		On exit  : 0/0
  8590 ;;		Unchanged: 0/0
  8591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8594 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8595 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8596 ;;Total ram usage:        1 bytes
  8597 ;; Hardware stack levels used: 1
  8598 ;; Hardware stack levels required when called: 7
  8599 ;; This function calls:
  8600 ;;		Nothing
  8601 ;; This function is called by:
  8602 ;;		_I2C_2_Master_Start
  8603 ;;		_I2C_2_Master_RepStart
  8604 ;;		_I2C_2_Master_Stop
  8605 ;;		_I2C_2_Master_Write
  8606 ;;		_I2C_2_Master_Read
  8607 ;; This function uses a non-reentrant model
  8608 ;;
  8609                           
  8610                           	psect	text52
  8611   0028B2                     __ptext52:
  8612                           	callstack 0
  8613   0028B2                     _I2C_2_Master_Idle:
  8614                           	callstack 20
  8615   0028B2                     l89:
  8616   0028B2  010E               	movlb	14	; () banked
  8617   0028B4  B5D8               	btfsc	216,2,b	;volatile
  8618   0028B6  EF5F  F014         	goto	u2031
  8619   0028BA  EF61  F014         	goto	u2030
  8620   0028BE                     u2031:
  8621   0028BE  EF59  F014         	goto	l89
  8622   0028C2                     u2030:
  8623   0028C2                     
  8624                           ; BSR set to: 14
  8625   0028C2  CEDA F009          	movff	3802,??_I2C_2_Master_Idle	;volatile
  8626   0028C6  0E1F               	movlw	31
  8627   0028C8  1609               	andwf	??_I2C_2_Master_Idle^0,f,c
  8628   0028CA  A4D8               	btfss	status,2,c
  8629   0028CC  EF6A  F014         	goto	u2041
  8630   0028D0  EF6C  F014         	goto	u2040
  8631   0028D4                     u2041:
  8632   0028D4  EF59  F014         	goto	l89
  8633   0028D8                     u2040:
  8634   0028D8                     
  8635                           ; BSR set to: 14
  8636   0028D8  0012               	return		;funcret
  8637   0028DA                     __end_of_I2C_2_Master_Idle:
  8638                           	callstack 0
  8639                           
  8640 ;; *************** function _AppendTime *****************
  8641 ;; Defined at:
  8642 ;;		line 23 in file "Memorization.c"
  8643 ;; Parameters:    Size  Location     Type
  8644 ;;  temp            2    8[COMRAM] unsigned int 
  8645 ;;  time_index      2   10[COMRAM] PTR unsigned char 
  8646 ;;		 -> time_index(1), 
  8647 ;;  time_array      2   12[COMRAM] PTR unsigned int 
  8648 ;;		 -> time_array(80), 
  8649 ;; Auto vars:     Size  Location     Type
  8650 ;;		None
  8651 ;; Return value:  Size  Location     Type
  8652 ;;                  1    wreg      void 
  8653 ;; Registers used:
  8654 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8655 ;; Tracked objects:
  8656 ;;		On entry : 0/0
  8657 ;;		On exit  : 0/0
  8658 ;;		Unchanged: 0/0
  8659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8660 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8662 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8663 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8664 ;;Total ram usage:        9 bytes
  8665 ;; Hardware stack levels used: 1
  8666 ;; Hardware stack levels required when called: 7
  8667 ;; This function calls:
  8668 ;;		Nothing
  8669 ;; This function is called by:
  8670 ;;		_main
  8671 ;; This function uses a non-reentrant model
  8672 ;;
  8673                           
  8674                           	psect	text53
  8675   002856                     __ptext53:
  8676                           	callstack 0
  8677   002856                     _AppendTime:
  8678                           	callstack 23
  8679   002856                     
  8680                           ;Memorization.c: 25:     time_array[(*time_index)++] = temp;
  8681   002856  C00B  FFD9         	movff	AppendTime@time_index,fsr2l
  8682   00285A  C00C  FFDA         	movff	AppendTime@time_index+1,fsr2h
  8683   00285E  CFDF F00F          	movff	indf2,??_AppendTime
  8684   002862  0E01               	movlw	1
  8685   002864  26DF               	addwf	indf2,f,c
  8686   002866  500F               	movf	??_AppendTime^0,w,c
  8687   002868  0D02               	mullw	2
  8688   00286A  CFF3 F010          	movff	prodl,??_AppendTime+1
  8689   00286E  CFF4 F011          	movff	prodh,??_AppendTime+2
  8690   002872  5010               	movf	(??_AppendTime+1)^0,w,c
  8691   002874  240D               	addwf	AppendTime@time_array^0,w,c
  8692   002876  6ED9               	movwf	fsr2l,c
  8693   002878  5011               	movf	(??_AppendTime+2)^0,w,c
  8694   00287A  200E               	addwfc	(AppendTime@time_array+1)^0,w,c
  8695   00287C  6EDA               	movwf	fsr2h,c
  8696   00287E  C009  FFDE         	movff	AppendTime@temp,postinc2
  8697   002882  C00A  FFDD         	movff	AppendTime@temp+1,postdec2
  8698   002886  0012               	return		;funcret
  8699   002888                     __end_of_AppendTime:
  8700                           	callstack 0
  8701                           
  8702 ;; *************** function _LowISR *****************
  8703 ;; Defined at:
  8704 ;;		line 74 in file "interrupts.c"
  8705 ;; Parameters:    Size  Location     Type
  8706 ;;		None
  8707 ;; Auto vars:     Size  Location     Type
  8708 ;;		None
  8709 ;; Return value:  Size  Location     Type
  8710 ;;                  1    wreg      void 
  8711 ;; Registers used:
  8712 ;;		wreg, status,2
  8713 ;; Tracked objects:
  8714 ;;		On entry : 0/0
  8715 ;;		On exit  : 0/0
  8716 ;;		Unchanged: 0/0
  8717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8720 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8721 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8722 ;;Total ram usage:        3 bytes
  8723 ;; Hardware stack levels used: 1
  8724 ;; Hardware stack levels required when called: 6
  8725 ;; This function calls:
  8726 ;;		Nothing
  8727 ;; This function is called by:
  8728 ;;		Interrupt level 1
  8729 ;; This function uses a non-reentrant model
  8730 ;;
  8731                           
  8732                           	psect	intcodelo
  8733   000018                     __pintcodelo:
  8734                           	callstack 0
  8735   000018                     _LowISR:
  8736                           	callstack 16
  8737                           
  8738                           ;incstack = 0
  8739   000018  8057               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  8740   00001A  CFD8 F006          	movff	status,??_LowISR
  8741   00001E  CFE8 F007          	movff	wreg,??_LowISR+1
  8742   000022  CFE0 F008          	movff	bsr,??_LowISR+2
  8743   000026                     
  8744                           ;interrupts.c: 77:     if(PIR0bits.TMR0IF){
  8745   000026  010E               	movlb	14	; () banked
  8746   000028  AB33               	btfss	51,5,b	;volatile
  8747   00002A  EF19  F000         	goto	i1u377_21
  8748   00002E  EF1B  F000         	goto	i1u377_20
  8749   000032                     i1u377_21:
  8750   000032  EF24  F000         	goto	i1l330
  8751   000036                     i1u377_20:
  8752   000036                     
  8753                           ; BSR set to: 14
  8754                           ;interrupts.c: 78:         TMR0H = 0b11000010;
  8755   000036  0EC2               	movlw	194
  8756   000038  6ED4               	movwf	212,c	;volatile
  8757                           
  8758                           ;interrupts.c: 79:         TMR0L = 0b11110110;
  8759   00003A  0EF6               	movlw	246
  8760   00003C  6ED3               	movwf	211,c	;volatile
  8761                           
  8762                           ;interrupts.c: 80:         tmr_ovf = 1;
  8763   00003E  0E01               	movlw	1
  8764   000040  0100               	movlb	0	; () banked
  8765   000042  6F74               	movwf	_tmr_ovf& (0+255),b
  8766   000044                     
  8767                           ; BSR set to: 0
  8768                           ;interrupts.c: 81:         PIR0bits.TMR0IF=0;
  8769   000044  010E               	movlb	14	; () banked
  8770   000046  9B33               	bcf	51,5,b	;volatile
  8771   000048                     i1l330:
  8772                           
  8773                           ; BSR set to: 14
  8774   000048  C008  FFE0         	movff	??_LowISR+2,bsr
  8775   00004C  C007  FFE8         	movff	??_LowISR+1,wreg
  8776   000050  C006  FFD8         	movff	??_LowISR,status
  8777   000054  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  8778   000056  0010               	retfie	
  8779   000058                     __end_of_LowISR:
  8780                           	callstack 0
  8781                           
  8782 ;; *************** function _HighISR *****************
  8783 ;; Defined at:
  8784 ;;		line 88 in file "interrupts.c"
  8785 ;; Parameters:    Size  Location     Type
  8786 ;;		None
  8787 ;; Auto vars:     Size  Location     Type
  8788 ;;		None
  8789 ;; Return value:  Size  Location     Type
  8790 ;;                  1    wreg      void 
  8791 ;; Registers used:
  8792 ;;		wreg, status,2, status,0, cstack
  8793 ;; Tracked objects:
  8794 ;;		On entry : 0/0
  8795 ;;		On exit  : 0/0
  8796 ;;		Unchanged: 0/0
  8797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8801 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8802 ;;Total ram usage:        0 bytes
  8803 ;; Hardware stack levels used: 1
  8804 ;; Hardware stack levels required when called: 5
  8805 ;; This function calls:
  8806 ;;		i2_interrupts_clear_colorclick
  8807 ;; This function is called by:
  8808 ;;		Interrupt level 2
  8809 ;; This function uses a non-reentrant model
  8810 ;;
  8811                           
  8812                           	psect	intcode
  8813   000008                     __pintcode:
  8814                           	callstack 0
  8815   000008                     _HighISR:
  8816                           	callstack 16
  8817                           
  8818                           ; BSR set to: 14
  8819                           ;incstack = 0
  8820   000008  8257               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8821   00000A  EFD7  F014         	goto	int_func
  8822                           
  8823                           	psect	intcode_body
  8824   0029AE                     __pintcode_body:
  8825                           	callstack 16
  8826   0029AE                     int_func:
  8827                           	callstack 16
  8828   0029AE                     
  8829                           ;interrupts.c: 115:     if(PIR0bits.INT1IF){
  8830   0029AE  010E               	movlb	14	; () banked
  8831   0029B0  A333               	btfss	51,1,b	;volatile
  8832   0029B2  EFDD  F014         	goto	i2u378_41
  8833   0029B6  EFDF  F014         	goto	i2u378_40
  8834   0029BA                     i2u378_41:
  8835   0029BA  EFE5  F014         	goto	i2l338
  8836   0029BE                     i2u378_40:
  8837   0029BE                     
  8838                           ; BSR set to: 14
  8839                           ;interrupts.c: 116:         color_flag = 1;
  8840   0029BE  0E01               	movlw	1
  8841   0029C0  6E55               	movwf	_color_flag^0,c
  8842   0029C2                     
  8843                           ; BSR set to: 14
  8844                           ;interrupts.c: 118:         interrupts_clear_colorclick();
  8845   0029C2  EC13  F015         	call	i2_interrupts_clear_colorclick	;wreg free
  8846   0029C6                     
  8847                           ;interrupts.c: 119:         PIR0bits.INT1IF = 0;
  8848   0029C6  010E               	movlb	14	; () banked
  8849   0029C8  9333               	bcf	51,1,b	;volatile
  8850   0029CA                     i2l338:
  8851                           
  8852                           ; BSR set to: 14
  8853   0029CA  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8854   0029CC  0011               	retfie		f
  8855   0029CE                     __end_of_HighISR:
  8856                           	callstack 0
  8857                           
  8858 ;; *************** function i2_interrupts_clear_colorclick *****************
  8859 ;; Defined at:
  8860 ;;		line 57 in file "interrupts.c"
  8861 ;; Parameters:    Size  Location     Type
  8862 ;;		None
  8863 ;; Auto vars:     Size  Location     Type
  8864 ;;		None
  8865 ;; Return value:  Size  Location     Type
  8866 ;;                  1    wreg      void 
  8867 ;; Registers used:
  8868 ;;		wreg, status,2, status,0, cstack
  8869 ;; Tracked objects:
  8870 ;;		On entry : 0/0
  8871 ;;		On exit  : 0/0
  8872 ;;		Unchanged: 0/0
  8873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8878 ;;Total ram usage:        0 bytes
  8879 ;; Hardware stack levels used: 1
  8880 ;; Hardware stack levels required when called: 4
  8881 ;; This function calls:
  8882 ;;		i2_I2C_2_Master_Start
  8883 ;;		i2_I2C_2_Master_Stop
  8884 ;;		i2_I2C_2_Master_Write
  8885 ;;		i2_init_colorclick_interrupts
  8886 ;; This function is called by:
  8887 ;;		_HighISR
  8888 ;; This function uses a non-reentrant model
  8889 ;;
  8890                           
  8891                           	psect	text56
  8892   002A26                     __ptext56:
  8893                           	callstack 0
  8894   002A26                     i2_interrupts_clear_colorclick:
  8895                           	callstack 16
  8896   002A26                     
  8897                           ;interrupts.c: 59:     I2C_2_Master_Start();
  8898   002A26  EC48  F015         	call	i2_I2C_2_Master_Start	;wreg free
  8899                           
  8900                           ;interrupts.c: 60:     I2C_2_Master_Write(0x52 | 0x00);
  8901   002A2A  0E52               	movlw	82
  8902   002A2C  EC2E  F015         	call	i2_I2C_2_Master_Write
  8903                           
  8904                           ;interrupts.c: 61:     I2C_2_Master_Write(0b11100110);
  8905   002A30  0EE6               	movlw	230
  8906   002A32  EC2E  F015         	call	i2_I2C_2_Master_Write
  8907                           
  8908                           ;interrupts.c: 62:     I2C_2_Master_Stop();
  8909   002A36  EC43  F015         	call	i2_I2C_2_Master_Stop	;wreg free
  8910                           
  8911                           ;interrupts.c: 64:     init_colorclick_interrupts();
  8912   002A3A  EC89  F013         	call	i2_init_colorclick_interrupts	;wreg free
  8913   002A3E  0012               	return		;funcret
  8914   002A40                     __end_ofi2_interrupts_clear_colorclick:
  8915                           	callstack 0
  8916                           
  8917 ;; *************** function i2_init_colorclick_interrupts *****************
  8918 ;; Defined at:
  8919 ;;		line 43 in file "interrupts.c"
  8920 ;; Parameters:    Size  Location     Type
  8921 ;;		None
  8922 ;; Auto vars:     Size  Location     Type
  8923 ;;		None
  8924 ;; Return value:  Size  Location     Type
  8925 ;;                  1    wreg      void 
  8926 ;; Registers used:
  8927 ;;		wreg, status,2, status,0, cstack
  8928 ;; Tracked objects:
  8929 ;;		On entry : 0/0
  8930 ;;		On exit  : 0/0
  8931 ;;		Unchanged: 0/0
  8932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8935 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8936 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8937 ;;Total ram usage:        1 bytes
  8938 ;; Hardware stack levels used: 1
  8939 ;; Hardware stack levels required when called: 3
  8940 ;; This function calls:
  8941 ;;		i2_color_writetoaddr
  8942 ;; This function is called by:
  8943 ;;		i2_interrupts_clear_colorclick
  8944 ;; This function uses a non-reentrant model
  8945 ;;
  8946                           
  8947                           	psect	text57
  8948   002712                     __ptext57:
  8949                           	callstack 0
  8950   002712                     i2_init_colorclick_interrupts:
  8951                           	callstack 16
  8952   002712                     
  8953                           ;interrupts.c: 45:     color_writetoaddr(0x00,0b10011);
  8954   002712  0E13               	movlw	19
  8955   002714  6E03               	movwf	i2color_writetoaddr@value^0,c
  8956   002716  0E00               	movlw	0
  8957   002718  ECE7  F014         	call	i2_color_writetoaddr
  8958   00271C                     
  8959                           ;interrupts.c: 46:     _delay((unsigned long)((3)*(64000000/4000.0)));
  8960   00271C  0E3F               	movlw	63
  8961   00271E  6E05               	movwf	??i2_init_colorclick_interrupts^0,c
  8962   002720  0E55               	movlw	85
  8963   002722                     i2u472_47:
  8964   002722  2EE8               	decfsz	wreg,f,c
  8965   002724  D7FE               	bra	i2u472_47
  8966   002726  2E05               	decfsz	??i2_init_colorclick_interrupts^0,f,c
  8967   002728  D7FC               	bra	i2u472_47
  8968   00272A  F000               	nop	
  8969   00272C                     
  8970                           ;interrupts.c: 48:     color_writetoaddr(0x0C,0b0100);
  8971   00272C  0E04               	movlw	4
  8972   00272E  6E03               	movwf	i2color_writetoaddr@value^0,c
  8973   002730  0E0C               	movlw	12
  8974   002732  ECE7  F014         	call	i2_color_writetoaddr
  8975   002736                     
  8976                           ;interrupts.c: 49:     color_writetoaddr(0x04,(int_threshold_low & 0xFF));
  8977   002736  C04F  F003         	movff	_int_threshold_low,i2color_writetoaddr@value
  8978   00273A  0E04               	movlw	4
  8979   00273C  ECE7  F014         	call	i2_color_writetoaddr
  8980   002740                     
  8981                           ;interrupts.c: 50:     color_writetoaddr(0x05,(int_threshold_low >> 8));
  8982   002740  5050               	movf	(_int_threshold_low+1)^0,w,c
  8983   002742  6E03               	movwf	i2color_writetoaddr@value^0,c
  8984   002744  0E05               	movlw	5
  8985   002746  ECE7  F014         	call	i2_color_writetoaddr
  8986   00274A                     
  8987                           ;interrupts.c: 51:     color_writetoaddr(0x06,(int_threshold_high & 0xFF));
  8988   00274A  C0D3  F003         	movff	_int_threshold_high,i2color_writetoaddr@value
  8989   00274E  0E06               	movlw	6
  8990   002750  ECE7  F014         	call	i2_color_writetoaddr
  8991   002754                     
  8992                           ;interrupts.c: 52:     color_writetoaddr(0x07,(int_threshold_high >> 8));
  8993   002754  0100               	movlb	0	; () banked
  8994   002756  51D4               	movf	(_int_threshold_high+1)& (0+255),w,b
  8995   002758  6E03               	movwf	i2color_writetoaddr@value^0,c
  8996   00275A  0E07               	movlw	7
  8997   00275C  ECE7  F014         	call	i2_color_writetoaddr
  8998   002760  0012               	return		;funcret
  8999   002762                     __end_ofi2_init_colorclick_interrupts:
  9000                           	callstack 0
  9001                           
  9002 ;; *************** function i2_color_writetoaddr *****************
  9003 ;; Defined at:
  9004 ;;		line 22 in file "color.c"
  9005 ;; Parameters:    Size  Location     Type
  9006 ;;  address         1    wreg     unsigned char 
  9007 ;;  value           1    2[COMRAM] unsigned char 
  9008 ;; Auto vars:     Size  Location     Type
  9009 ;;  address         1    3[COMRAM] unsigned char 
  9010 ;; Return value:  Size  Location     Type
  9011 ;;                  1    wreg      void 
  9012 ;; Registers used:
  9013 ;;		wreg, status,2, status,0, cstack
  9014 ;; Tracked objects:
  9015 ;;		On entry : 0/0
  9016 ;;		On exit  : 0/0
  9017 ;;		Unchanged: 0/0
  9018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9019 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9020 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9022 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9023 ;;Total ram usage:        2 bytes
  9024 ;; Hardware stack levels used: 1
  9025 ;; Hardware stack levels required when called: 2
  9026 ;; This function calls:
  9027 ;;		i2_I2C_2_Master_Start
  9028 ;;		i2_I2C_2_Master_Stop
  9029 ;;		i2_I2C_2_Master_Write
  9030 ;; This function is called by:
  9031 ;;		i2_init_colorclick_interrupts
  9032 ;; This function uses a non-reentrant model
  9033 ;;
  9034                           
  9035                           	psect	text58
  9036   0029CE                     __ptext58:
  9037                           	callstack 0
  9038   0029CE                     i2_color_writetoaddr:
  9039                           	callstack 16
  9040                           
  9041                           ;incstack = 0
  9042                           ;i2color_writetoaddr@address stored from wreg
  9043   0029CE  6E04               	movwf	i2color_writetoaddr@address^0,c
  9044   0029D0                     
  9045                           ;color.c: 23:     I2C_2_Master_Start();
  9046   0029D0  EC48  F015         	call	i2_I2C_2_Master_Start	;wreg free
  9047                           
  9048                           ;color.c: 24:     I2C_2_Master_Write(0x52 | 0x00);
  9049   0029D4  0E52               	movlw	82
  9050   0029D6  EC2E  F015         	call	i2_I2C_2_Master_Write
  9051                           
  9052                           ;color.c: 25:     I2C_2_Master_Write(0x80 | address);
  9053   0029DA  5004               	movf	i2color_writetoaddr@address^0,w,c
  9054   0029DC  0980               	iorlw	128
  9055   0029DE  EC2E  F015         	call	i2_I2C_2_Master_Write
  9056                           
  9057                           ;color.c: 26:     I2C_2_Master_Write(value);
  9058   0029E2  5003               	movf	i2color_writetoaddr@value^0,w,c
  9059   0029E4  EC2E  F015         	call	i2_I2C_2_Master_Write
  9060                           
  9061                           ;color.c: 27:     I2C_2_Master_Stop();
  9062   0029E8  EC43  F015         	call	i2_I2C_2_Master_Stop	;wreg free
  9063   0029EC  0012               	return		;funcret
  9064   0029EE                     __end_ofi2_color_writetoaddr:
  9065                           	callstack 0
  9066                           
  9067 ;; *************** function i2_I2C_2_Master_Write *****************
  9068 ;; Defined at:
  9069 ;;		line 45 in file "i2c.c"
  9070 ;; Parameters:    Size  Location     Type
  9071 ;;  data_byte       1    wreg     unsigned char 
  9072 ;; Auto vars:     Size  Location     Type
  9073 ;;  data_byte       1    1[COMRAM] unsigned char 
  9074 ;; Return value:  Size  Location     Type
  9075 ;;                  1    wreg      void 
  9076 ;; Registers used:
  9077 ;;		wreg, status,2, status,0, cstack
  9078 ;; Tracked objects:
  9079 ;;		On entry : 0/0
  9080 ;;		On exit  : 0/0
  9081 ;;		Unchanged: 0/0
  9082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9084 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9086 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9087 ;;Total ram usage:        1 bytes
  9088 ;; Hardware stack levels used: 1
  9089 ;; Hardware stack levels required when called: 1
  9090 ;; This function calls:
  9091 ;;		i2_I2C_2_Master_Idle
  9092 ;; This function is called by:
  9093 ;;		i2_color_writetoaddr
  9094 ;;		i2_interrupts_clear_colorclick
  9095 ;; This function uses a non-reentrant model
  9096 ;;
  9097                           
  9098                           	psect	text59
  9099   002A5C                     __ptext59:
  9100                           	callstack 0
  9101   002A5C                     i2_I2C_2_Master_Write:
  9102                           	callstack 16
  9103                           
  9104                           ;incstack = 0
  9105                           ;i2I2C_2_Master_Write@data_byte stored from wreg
  9106   002A5C  6E02               	movwf	i2I2C_2_Master_Write@data_byte^0,c
  9107   002A5E                     
  9108                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  9109   002A5E  EC6D  F014         	call	i2_I2C_2_Master_Idle	;wreg free
  9110   002A62                     
  9111                           ;i2c.c: 48:   SSP2BUF = data_byte;
  9112   002A62  C002  FED5         	movff	i2I2C_2_Master_Write@data_byte,3797	;volatile
  9113   002A66  0012               	return		;funcret
  9114   002A68                     __end_ofi2_I2C_2_Master_Write:
  9115                           	callstack 0
  9116                           
  9117 ;; *************** function i2_I2C_2_Master_Stop *****************
  9118 ;; Defined at:
  9119 ;;		line 39 in file "i2c.c"
  9120 ;; Parameters:    Size  Location     Type
  9121 ;;		None
  9122 ;; Auto vars:     Size  Location     Type
  9123 ;;		None
  9124 ;; Return value:  Size  Location     Type
  9125 ;;                  1    wreg      void 
  9126 ;; Registers used:
  9127 ;;		wreg, status,2, status,0, cstack
  9128 ;; Tracked objects:
  9129 ;;		On entry : 0/0
  9130 ;;		On exit  : 0/0
  9131 ;;		Unchanged: 0/0
  9132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9136 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9137 ;;Total ram usage:        0 bytes
  9138 ;; Hardware stack levels used: 1
  9139 ;; Hardware stack levels required when called: 1
  9140 ;; This function calls:
  9141 ;;		i2_I2C_2_Master_Idle
  9142 ;; This function is called by:
  9143 ;;		i2_color_writetoaddr
  9144 ;;		i2_interrupts_clear_colorclick
  9145 ;; This function uses a non-reentrant model
  9146 ;;
  9147                           
  9148                           	psect	text60
  9149   002A86                     __ptext60:
  9150                           	callstack 0
  9151   002A86                     i2_I2C_2_Master_Stop:
  9152                           	callstack 16
  9153   002A86                     
  9154                           ;i2c.c: 41:   I2C_2_Master_Idle();
  9155   002A86  EC6D  F014         	call	i2_I2C_2_Master_Idle	;wreg free
  9156   002A8A                     
  9157                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  9158   002A8A  010E               	movlb	14	; () banked
  9159   002A8C  85DA               	bsf	218,2,b	;volatile
  9160   002A8E                     
  9161                           ; BSR set to: 14
  9162   002A8E  0012               	return		;funcret
  9163   002A90                     __end_ofi2_I2C_2_Master_Stop:
  9164                           	callstack 0
  9165                           
  9166 ;; *************** function i2_I2C_2_Master_Start *****************
  9167 ;; Defined at:
  9168 ;;		line 27 in file "i2c.c"
  9169 ;; Parameters:    Size  Location     Type
  9170 ;;		None
  9171 ;; Auto vars:     Size  Location     Type
  9172 ;;		None
  9173 ;; Return value:  Size  Location     Type
  9174 ;;                  1    wreg      void 
  9175 ;; Registers used:
  9176 ;;		wreg, status,2, status,0, cstack
  9177 ;; Tracked objects:
  9178 ;;		On entry : 0/0
  9179 ;;		On exit  : 0/0
  9180 ;;		Unchanged: 0/0
  9181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9186 ;;Total ram usage:        0 bytes
  9187 ;; Hardware stack levels used: 1
  9188 ;; Hardware stack levels required when called: 1
  9189 ;; This function calls:
  9190 ;;		i2_I2C_2_Master_Idle
  9191 ;; This function is called by:
  9192 ;;		i2_color_writetoaddr
  9193 ;;		i2_interrupts_clear_colorclick
  9194 ;; This function uses a non-reentrant model
  9195 ;;
  9196                           
  9197                           	psect	text61
  9198   002A90                     __ptext61:
  9199                           	callstack 0
  9200   002A90                     i2_I2C_2_Master_Start:
  9201                           	callstack 16
  9202   002A90                     
  9203                           ;i2c.c: 29:   I2C_2_Master_Idle();
  9204   002A90  EC6D  F014         	call	i2_I2C_2_Master_Idle	;wreg free
  9205   002A94                     
  9206                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  9207   002A94  010E               	movlb	14	; () banked
  9208   002A96  81DA               	bsf	218,0,b	;volatile
  9209   002A98                     
  9210                           ; BSR set to: 14
  9211   002A98  0012               	return		;funcret
  9212   002A9A                     __end_ofi2_I2C_2_Master_Start:
  9213                           	callstack 0
  9214                           
  9215 ;; *************** function i2_I2C_2_Master_Idle *****************
  9216 ;; Defined at:
  9217 ;;		line 22 in file "i2c.c"
  9218 ;; Parameters:    Size  Location     Type
  9219 ;;		None
  9220 ;; Auto vars:     Size  Location     Type
  9221 ;;		None
  9222 ;; Return value:  Size  Location     Type
  9223 ;;                  1    wreg      void 
  9224 ;; Registers used:
  9225 ;;		wreg, status,2, status,0
  9226 ;; Tracked objects:
  9227 ;;		On entry : 0/0
  9228 ;;		On exit  : 0/0
  9229 ;;		Unchanged: 0/0
  9230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9233 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9234 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9235 ;;Total ram usage:        1 bytes
  9236 ;; Hardware stack levels used: 1
  9237 ;; This function calls:
  9238 ;;		Nothing
  9239 ;; This function is called by:
  9240 ;;		i2_I2C_2_Master_Start
  9241 ;;		i2_I2C_2_Master_Stop
  9242 ;;		i2_I2C_2_Master_Write
  9243 ;; This function uses a non-reentrant model
  9244 ;;
  9245                           
  9246                           	psect	text62
  9247   0028DA                     __ptext62:
  9248                           	callstack 0
  9249   0028DA                     i2_I2C_2_Master_Idle:
  9250                           	callstack 16
  9251   0028DA                     i2l89:
  9252   0028DA  010E               	movlb	14	; () banked
  9253   0028DC  B5D8               	btfsc	216,2,b	;volatile
  9254   0028DE  EF73  F014         	goto	i2u221_41
  9255   0028E2  EF75  F014         	goto	i2u221_40
  9256   0028E6                     i2u221_41:
  9257   0028E6  EF6D  F014         	goto	i2l89
  9258   0028EA                     i2u221_40:
  9259   0028EA                     
  9260                           ; BSR set to: 14
  9261   0028EA  CEDA F001          	movff	3802,??i2_I2C_2_Master_Idle	;volatile
  9262   0028EE  0E1F               	movlw	31
  9263   0028F0  1601               	andwf	??i2_I2C_2_Master_Idle^0,f,c
  9264   0028F2  A4D8               	btfss	status,2,c
  9265   0028F4  EF7E  F014         	goto	i2u222_41
  9266   0028F8  EF80  F014         	goto	i2u222_40
  9267   0028FC                     i2u222_41:
  9268   0028FC  EF6D  F014         	goto	i2l89
  9269   002900                     i2u222_40:
  9270   002900                     
  9271                           ; BSR set to: 14
  9272   002900  0012               	return		;funcret
  9273   002902                     __end_ofi2_I2C_2_Master_Idle:
  9274                           	callstack 0
  9275   000000                     
  9276                           	psect	rparam
  9277   000000                     
  9278                           	psect	temp
  9279   000057                     btemp:
  9280                           	callstack 0
  9281   000057                     	ds	1
  9282   000000                     int$flags	set	btemp
  9283   000000                     wtemp8	set	btemp+1
  9284   000000                     ttemp5	set	btemp+1
  9285   000000                     ttemp6	set	btemp+4
  9286   000000                     ttemp7	set	btemp+8
  9287                           
  9288                           	psect	idloc
  9289                           
  9290                           ;Config register IDLOC0 @ 0x200000
  9291                           ;	unspecified, using default values
  9292   200000                     	org	2097152
  9293   200000  0FFF               	dw	4095
  9294                           
  9295                           ;Config register IDLOC1 @ 0x200002
  9296                           ;	unspecified, using default values
  9297   200002                     	org	2097154
  9298   200002  0FFF               	dw	4095
  9299                           
  9300                           ;Config register IDLOC2 @ 0x200004
  9301                           ;	unspecified, using default values
  9302   200004                     	org	2097156
  9303   200004  0FFF               	dw	4095
  9304                           
  9305                           ;Config register IDLOC3 @ 0x200006
  9306                           ;	unspecified, using default values
  9307   200006                     	org	2097158
  9308   200006  0FFF               	dw	4095
  9309                           
  9310                           ;Config register IDLOC4 @ 0x200008
  9311                           ;	unspecified, using default values
  9312   200008                     	org	2097160
  9313   200008  0FFF               	dw	4095
  9314                           
  9315                           ;Config register IDLOC5 @ 0x20000A
  9316                           ;	unspecified, using default values
  9317   20000A                     	org	2097162
  9318   20000A  0FFF               	dw	4095
  9319                           
  9320                           ;Config register IDLOC6 @ 0x20000C
  9321                           ;	unspecified, using default values
  9322   20000C                     	org	2097164
  9323   20000C  0FFF               	dw	4095
  9324                           
  9325                           ;Config register IDLOC7 @ 0x20000E
  9326                           ;	unspecified, using default values
  9327   20000E                     	org	2097166
  9328   20000E  0FFF               	dw	4095
  9329                           
  9330                           	psect	config
  9331                           
  9332                           ;Config register CONFIG1L @ 0x300000
  9333                           ;	External Oscillator mode Selection bits
  9334                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  9335                           ;	Power-up default value for COSC bits
  9336                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  9337   300000                     	org	3145728
  9338   300000  AA                 	db	170
  9339                           
  9340                           ;Config register CONFIG1H @ 0x300001
  9341                           ;	unspecified, using default values
  9342                           ;	Clock Out Enable bit
  9343                           ;	CLKOUTEN = 0x1, unprogrammed default
  9344                           ;	Clock Switch Enable bit
  9345                           ;	CSWEN = 0x1, unprogrammed default
  9346                           ;	Fail-Safe Clock Monitor Enable bit
  9347                           ;	FCMEN = 0x1, unprogrammed default
  9348   300001                     	org	3145729
  9349   300001  FF                 	db	255
  9350                           
  9351                           ;Config register CONFIG2L @ 0x300002
  9352                           ;	unspecified, using default values
  9353                           ;	Master Clear Enable bit
  9354                           ;	MCLRE = 0x1, unprogrammed default
  9355                           ;	Power-up Timer Enable bit
  9356                           ;	PWRTE = 0x1, unprogrammed default
  9357                           ;	Low-power BOR enable bit
  9358                           ;	LPBOREN = 0x1, unprogrammed default
  9359                           ;	Brown-out Reset Enable bits
  9360                           ;	BOREN = 0x3, unprogrammed default
  9361   300002                     	org	3145730
  9362   300002  FF                 	db	255
  9363                           
  9364                           ;Config register CONFIG2H @ 0x300003
  9365                           ;	unspecified, using default values
  9366                           ;	Brown Out Reset Voltage selection bits
  9367                           ;	BORV = 0x3, unprogrammed default
  9368                           ;	ZCD Disable bit
  9369                           ;	ZCD = 0x1, unprogrammed default
  9370                           ;	PPSLOCK bit One-Way Set Enable bit
  9371                           ;	PPS1WAY = 0x1, unprogrammed default
  9372                           ;	Stack Full/Underflow Reset Enable bit
  9373                           ;	STVREN = 0x1, unprogrammed default
  9374                           ;	Debugger Enable bit
  9375                           ;	DEBUG = 0x1, unprogrammed default
  9376                           ;	Extended Instruction Set Enable bit
  9377                           ;	XINST = 0x1, unprogrammed default
  9378   300003                     	org	3145731
  9379   300003  FF                 	db	255
  9380                           
  9381                           ;Config register CONFIG3L @ 0x300004
  9382                           ;	WDT Period Select bits
  9383                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  9384                           ;	WDT operating mode
  9385                           ;	WDTE = OFF, WDT Disabled
  9386   300004                     	org	3145732
  9387   300004  9F                 	db	159
  9388                           
  9389                           ;Config register CONFIG3H @ 0x300005
  9390                           ;	unspecified, using default values
  9391                           ;	WDT Window Select bits
  9392                           ;	WDTCWS = 0x7, unprogrammed default
  9393                           ;	WDT input clock selector
  9394                           ;	WDTCCS = 0x7, unprogrammed default
  9395   300005                     	org	3145733
  9396   300005  FF                 	db	255
  9397                           
  9398                           ;Config register CONFIG4L @ 0x300006
  9399                           ;	unspecified, using default values
  9400                           ;	Write Protection Block 0
  9401                           ;	WRT0 = 0x1, unprogrammed default
  9402                           ;	Write Protection Block 1
  9403                           ;	WRT1 = 0x1, unprogrammed default
  9404                           ;	Write Protection Block 2
  9405                           ;	WRT2 = 0x1, unprogrammed default
  9406                           ;	Write Protection Block 3
  9407                           ;	WRT3 = 0x1, unprogrammed default
  9408                           ;	Write Protection Block 3
  9409                           ;	WRT4 = 0x1, unprogrammed default
  9410                           ;	Write Protection Block 3
  9411                           ;	WRT5 = 0x1, unprogrammed default
  9412                           ;	Write Protection Block 3
  9413                           ;	WRT6 = 0x1, unprogrammed default
  9414                           ;	Write Protection Block 3
  9415                           ;	WRT7 = 0x1, unprogrammed default
  9416   300006                     	org	3145734
  9417   300006  FF                 	db	255
  9418                           
  9419                           ;Config register CONFIG4H @ 0x300007
  9420                           ;	unspecified, using default values
  9421                           ;	Configuration Register Write Protection bit
  9422                           ;	WRTC = 0x1, unprogrammed default
  9423                           ;	Boot Block Write Protection bit
  9424                           ;	WRTB = 0x1, unprogrammed default
  9425                           ;	Data EEPROM Write Protection bit
  9426                           ;	WRTD = 0x1, unprogrammed default
  9427                           ;	Scanner Enable bit
  9428                           ;	SCANE = 0x1, unprogrammed default
  9429                           ;	Low Voltage Programming Enable bit
  9430                           ;	LVP = 0x1, unprogrammed default
  9431   300007                     	org	3145735
  9432   300007  FF                 	db	255
  9433                           
  9434                           ;Config register CONFIG5L @ 0x300008
  9435                           ;	unspecified, using default values
  9436                           ;	UserNVM Program Memory Code Protection bit
  9437                           ;	CP = 0x1, unprogrammed default
  9438                           ;	DataNVM Memory Code Protection bit
  9439                           ;	CPD = 0x1, unprogrammed default
  9440   300008                     	org	3145736
  9441   300008  FF                 	db	255
  9442                           
  9443                           ;Config register CONFIG5H @ 0x300009
  9444                           ;	unspecified, using default values
  9445   300009                     	org	3145737
  9446   300009  FF                 	db	255
  9447                           
  9448                           ;Config register CONFIG6L @ 0x30000A
  9449                           ;	unspecified, using default values
  9450                           ;	Table Read Protection Block 0
  9451                           ;	EBTR0 = 0x1, unprogrammed default
  9452                           ;	Table Read Protection Block 1
  9453                           ;	EBTR1 = 0x1, unprogrammed default
  9454                           ;	Table Read Protection Block 2
  9455                           ;	EBTR2 = 0x1, unprogrammed default
  9456                           ;	Table Read Protection Block 3
  9457                           ;	EBTR3 = 0x1, unprogrammed default
  9458                           ;	Table Read Protection Block 4
  9459                           ;	EBTR4 = 0x1, unprogrammed default
  9460                           ;	Table Read Protection Block 5
  9461                           ;	EBTR5 = 0x1, unprogrammed default
  9462                           ;	Table Read Protection Block 6
  9463                           ;	EBTR6 = 0x1, unprogrammed default
  9464                           ;	Table Read Protection Block 7
  9465                           ;	EBTR7 = 0x1, unprogrammed default
  9466   30000A                     	org	3145738
  9467   30000A  FF                 	db	255
  9468                           
  9469                           ;Config register CONFIG6H @ 0x30000B
  9470                           ;	unspecified, using default values
  9471                           ;	Boot Block Table Read Protection bit
  9472                           ;	EBTRB = 0x1, unprogrammed default
  9473   30000B                     	org	3145739
  9474   30000B  FF                 	db	255
  9475                           tosu	equ	0xFFF
  9476                           tosh	equ	0xFFE
  9477                           tosl	equ	0xFFD
  9478                           stkptr	equ	0xFFC
  9479                           pclatu	equ	0xFFB
  9480                           pclath	equ	0xFFA
  9481                           pcl	equ	0xFF9
  9482                           tblptru	equ	0xFF8
  9483                           tblptrh	equ	0xFF7
  9484                           tblptrl	equ	0xFF6
  9485                           tablat	equ	0xFF5
  9486                           prodh	equ	0xFF4
  9487                           prodl	equ	0xFF3
  9488                           indf0	equ	0xFEF
  9489                           postinc0	equ	0xFEE
  9490                           postdec0	equ	0xFED
  9491                           preinc0	equ	0xFEC
  9492                           plusw0	equ	0xFEB
  9493                           fsr0h	equ	0xFEA
  9494                           fsr0l	equ	0xFE9
  9495                           wreg	equ	0xFE8
  9496                           indf1	equ	0xFE7
  9497                           postinc1	equ	0xFE6
  9498                           postdec1	equ	0xFE5
  9499                           preinc1	equ	0xFE4
  9500                           plusw1	equ	0xFE3
  9501                           fsr1h	equ	0xFE2
  9502                           fsr1l	equ	0xFE1
  9503                           bsr	equ	0xFE0
  9504                           indf2	equ	0xFDF
  9505                           postinc2	equ	0xFDE
  9506                           postdec2	equ	0xFDD
  9507                           preinc2	equ	0xFDC
  9508                           plusw2	equ	0xFDB
  9509                           fsr2h	equ	0xFDA
  9510                           fsr2l	equ	0xFD9
  9511                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         210
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     78      86
    BANK0           160     53     117
    BANK1           256      0     140
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    Return_Time@time_index	PTR unsigned char  size(2) Largest target is 1
		 -> time_index(BANK0[1]), 

    Return_Time@time_array	PTR unsigned int  size(2) Largest target is 80
		 -> time_array(BANK1[80]), 

    Return_Anti_Moves@moves_index	PTR unsigned char  size(2) Largest target is 1
		 -> moves_index(COMRAM[1]), 

    Return_Anti_Moves@anti_moves_array	PTR unsigned char  size(2) Largest target is 40
		 -> anti_moves_array(BANK0[40]), 

    AppendTime@time_index	PTR unsigned char  size(2) Largest target is 1
		 -> time_index(BANK0[1]), 

    AppendTime@time_array	PTR unsigned int  size(2) Largest target is 80
		 -> time_array(BANK1[80]), 

    AppendMoves@moves_index	PTR unsigned char  size(2) Largest target is 1
		 -> moves_index(COMRAM[1]), 

    AppendMoves@anti_moves_array	PTR unsigned char  size(2) Largest target is 40
		 -> anti_moves_array(BANK0[40]), 

    MoveBuggy@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    MoveBuggy@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    MoveBuggy@color_detected	PTR unsigned char  size(2) Largest target is 3561
		 -> RAM(DATA[3561]), 

    WhiteInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    WhiteInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    AntiPink@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    AntiPink@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    AntiYellow@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    AntiYellow@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    LightBlueInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    LightBlueInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    OrangeInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    OrangeInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    PinkInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    PinkInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    YellowInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    YellowInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    BlueInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    BlueInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    GreenInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    GreenInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    RedInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    RedInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    turnLeft135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnLeft135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnRight135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnRight135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnRight90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnRight90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnLeft90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnLeft90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    fullSpeedBackwards@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    fullSpeedBackwards@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    fullSpeedBackwards@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    fullSpeedBackwards@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    fullSpeedBackwards@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    fullSpeedBackwards@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    S1213DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    S1213DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), main@motorL(BANK0[9]), 

    detect_color@tempval	PTR struct RGB_val size(2) Largest target is 8
		 -> main@initial_color(BANK0[8]), 

    Update_RGBC@tempval	PTR struct RGB_val size(2) Largest target is 8
		 -> main@initial_color(BANK0[8]), 


Critical Paths under _main in COMRAM

    _detect_color->___fltol
    ___fltol->___flmul
    ___flmul->___fldiv
    ___fldiv->___xxtofl
    _color_click_init->_color_writetoaddr
    _WhiteInstructions->_MoveBuggy
    _MoveBuggy->_AntiPink
    _MoveBuggy->_AntiYellow
    _YellowInstructions->_turnRight90
    _PinkInstructions->_turnLeft90
    _OrangeInstructions->_turnRight135
    _turnRight135->_turnRight90
    _LightBlueInstructions->_turnLeft135
    _turnLeft135->_turnLeft90
    _AntiYellow->_BlueInstructions
    _AntiYellow->_RedInstructions
    _RedInstructions->_turnRight90
    _turnRight90->_turnRight
    _turnRight->_setMotorPWM
    _AntiPink->_BlueInstructions
    _AntiPink->_GreenInstructions
    _fullSpeedAhead->_setMotorPWM
    _GreenInstructions->_turnLeft90
    _BlueInstructions->_turnLeft90
    _turnLeft90->_turnLeft
    _turnLeft->_setMotorPWM
    _stop->_setMotorPWM
    _fullSpeedBackwards->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _Update_RGBC->_color_read_Blue
    _Update_RGBC->_color_read_Clear
    _Update_RGBC->_color_read_Green
    _Update_RGBC->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _interrupts_clear_colorclick->_init_colorclick_interrupts
    _init_colorclick_interrupts->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _LowISR in COMRAM

    None.

Critical Paths under _HighISR in COMRAM

    i2_interrupts_clear_colorclick->i2_init_colorclick_interrupts
    i2_init_colorclick_interrupts->i2_color_writetoaddr
    i2_color_writetoaddr->i2_I2C_2_Master_Write
    i2_I2C_2_Master_Write->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Stop->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Start->i2_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_detect_color
    _detect_color->___fltol

Critical Paths under _LowISR in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowISR in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowISR in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowISR in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowISR in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowISR in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowISR in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowISR in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowISR in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowISR in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LowISR in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowISR in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowISR in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowISR in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                31    31      0  490094
                                             22 BANK0     31    31      0
                         _AppendTime
                    _Interrupts_init
                           _LED_init
                          _MoveBuggy
                        _Timer0_init
                        _Update_RGBC
                  _WhiteInstructions
                         _WhiteLight
                   _color_click_init
                       _detect_color
                     _fullSpeedAhead
                    _initDCmotorsPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _detect_color                                        18    16      2    6580
                                              4 BANK0     18    16      2
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     616
                                              8 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     517
                                             72 COMRAM     6     2      4
                                              0 BANK0      4     4      0
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    1886
                                             47 COMRAM    25    17      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1541
                                             22 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     750
                                             12 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _WhiteLight                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _WhiteInstructions                                   11     7      4  248861
                                             58 COMRAM    11     7      4
                   _BlueInstructions
                          _MoveBuggy
                  _Return_Anti_Moves
                        _Return_Time
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (2) _Return_Time                                          9     5      4     219
                                              8 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (2) _Return_Anti_Moves                                    6     2      4     219
                                              8 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _MoveBuggy                                            6     0      6  222680
                                             52 COMRAM     6     0      6
                           _AntiPink
                         _AntiYellow
                        _AppendMoves
                   _BlueInstructions
                  _GreenInstructions
              _LightBlueInstructions
                 _OrangeInstructions
                   _PinkInstructions
                    _RedInstructions
                 _YellowInstructions
 ---------------------------------------------------------------------------------
 (3) _YellowInstructions                                   7     3      4   16596
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                        _turnRight90
 ---------------------------------------------------------------------------------
 (3) _PinkInstructions                                     7     3      4   17204
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                         _turnLeft90
 ---------------------------------------------------------------------------------
 (3) _OrangeInstructions                                   7     3      4   24393
                                             43 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                       _turnRight135
 ---------------------------------------------------------------------------------
 (4) _turnRight135                                         5     1      4   15988
                                             38 COMRAM     5     1      4
                               _stop
                          _turnRight
                        _turnRight90
 ---------------------------------------------------------------------------------
 (3) _LightBlueInstructions                                7     3      4   25001
                                             43 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                        _turnLeft135
 ---------------------------------------------------------------------------------
 (4) _turnLeft135                                          5     1      4   16596
                                             38 COMRAM     5     1      4
                               _stop
                           _turnLeft
                         _turnLeft90
 ---------------------------------------------------------------------------------
 (3) _AppendMoves                                          6     2      4    1130
                                              8 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _AntiYellow                                           7     3      4   42445
                                             45 COMRAM     7     3      4
                   _BlueInstructions
                    _RedInstructions
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (3) _RedInstructions                                      7     3      4   16748
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                        _turnRight90
 ---------------------------------------------------------------------------------
 (4) _turnRight90                                          5     1      4    8191
                                             33 COMRAM     5     1      4
                               _stop
                          _turnRight
 ---------------------------------------------------------------------------------
 (5) _turnRight                                            6     2      4    2593
                                             27 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _AntiPink                                             7     3      4   43053
                                             45 COMRAM     7     3      4
                   _BlueInstructions
                  _GreenInstructions
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (1) _fullSpeedAhead                                       6     2      4    2745
                                             27 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _GreenInstructions                                    7     3      4   17356
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                         _turnLeft90
 ---------------------------------------------------------------------------------
 (3) _BlueInstructions                                     7     3      4   17704
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                         _turnLeft90
 ---------------------------------------------------------------------------------
 (4) _turnLeft90                                           5     1      4    8799
                                             33 COMRAM     5     1      4
                               _stop
                           _turnLeft
 ---------------------------------------------------------------------------------
 (5) _turnLeft                                             6     2      4    2593
                                             27 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _stop                                                 5     1      4    4873
                                             27 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _fullSpeedBackwards                                   6     2      4    3201
                                             27 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    1829
                                             21 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                              8 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     358
                                             14 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Update_RGBC                                          2     0      2     616
                                             19 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              9 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0     772
        _interrupts_clear_colorclick
 ---------------------------------------------------------------------------------
 (2) _interrupts_clear_colorclick                          0     0      0     772
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
         _init_colorclick_interrupts
 ---------------------------------------------------------------------------------
 (3) _init_colorclick_interrupts                           1     1      0     750
                                             12 COMRAM     1     1      0
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     750
                                             10 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              9 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              8 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _AppendTime                                           9     3      6     522
                                              8 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _LowISR                                               3     3      0       0
                                              5 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _HighISR                                             0     0      0     244
      i2_interrupts_clear_colorclick
 ---------------------------------------------------------------------------------
 (11) i2_interrupts_clear_colorclick                       0     0      0     244
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
       i2_init_colorclick_interrupts
 ---------------------------------------------------------------------------------
 (12) i2_init_colorclick_interrupts                        1     1      0     222
                                              4 COMRAM     1     1      0
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (13) i2_color_writetoaddr                                 2     1      1     222
                                              2 COMRAM     2     1      1
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (14) i2_I2C_2_Master_Write                                1     1      0      22
                                              1 COMRAM     1     1      0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (14) i2_I2C_2_Master_Stop                                 0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (14) i2_I2C_2_Master_Start                                0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (15) i2_I2C_2_Master_Idle                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AppendTime
   _Interrupts_init
     _interrupts_clear_colorclick
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
       _init_colorclick_interrupts
         _color_writetoaddr
           _I2C_2_Master_Start
           _I2C_2_Master_Stop
           _I2C_2_Master_Write
   _LED_init
   _MoveBuggy
     _AntiPink
       _BlueInstructions
         _fullSpeedBackwards
           _setMotorPWM
             ___lwdiv
               ___wmul (ARG)
             ___wmul
         _stop
           _setMotorPWM
         _turnLeft90
           _stop
           _turnLeft
             _setMotorPWM
       _GreenInstructions
         _fullSpeedBackwards
         _stop
         _turnLeft90
       _fullSpeedAhead
         _setMotorPWM
       _stop
     _AntiYellow
       _BlueInstructions
       _RedInstructions
         _fullSpeedBackwards
         _stop
         _turnRight90
           _stop
           _turnRight
             _setMotorPWM
       _fullSpeedAhead
       _stop
     _AppendMoves
     _BlueInstructions
     _GreenInstructions
     _LightBlueInstructions
       _fullSpeedBackwards
       _stop
       _turnLeft135
         _stop
         _turnLeft
         _turnLeft90
     _OrangeInstructions
       _fullSpeedBackwards
       _stop
       _turnRight135
         _stop
         _turnRight
         _turnRight90
     _PinkInstructions
       _fullSpeedBackwards
       _stop
       _turnLeft90
     _RedInstructions
     _YellowInstructions
       _fullSpeedBackwards
       _stop
       _turnRight90
   _Timer0_init
   _Update_RGBC
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Clear
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _WhiteInstructions
     _BlueInstructions
     _MoveBuggy
     _Return_Anti_Moves
     _Return_Time
     _fullSpeedAhead
     _stop
   _WhiteLight
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
   _detect_color
     ___fldiv
       ___xxtofl (ARG)
     ___flmul
       ___fldiv (ARG)
       ___xxtofl (ARG)
     ___fltol
       ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _fullSpeedAhead
   _initDCmotorsPWM
   _stop

 _LowISR (ROOT)

 _HighISR (ROOT)
   i2_interrupts_clear_colorclick
     i2_I2C_2_Master_Start
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Stop
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Write
       i2_I2C_2_Master_Idle
     i2_init_colorclick_interrupts
       i2_color_writetoaddr
         i2_I2C_2_Master_Start
         i2_I2C_2_Master_Stop
         i2_I2C_2_Master_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      62        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      8C       7       54.7%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     35      75       5       73.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4E      56       1       91.5%
BITBIGSFRhllllh     52      0       0      40        0.0%
BITBIGSFRhlllll     37      0       0      42        0.0%
BITBIGSFRllh        2D      0       0      45        0.0%
BITBIGSFRlllhll     2A      0       0      53        0.0%
BITBIGSFRlllll      26      0       0      60        0.0%
BITBIGSFRhhhlll     1D      0       0      38        0.0%
BITBIGSFRhhhhlh     1B      0       0      33        0.0%
BITBIGSFRhhhhll     13      0       0      34        0.0%
BITBIGSFRlllhhh     11      0       0      47        0.0%
BITBIGSFRlllhhh     11      0       0      48        0.0%
BITBIGSFRhhhlhh      E      0       0      35        0.0%
BITBIGSFRhhhhh       D      0       0      32        0.0%
BITBIGSFRlllhhh      C      0       0      46        0.0%
BITBIGSFRlllhll      9      0       0      57        0.0%
BITBIGSFRhlllll      8      0       0      43        0.0%
BITBIGSFRllllh       6      0       0      59        0.0%
BITBIGSFRlllhll      6      0       0      52        0.0%
BITBIGSFRlllhll      5      0       0      55        0.0%
BITBIGSFRlllhlh      5      0       0      51        0.0%
BITBIGSFRlllhll      3      0       0      54        0.0%
BITBIGSFRlllhll      3      0       0      56        0.0%
BITBIGSFRlllhhl      3      0       0      50        0.0%
BITBIGSFRhlllll      2      0       0      41        0.0%
BITBIGSFRhhhllh      2      0       0      37        0.0%
BITBIGSFRhhhlhl      1      0       0      36        0.0%
BITBIGSFRlllhhh      1      0       0      49        0.0%
BITBIGSFRhlllh       1      0       0      39        0.0%
BITBIGSFRlllhll      1      0       0      58        0.0%
BITBIGSFRlh          1      0       0      44        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     157      61        0.0%
DATA                 0      0     157       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sat Mar 11 22:28:05 2023

                       _color_read_Red 2582                           ___fldiv@aexp 002F  
                         ___fldiv@bexp 002E                           ___fldiv@sign 0027  
                      _color_read_Blue 2672                                     l21 2854  
                                   l30 2620                                     l24 29AC  
                                   l33 26C0                                     l42 0674  
                                   l27 25D0                                     l36 2670  
                                   l39 2580                                     l59 067A  
                                   l92 28D8                                     l86 28B0  
                                   l95 2A84                                     l89 28B2  
                                   l98 2A70                                     bsr 000FE0  
                  ___wmul@multiplicand 000B                       _anti_moves_array 0075  
                     _color_read_Clear 2622                       _color_read_Green 25D2  
           WhiteInstructions@anticolor 0043                      ??_Interrupts_init 000E  
                                  l101 2A7A                                    l104 2A5A  
                                  l201 1A00                                    l130 2A4E  
                                  l107 27E8                                    l211 1912  
                                  l133 2AA0                                    l206 1824  
                                  l231 201E                                    l312 2A0A  
                                  l216 1AEE                                    l322 2A24  
                                  l246 1F70                                    l319 2710  
                                  l191 162E                                    l184 20AE  
                                  l258 24B4                                    l267 2522  
                                  l436 298C                                    l196 1CAC  
                                  l607 2240                                    l616 22C6  
                                  l625 1D5E                                    l634 1E10  
                                  l562 234C                                    l571 23D2  
                                  l580 1EC2                                    l646 1BD8  
                                  l673 10C2                                    l690 296C  
                                  l684 294A                                    l589 2134  
                                  l693 2820                                    l598 21BA  
                                  l687 2886                                    l696 2926  
                                  l993 1736                    i2_color_writetoaddr 29CE  
                                  wreg 000FE8                           ___flmul@aexp 0041  
                         ___flmul@bexp 0042                           ___flmul@sign 003C  
                         ___flmul@temp 0047                           ___flmul@prod 0043  
                         ___fltol@exp1 004E                                   l1310 0740  
                                 l1320 099C                                   l3001 1E1A  
                                 l1314 0AA4                                   l3011 1E5A  
                                 l3003 1E2E                                   l3013 1E6A  
                                 l3005 1E30                                   l3101 21C4  
                                 l1317 0936                                   l3031 2A68  
                                 l3015 1E82                                   l3007 1E44  
                                 l3111 2204                                   l3103 21D8  
                                 l1327 0A66                                   l1319 09AE  
                                 l1351 1366                                   l1280 0C9E  
                                 l3041 27BE                                   l3033 2A6C  
                                 l3201 25D2                                   l3017 1E96  
                                 l3009 1E58                                   l3121 225E  
                                 l3113 2214                                   l3105 21DA  
                                 l1194 2446                                   l1354 14C2  
                                 l3051 26CC                                   l3043 27E4  
                                 l3035 27AA                                   l3203 2618  
                                 l1187 243E                                   l3131 229A  
                                 l3123 2260                                   l3115 222C  
                                 l3107 21EE                                   l1291 0D5C  
                                 l1283 0C62                                   l1292 0D4A  
                                 l3061 2704                                   l3053 26DC  
                                 l3045 27E6                                   l3037 27AE  
                                 l3213 2622                                   l3141 1CE2  
                                 l3133 22B2                                   l3125 2274  
                                 l3117 2242                                   l3109 2202  
                                 l3221 0E40                                   l3301 0AC0  
                                 l1365 145A                                   l4101 03A8  
                                 l1278 0E3E                                   l1358 13FE  
                                 l3055 26E6                                   l3039 27B6  
                                 l3207 2672                                   l3215 2668  
                                 l3151 1D22                                   l3143 1CF6  
                                 l3135 1CAE                                   l3127 2288  
                                 l3119 224A                                   l3071 20E2  
                                 l3063 20B0                                   l3231 0EA2  
                                 l3223 0E52                                   l3311 0AF4  
                                 l3303 0AC2                                   l4031 1630  
                                 l4111 03F8                                   l4103 03B8  
                                 l3057 26F0                                   l3049 26C2  
                                 l3209 26B8                                   l3161 1D78  
                                 l3153 1D32                                   l3145 1CF8  
                                 l3137 1CB2                                   l3129 228A  
                                 l3081 2136                                   l3073 20F6  
                                 l3065 20B8                                   l3241 0F06  
                                 l3233 0EB6                                   l3225 0E66  
                                 l1289 0CE4                                   l3321 0B26  
                                 l3305 0AD2                                   l3313 0AFC  
                                 l4041 1688                                   l4033 1646  
                                 l4121 0440                                   l4105 03C8  
                                 l4113 0400                                   l4201 10C4  
                                 l3059 26FA                                   l3219 2A0C  
                                 l3171 1DD2                                   l3163 1D94  
                                 l3155 1D4A                                   l3147 1D0C  
                                 l3139 1CC6                                   l3091 217C  
                                 l3083 213E                                   l3075 20F8  
                                 l3067 20CC                                   l3251 0F64  
                                 l3243 0F14                                   l3235 0EC4  
                                 l3227 0E74                                   l3403 0D6C  
                                 l3411 0DB4                                   l3331 0B5A  
                                 l3323 0B28                                   l3315 0B0C  
                                 l3307 0AE2                                   l4043 1698  
                                 l4131 0488                                   l4123 0450  
                                 l4115 0410                                   l4107 03D8  
                                 l4211 1108                                   l4203 10E6  
                                 l3173 1DD4                                   l3165 1DA8  
                                 l3157 1D60                                   l3149 1D20  
                                 l3093 217E                                   l3085 2152  
                                 l3077 2108                                   l3069 20CE  
                                 l3261 0FCE                                   l3253 0F7E  
                                 l3245 0F2E                                   l3237 0EDE  
                                 l3229 0E8E                                   l3421 0E1E  
                                 l3413 0DCE                                   l3405 0D78  
                                 l3341 0BA0                                   l3325 0B38  
                                 l3333 0B62                                   l3317 0B12  
                                 l3309 0AF2                                   l3501 083C  
                                 l4053 16C2                                   l4045 169C  
                                 l4037 165A                                   l4133 0498  
                                 l4141 04D0                                   l4125 0460  
                                 l4117 0420                                   l4109 03E8  
                                 l4221 1126                                   l4213 110C  
                                 l4205 10EA                                   l3175 1DE4  
                                 l3167 1DAA                                   l3159 1D64  
                                 l3095 218E                                   l3087 2154  
                                 l3079 2120                                   l3271 1032  
                                 l3263 0FE2                                   l3255 0F92  
                                 l3247 0F42                                   l3239 0EF2  
                                 l3191 289C                                   l3183 2888  
                                 l3423 0E2C                                   l3415 0DE4  
                                 l3407 0D86                                   l3351 0BC8  
                                 l3343 0BA4                                   l3335 0B72  
                                 l3327 0B48                                   l3319 0B18  
                                 l3511 08BA                                   l3503 084C  
                                 l4071 1726                                   l4063 16EA  
                                 l4055 16CC                                   l4047 16AA  
                                 l4039 1686                                   l4151 0520  
                                 l4143 04E0                                   l4135 04A8  
                                 l4119 0430                                   l4127 0468  
                                 l4231 1142                                   l4223 112A  
                                 l4215 1110                                   l4207 10EE  
                                 l2801 19D0                                   l3177 1DFC  
                                 l3169 1DBE                                   l3097 21A6  
                                 l3089 2168                                   l3281 109A  
                                 l3273 1046                                   l3265 0FF6  
                                 l3257 0FA6                                   l3249 0F56  
                                 l3193 289E                                   l3185 2892  
                                 l3425 0E32                                   l3417 0DFE  
                                 l3409 0DB0                                   l3361 0C16  
                                 l3337 0B88                                   l3329 0B58  
                                 l3521 0934                                   l3513 08F0  
                                 l3505 0868                                   l3441 0698  
                                 l4065 16F6                                   l4057 16D6  
                                 l4161 0568                                   l4153 0530  
                                 l4145 04F0                                   l4137 04B8  
                                 l4129 0478                                   l4081 0234  
                                 l4241 117E                                   l4233 1148  
                                 l4225 112E                                   l4217 1118  
                                 l4209 1102                                   l3195 2582  
                                 l2731 23DC                                   l2723 2902  
                                 l2803 19DC                                   l2811 17A0  
                                 l3179 292A                                   l3099 21BC  
                                 l3283 10AE                                   l3275 1054  
                                 l3267 1004                                   l3259 0FB4  
                                 l3291 294C                                   l3187 2898  
                                 l3427 0E34                                   l3419 0E1A  
                                 l3371 0C60                                   l3363 0C26  
                                 l3355 0BDC                                   l3339 0B98  
                                 l3347 0BB8                                   l3531 0994  
                                 l3523 0946                                   l3515 08FE  
                                 l3507 0874                                   l3451 06DE  
                                 l3443 06A8                                   l3435 067C  
                                 l4067 1706                                   l3611 1322  
                                 l4171 05B0                                   l4163 0578  
                                 l4147 0500                                   l4155 0538  
                                 l4139 04C8                                   l4091 0360  
                                 l4083 0320                                   l4075 005C  
                                 l4251 11C6                                   l4243 1190  
                                 l4235 1150                                   l4227 1132  
                                 l4219 1120                                   l3197 25C8  
                                 l2741 2412                                   l2733 23EE  
                                 l2725 291E                                   l2805 19E8  
                                 l2821 1800                                   l2813 17BC  
                                 l2901 1F4A                                   l3277 106E  
                                 l3269 101E                                   l3293 296A  
                                 l3285 27EA                                   l3189 289A  
                                 l3381 0CAE                                   l3373 0C6C  
                                 l3365 0C2E                                   l3357 0BF6  
                                 l3349 0BC8                                   l3541 0A02  
                                 l3525 0954                                   l3517 091C  
                                 l3509 0890                                   l3461 070A  
                                 l3453 06E4                                   l3445 06B8  
                                 l3437 0688                                   l4069 1716  
                                 l3621 13A0                                   l3613 1330  
                                 l4181 0600                                   l4173 05C0  
                                 l4165 0588                                   l4157 0548  
                                 l4149 0510                                   l4093 0370  
                                 l4085 0330                                   l4077 0062  
                                 l4261 121C                                   l4253 11E6  
                                 l4237 115E                                   l4245 1194  
                                 l4229 113A                                   l2831 2A56  
                                 l2911 2990                                   l2743 2428  
                                 l2735 23F6                                   l2751 14C4  
                                 l2823 180C                                   l2815 17C8  
                                 l2807 1738                                   l2903 1F5E  
                                 l3279 1082                                   l3287 2818  
                                 l3383 0CC4                                   l3391 0CF4  
                                 l3375 0C8A                                   l3367 0C3E  
                                 l3359 0C06                                   l3551 0A6A  
                                 l3535 09BE                                   l3543 0A06  
                                 l3527 0958                                   l3519 0926  
                                 l3471 0760                                   l3463 071A  
                                 l3455 06EA                                   l3447 06C8  
                                 l3439 0696                                   l3631 13F4  
                                 l3623 13A8                                   l3615 1376  
                                 l4191 0648                                   l4175 05D0  
                                 l4183 0608                                   l4167 0598  
                                 l4159 0558                                   l4095 0380  
                                 l4087 0340                                   l4079 0148  
                                 l4263 1236                                   l4255 11EC  
                                 l4271 126A                                   l4247 11A4  
                                 l4239 1172                                   l2825 2A7C  
                                 l2833 2A72                                   l2745 2430  
                                 l2737 23FE                                   l2729 23D4  
                                 l2761 158E                                   l2753 14E0  
                                 l2841 1A6A                                   l2921 18B6  
                                 l2913 1826                                   l2817 17DE  
                                 l2809 1794                                   l2905 1F60  
                                 l3393 0D02                                   l3385 0CCA  
                                 l3377 0C8C                                   l3369 0C52  
                                 l3297 0AA6                                   l3561 0A94  
                                 l3553 0A7A                                   l3545 0A20  
                                 l3537 09CA                                   l3529 0966  
                                 l3481 07A0                                   l3465 072A  
                                 l3457 06F8                                   l3449 06CE  
                                 l3641 146A                                   l3633 1430  
                                 l3625 13B4                                   l3617 138C  
                                 l3609 1312                                   l4193 0658  
                                 l4185 0618                                   l4177 05E0  
                                 l4169 05A0                                   l4097 0390  
                                 l4089 0350                                   l4281 12BE  
                                 l4273 127C                                   l4265 1238  
                                 l4257 1200                                   l4249 11B4  
                                 l2827 2A80                                   l2835 2A76  
                                 l2747 2432                                   l2739 240C  
                                 l2763 15AA                                   l2755 1534  
                                 l2851 1ACA                                   l2843 1A86  
                                 l2771 1BDA                                   l2923 18CC  
                                 l2915 1882                                   l2819 17F4  
                                 l2931 2448                                   l3395 0D06  
                                 l3387 0CD4                                   l3379 0C9C  
                                 l3299 0AB2                                   l3555 0A88  
                                 l3547 0A34                                   l3539 09D8  
                                 l3491 07EA                                   l3483 07AC  
                                 l3475 0774                                   l3467 0730  
                                 l3459 06FA                                   l3651 14B2  
                                 l3643 146E                                   l3635 143C  
                                 l3627 13E6                                   l4195 0668  
                                 l4187 0628                                   l4179 05F0  
                                 l4099 0398                                   l3811 2020  
                                 l4283 12D2                                   l4275 129C  
                                 l4267 125C                                   l4259 1208  
                                 l2829 2A52                                   l2749 2438  
                                 l2765 15EE                                   l2757 1548  
                                 l2853 1AD6                                   l2845 1A92  
                                 l2837 1A02                                   l2781 1C58  
                                 l2773 1C12                                   l2861 1F90  
                                 l2925 18E2                                   l2917 188E  
                                 l2941 248E                                   l2933 245C  
                                 l3397 0D14                                   l3389 0CE2  
                                 l3557 0A8A                                   l3549 0A4E  
                                 l3493 07F6                                   l3485 07C4  
                                 l3477 0780                                   l3469 0750  
                                 l3645 1492                                   l3637 144A  
                                 l3629 13E8                                   l4189 0638  
                                 l4197 0670                                   l3821 2088  
                                 l3813 2030                                   l4285 12EC  
                                 l4277 12A2                                   l4269 1262  
                                 l2767 28B2                                   l3807 2A40  
                                 l2759 154C                                   l2847 1AA8  
                                 l2839 1A5E                                   l2783 1C86  
                                 l2775 1C1E                                   l2791 1970  
                                 l2871 1FE2                                   l2863 1FA4  
                                 l2855 1F72                                   l2927 18EE  
                                 l2919 18AA                                   l2951 24D2  
                                 l2943 24A2                                   l2935 2464  
                                 l3671 2826                                   l3399 0D42  
                                 l3559 0A90                                   l3495 0806  
                                 l3487 07D0                                   l3479 078A  
                                 l3647 14A2                                   l3639 1468  
                                 l3831 20A2                                   l3823 208A  
                                 l3815 2056                                   l4287 1300  
                                 l4279 12B6                                   l2769 28C2  
                                 l3841 2A06                                   l2849 1ABE  
                                 l2785 1C92                                   l2777 1C36  
                                 l2793 197C                                   l2873 1FE4  
                                 l2865 1FB8                                   l2857 1F7A  
                                 l2929 18FA                                   l2881 1EC4  
                                 l2961 2512                                   l2953 24E6  
                                 l2945 24A4                                   l2937 2478  
                                 l3809 2A9A                                   l3673 2830  
                                 l3497 0812                                   l3489 07DC  
                                 l3649 14B0                                   l3833 20AC  
                                 l3825 2094                                   l3817 205A  
                                 l4289 1302                                   l3843 2A08  
                                 l3835 29EE                                   l2787 1C9E  
                                 l2779 1C42                                   l2795 1998  
                                 l2875 1FF8                                   l2867 1FBA  
                                 l2859 1F8E                                   l2891 1F0A  
                                 l2883 1ECC                                   l2971 22FA  
                                 l2963 22C8                                   l2955 24E8  
                                 l2947 24B6                                   l2939 247A  
                                 l3675 2840                                   l3499 0822  
                                 l3827 2096                                   l3819 207E  
                                 l3861 2856                                   l3837 2A00  
                                 l3853 296E                                   l2797 19A4  
                                 l2789 1914                                   l2877 200C  
                                 l2869 1FCE                                   l2981 234E  
                                 l2893 1F0C                                   l2885 1EE0  
                                 l2973 230E                                   l2965 22D0  
                                 l2957 24FC                                   l2949 24CA  
                                 l3677 284A                                   l3669 2822  
                                 l3829 20A0                                   l3839 2A04  
                                 l3855 2976                                   l3679 2524  
                                 l2799 19BA                                   l2879 200E  
                                 l2991 2394                                   l2983 2356  
                                 l2895 1F20                                   l2887 1EE2  
                                 l2975 2310                                   l2967 22E4  
                                 l2959 2510                                   l3871 1B44  
                                 l3863 1AF0                                   l3857 2980  
                                 l2993 2396                                   l2985 236A  
                                 l2897 1F34                                   l2889 1EF6  
                                 l2977 2320                                   l2969 22E6  
                                 l3881 1B8E                                   l3873 1B48  
                                 l3865 1B08                                   l3859 298A  
                                 l2995 23A6                                   l2987 236C  
                                 l2899 1F36                                   l2979 2338  
                                 l3883 1BA4                                   l3875 1B62  
                                 l3867 1B10                                   l2997 23BE  
                                 l2989 2380                                   l3877 1B76  
                                 l3869 1B30                                   l3885 1BC6  
                                 l2999 1E12                                   l3879 1B7C  
                                 u2000 2428                                   u2001 2424  
                                 u2010 14E0                                   u2011 14DC  
                                 u2020 15AA                                   u2100 17BC  
                                 u2021 15A6                                   u2101 17B8  
                                 u2030 28C2                                   u2110 1A5E  
                                 u2031 28BE                                   u2111 1A5A  
                                 u2040 28D8                                   u2120 1A86  
                                 u2200 1F70                                   u3000 0994  
                                 u2041 28D4                                   u2121 1A82  
                                 u2201 1F6C                                   u3001 0990  
                                 u2050 1C12                                   u2130 1FA0  
                                 u3010 09AA                                   u2051 1C0E  
                                 u2131 1F9C                                   u3011 09A6  
                                 u2060 1C36                                   u2140 1FCA  
                                 u2300 2320                                   u3020 09BE  
                                 u2061 1C32                                   u2141 1FC6  
                                 u2301 231C                                   u3021 09BA  
                                 u2070 1970                                   u2150 1FF4  
                                 u2310 237C                                   u2230 1882  
                                 u3030 09D8                                   u2071 196C  
                                 u2151 1FF0                                   u2311 2378  
                                 u2231 187E                                   u3031 09D4  
                                 u2080 1998                                   u2160 201E  
                                 u2320 23A6                                   u2240 18AA  
                                 u2400 218E                                   u3040 0A20  
                                 u3200 145A                                   u4000 0370  
                         _BAUD4CONbits 000EE9                                   u2081 1994  
                                 u2161 201A                                   u2321 23A2  
                                 u2241 18A6                                   u2401 218A  
                                 u3041 0A1C                                   u3201 1456  
                                 u4001 036C                                   u2330 1E40  
                                 u2090 1794                                   u2170 1EF2  
                                 u2250 248A                                   u2410 21EA  
                                 u3050 0A4E                                   u3210 1468  
                                 u4010 0380                                   u2331 1E3C  
                                 u2091 1790                                   u2171 1EEE  
                                 u2251 2486                                   u2411 21E6  
                                 u3051 0A4A                                   u3211 1464  
                                 u4011 037C                                   u2340 1E6A  
                                 u2180 1F1C                                   u2260 24B4  
                                 u2420 2214                                   u2500 0E74  
                                 u3060 0A88                                   u3220 14A2  
                                 u3140 1322                                   u4100 0420  
                                 u4020 0390                                   u2341 1E66  
                                 u2181 1F18                                   u2261 24B0  
                                 u2421 2210                                   u2501 0E70  
                                 u3061 0A84                                   u3221 149E  
                                 u3141 131E                                   u4101 041C  
                                 u4021 038C                                   u2350 27D2  
                                 u2190 1F46                                   u2270 24F8  
                                 u2430 2270                                   u2510 0EA2  
                                 u3230 14B0                                   u3150 1330  
                                 u4110 0430                                   u4030 03A8  
                                 u2351 27CA                                   u2191 1F42  
                                 u2271 24F4                                   u2431 226C  
                                 u2511 0E9E                                   u3231 14AC  
                                 u3151 132C                                   u4111 042C  
                                 u4031 03A4                                   u2280 2522  
                                 u2440 229A                                   u2600 1004  
                                 u2520 0EC4                                   u3160 138C  
                                 u4200 04C8                                   u4120 0440  
                                 u4040 03B8                                   u2281 251E  
                                 u2441 2296                                   u2601 1000  
                                 u2521 0EC0                                   u3161 1388  
                                 u4201 04C4                                   u4121 043C  
                                 u4041 03B4                                   u2290 22F6  
                                 u2450 1D08                                   u2370 20DE  
                                 u2610 1032                                   u2530 0EF2  
                                 u3170 13E2                                   u4210 04E0  
                                 u4130 0450                                   u4050 03C8  
                                 _T2PR 000FBC                                   u2291 22F2  
                                 u2451 1D04                                   u2371 20DA  
                                 u2611 102E                                   u2531 0EEE  
                                 u3171 13DE                                   u4211 04DC  
                                 u4131 044C                                   u4051 03C4  
                                 u2460 1D32                                   u2380 2108  
                                 u2620 1054                                   u2540 0F14  
                                 u2700 0B48                                   u3180 142C  
                                 u4300 0578                                   u4220 04F0  
                                 u4140 0460                                   u4060 03D8  
                                 u2461 1D2E                                   u2381 2104  
                                 u2621 1050                                   u2541 0F10  
                                 u2701 0B44                                   u3181 1428  
                                 u4301 0574                                   u4221 04EC  
                                 u4141 045C                                   u4061 03D4  
                                 u2470 1DBA                                   u2390 2164  
                                 u2630 1082                                   u2550 0F42  
                                 u2710 0B88                                   u3190 144A  
                                 u4310 0588                                   u4230 0500  
                                 u4150 0478                                   u4070 03E8  
                                 u2471 1DB6                                   u2391 2160  
                                 u2631 107E                                   u2551 0F3E  
                                 u2711 0B84                                   u3191 1446  
                                 u4311 0584                                   u4231 04FC  
                                 u4151 0474                                   u4071 03E4  
                                 u2368 27D4                                   u2480 1DE4  
                                 u2640 10AE                                   u2560 0F64  
                                 u2800 0D14                                   u2720 0BC8  
                                 u4400 0628                                   u4320 0598  
                                 u4240 0510                                   u4160 0488  
                                 u4080 03F8                                   u2481 1DE0  
                                 u2641 10AA                                   u2561 0F60  
                                 u2801 0D10                                   u2721 0BC4  
                                 u4401 0624                                   u4321 0594  
                                 u4241 050C                                   u4161 0484  
                                 u4081 03F4                                   u2570 0F92  
                                 u2490 0E52                                   u2810 0D42  
                                 u2730 0C3E                                   u2650 0AC0  
                                 u4410 0638                                   u4330 05B0  
                                 u4250 0520                                   u4170 0498  
                                 u4090 0410                                   u2571 0F8E  
                                 u2491 0E4E                                   u2811 0D3E  
                                 u2731 0C3A                                   u2651 0ABC  
                                 u4411 0634                                   u4331 05AC  
                                 u4251 051C                                   u4171 0494  
                                 u4091 040C                                   u2580 0FB4  
                                 u2820 0D58                                   u2740 0C60  
                                 u2660 0AD2                                   u2900 06B8  
                                 u4420 0648                                   u4340 05C0  
                                 u4260 0530                                   u4180 04A8  
                                 u4500 12D2                                   u2581 0FB0  
                                 u2821 0D54                                   u2741 0C5C  
                                 u2661 0ACE                                   u2901 06B4  
                                 u4421 0644                                   u4341 05BC  
                                 u4261 052C                                   u4181 04A4  
                                 u4501 12CE                                   u2590 0FE2  
                                 u2830 0D6C                                   u2750 0C8A  
                                 u2670 0AE2                                   u2910 06F8  
                                 u4430 0658                                   u4350 05D0  
                                 u4270 0548                                   u4190 04B8  
                                 u2591 0FDE                                   u2831 0D68  
                                 u2751 0C86                                   u2671 0ADE  
                                 u2911 06F4                                   u4431 0654  
                                 u4351 05CC                                   u4271 0544  
                                 u4191 04B4                                   u2840 0D86  
                                 u2760 0CAE                                   u2680 0B26  
                                 u2920 070A                                   u4440 0668  
                                 u4360 05E0                                   u4280 0558  
                                 u2841 0D82                                   u2761 0CAA  
                                 u2681 0B22                                   u2921 0706  
                                 u4441 0664                                   u4361 05DC  
                                 u4281 0554                                   u2850 0DCE  
                                 u2770 0CC4                                   u2690 0B38  
                                 u2930 071A                                   u4370 05F0  
                                 u4290 0568                                   u4450 11A4  
                                 u2851 0DCA                                   u2771 0CC0  
                                 u2691 0B34                                   u2931 0716  
                                 u4371 05EC                                   u4291 0564  
                                 u4451 11A0                                   u1980 23EE  
                                 u3740 1B5E                                   u2860 0DFE  
                                 u2780 0CE2                                   u2940 0750  
                                 u3900 167C                                   u4380 0600  
                                 u4460 11B4                                   u1981 23EA  
                                 u3741 1B5A                                   u2861 0DFA  
                                 u2781 0CDE                                   u2941 074C  
                                 u4381 05FC                                   u4517 1228  
                                 u4461 11B0                                   u1990 240C  
                                 u3750 1B8E                                   u2870 0E2C  
                                 u2790 0D02                                   u2950 0760  
                                 u3910 16AA                                   u4390 0618  
                                 u4470 11C6                                   u1991 2408  
                                 u4607 232A                                   u3751 1B8A  
                                 u2871 0E28                                   u2791 0CFE  
                                 u2951 075C                                   u3911 16A6  
                                 u4391 0614                                   u4527 12DE  
                                 u4471 11C2                                   u3760 1BD8  
                                 u2960 08DA                                   u2880 0696  
                                 u3920 16BE                                   u4480 121C  
                                 u4617 1816                                   u3761 1BD4  
                                 u4537 2836                                   u2881 0692  
                                 u3921 16BA                                   u3905 1670  
                                 u4481 1218                                   u2970 0934  
                                 u2890 06A8                                   u3930 16E6  
                                 u4490 127C                                   u4707 1AE0  
                                 u4627 1D82                                   u4547 2112  
                                 u2971 0930                                   u2891 06A4  
                                 u3931 16E2                                   u4491 1278  
                                 u2980 0954                                   u3940 1706  
                                 u4717 26D2                                   u4637 1DEE  
                                 u4557 2198                                   u2981 0950  
                                 u2965 08D0                                   u3941 1702  
                                 u2990 0966                                   u3950 1716  
                                 u4647 1904                                   u4567 221E  
                                 u2991 0962                                   u3951 1712  
                                 i2l24 29EC                                   u3960 0330  
                                 u4657 23B0                                   u4577 22A4  
                                 u3961 032C                                   u3890 1646  
                                 u3970 0340                                   u4667 1E74  
                                 u4587 1CD0                                   u3891 1642  
                                 u3971 033C                                   u3980 0350  
                                 u4677 1EA0                                   u4597 1D3C  
                                 u3981 034C                                   u3990 0360  
                                 u4687 19F2                                   u3991 035C  
                                 u4697 1CA4                                   i2l92 2900  
                                 i2l95 2A98                                   i2l89 28DA  
    Return_Anti_Moves@anti_moves_array 000B                                   _main 10C4  
                  __end_of_AppendMoves 294C                     _YellowInstructions 20B0  
                                 fsr2h 000FDA                                   indf2 000FDF  
                                 fsr2l 000FD9                                   btemp 0057  
                                 _stop 1BDA         ??i2_init_colorclick_interrupts 0005  
                    main@initial_color 00B9                                   prodh 000FF4  
                                 prodl 000FF3                                   start 0058  
                 ?i2_color_writetoaddr 0003                        ___fldiv@new_exp 0028  
               __end_of_color_read_Red 25D2                        __end_of_HighISR 29CE  
                         ___param_bank 000000                            _turnLeft135 24B6  
                  ?_YellowInstructions 0027                            _turnRight90 1EC4  
                           _AntiYellow 1CAE                       __end_of_LED_init 2A50  
                        ___fltol@sign1 004D                             _AppendTime 2856  
                                ?_main 0001                        __end_of___fldiv 0E40  
                      __end_of___flmul 0AA6                        __end_of___fltol 1738  
                                ?_stop 001C                        __end_of___lwdiv 2448  
                                i1l330 0048                                  i2l101 2A8E  
                                i2l104 2A66                                  i2l322 2A3E  
                                i2l319 2760                                  i2l338 29CA  
                                _TMR0H 000FD4                                  _TMR0L 000FD3  
           __end_of_I2C_2_Master_Start 2A86                   ??_YellowInstructions 002B  
           __end_of_I2C_2_Master_Write 2A5C                       _PinkInstructions 2136  
                   _int_threshold_high 00D3                                  main@b 00B6  
             __end_of_BlueInstructions 1EC4                                  tablat 000FF5  
                                plusw2 000FDB                                  ttemp5 0058  
                                ttemp6 005B                                  ttemp7 005F  
                                status 000FD8                                  wtemp8 0058  
                  detect_color@tempval 00A2                  ??i2_color_writetoaddr 0004  
              __end_of_color_read_Blue 26C2                  _I2C_2_Master_RepStart 2A68  
                 fullSpeedBackwards@mL 001C                   fullSpeedBackwards@mR 001E  
                     __end_of_AntiPink 1E12                        ?_color_read_Red 000D  
                      __initialization 2762                           __end_of_main 1310  
                 __end_of_detect_color 067C                           __end_of_stop 1CAE  
                _LightBlueInstructions 2242                      ??_RedInstructions 002B  
  __end_of_interrupts_clear_colorclick 2A26         ?i2_interrupts_clear_colorclick 0001  
          _interrupts_clear_colorclick 2A0C                                 ??_main 00B4  
                               ??_stop 0020                          __activetblptr 000000  
                         _turnRight135 2448                      _Return_Anti_Moves 294C  
                          _AppendMoves 2928                           ?_setMotorPWM 0016  
                               _CCPR1H 000FAA                                 _CCPR2H 000FA6  
                               _CCPR3H 000F25                                 _CCPR4H 000F21  
                   ?_Return_Anti_Moves 0009                                 _RC0PPS 000E62  
                               _RC4REG 000EE3                                 _RE2PPS 000E74  
                               _RD5PPS 000E6F                                 _RC7PPS 000E69  
                               _RE4PPS 000E76                                 _RD6PPS 000E70  
                               i2l3021 2A94                                 i2l3023 2A86  
                               i2l3025 2A8A                                 i2l3019 2A90  
                               i2l3027 2A5E                                 i2l3029 2A62  
                               i1l3891 0026                                 i2l3181 29D0  
                               i1l3893 0036                                 i1l3895 0044  
                               i2l2907 28DA                                 i2l2909 28EA  
                               i2l3661 2736                                 i2l3901 29C2  
                               i2l3663 2740                                 i2l3655 2712  
                               i2l3903 29C6                                 i2l3665 274A  
                               i2l3657 271C                                 i2l3667 2754  
                               i2l3659 272C                                 _RG6PPS 000E88  
                               i2l3887 2A26                                 i2l3897 29AE  
                               i2l3899 29BE                              ??_HighISR 0006  
             __end_of_color_click_init 2856                                 _RX4PPS 000E15  
                               _TX4REG 000EE4                       __end_of___xxtofl 14C4  
                  ??_Return_Anti_Moves 000D                                 _LowISR 0018  
                        ??_Timer0_init 0009                           _CCPTMRS0bits 000FAD  
          AppendMoves@anti_moves_array 000B                  Return_Time@time_array 000B  
                Return_Time@time_index 0009                                 ___wmul 2902  
                            ??___fldiv 001F                              ??___flmul 0038  
                            ??___fltol 009E                              ??___lwdiv 0013  
                               clear_0 2780                                 clear_1 278C  
                               clear_2 2798                            ?_AntiYellow 002E  
                               isa$std 000001                            ?_AppendTime 0009  
                        ??_Return_Time 000D              __end_of_Return_Anti_Moves 296E  
                           _WhiteLight 2A9A                                 tblptrh 000FF7  
                               tblptrl 000FF6                                 tblptru 000FF8  
                               stop@mL 001C                                 stop@mR 001E  
                    ??_initDCmotorsPWM 000B             i2color_writetoaddr@address 0004  
                     __end_of_turnLeft 1A02                           ___xxtofl@arg 0013  
                         ___xxtofl@exp 0012                           ___xxtofl@val 0009  
                        ??_Update_RGBC 0016                             __accesstop 0060  
              __end_of__initialization 279E               __end_of_color_read_Clear 2672  
             __end_of_color_read_Green 2622                 ?_I2C_2_Master_RepStart 0001  
                        ___rparam_used 000001                              ?_LED_init 0001  
                           ___fltol@f1 0049                       ?_color_read_Blue 000D  
                    _GreenInstructions 234E                        _Interrupts_init 29EE  
                       __pcstackCOMRAM 0001                 ?_LightBlueInstructions 002C  
                         __pidataBANK0 2AA2                     ?_GreenInstructions 0027  
                       AppendTime@temp 0009                      detect_color@color 00B0  
                  __end_of_Timer0_init 298E                            MoveBuggy@mL 0037  
                          MoveBuggy@mR 0039                    OrangeInstructions@a 0032  
                  ??_GreenInstructions 002B                MoveBuggy@color_detected 0035  
                            ?_AntiPink 002E           ??_init_colorclick_interrupts 000D  
                  __end_of_Return_Time 2822                      __end_of_MoveBuggy 10C4  
                           __pbssBANK0 0060                             __pbssBANK1 0100  
            __end_of_GreenInstructions 23D4                             ??_LED_init 0009  
                              ?_LowISR 0001                      _color_writetoaddr 298E  
                         _T2CLKCONbits 000FBF                           ?_turnLeft135 0027  
                  __end_of_Update_RGBC 2582                     ?_color_writetoaddr 000B  
                              ?___wmul 0009               __end_of_PinkInstructions 21BC  
                         ?_turnRight90 0022                    ??_color_writetoaddr 000C  
                            ?___xxtofl 0009                            ?_WhiteLight 0001  
                              _SP4BRGH 000EE6                                _SP4BRGL 000EE5  
                           ??_AntiPink 0032                                _SSP2ADD 000ED6  
                              _SSP2BUF 000ED5                             _color_flag 0055  
                         _detect_color 005C                __end_of_Interrupts_init 2A0C  
                    ?_BlueInstructions 0027                 color_writetoaddr@value 000B  
                     ??_color_read_Red 000F                                _HighISR 0008  
            __end_of_color_writetoaddr 29AE                     WhiteInstructions@a 0044  
                   WhiteInstructions@c 0041                     ??_BlueInstructions 002B  
                      _RedInstructions 22C8                     _I2C_2_Master_Start 2A7C  
                  i2_I2C_2_Master_Idle 28DA                     _I2C_2_Master_Write 2A50  
                              __Hparam 0000                    i2_I2C_2_Master_Stop 2A86  
                              __Lparam 0000                      color_read_Red@tmp 0012  
                          _Timer0_init 296E                    GreenInstructions@mL 0027  
                  GreenInstructions@mR 0029             __end_of_fullSpeedBackwards 1AF0  
                              ___fldiv 0AA6                                ___flmul 067C  
                              ___fltol 1630                    ?_I2C_2_Master_Start 0001  
                         turnLeft135@a 002B                                ___lwdiv 23D4  
                  ?_I2C_2_Master_Write 0001                           turnLeft90@mL 0022  
                         turnLeft90@mR 0024                                __pcinit 2762  
                              __ramtop 0E00                              ?_turnLeft 001C  
                              __ptext0 10C4                                __ptext1 2020  
                              __ptext2 005C                                __ptext3 1310  
                              __ptext4 1630                                __ptext5 067C  
                              __ptext6 0AA6                                __ptext7 2822  
                              __ptext8 2888                                __ptext9 2A9A  
                 ?i2_I2C_2_Master_Idle 0001   __end_ofi2_init_colorclick_interrupts 2762  
         i2_init_colorclick_interrupts 2712                              _T2CONbits 000FBD  
                          _Return_Time 27EA                             ??___xxtofl 000D  
                 ?i2_I2C_2_Master_Stop 0001                              _T2HLTbits 000FBE  
                        _RxBufWriteCnt 0054                           ?_AppendMoves 0009  
                              _tmr_ovf 0074                   ??_I2C_2_Master_Start 000A  
                 ??_I2C_2_Master_Write 000A                         __pintcode_body 29AE  
                 end_of_initialization 279E            __end_ofi2_color_writetoaddr 29EE  
         Return_Anti_Moves@moves_index 0009                      RedInstructions@mL 0027  
                   main@color_detected 00B8                      RedInstructions@mR 0029  
                              int_func 29AE                            _Update_RGBC 2524  
                    ?_color_click_init 0001                           turnRight90@a 0026  
           __end_of_OrangeInstructions 2242                     ??_color_click_init 000D  
                            AntiPink@a 0034                                postdec2 000FDD  
                              postinc0 000FEE                                postinc2 000FDE  
                           _time_array 013C                             _time_index 009D  
                         ??_AntiYellow 0032                        _initDCmotorsPWM 2020  
                           ??_turnLeft 0020                           ??_AppendTime 000F  
                   setMotorPWM@negDuty 001B                  ??i2_I2C_2_Master_Idle 0001  
                    __end_of_turnRight 1826                  ??i2_I2C_2_Master_Stop 0002  
                        ___xxtofl@sign 0011                    YellowInstructions@a 002D  
                            _TRISAbits 000F81                     setMotorPWM@posDuty 001A  
                            _TRISBbits 000F82                              _TRISCbits 000F83  
                            _TRISDbits 000F84     __end_of_init_colorclick_interrupts 2712  
        ?i2_init_colorclick_interrupts 0001             _init_colorclick_interrupts 26C2  
                            _TRISEbits 000F85                              _TRISFbits 000F86  
                            _TRISGbits 000F87                              _TRISHbits 000F88  
                          ___fldiv@grs 002A                            ___fldiv@rem 0023  
                   PinkInstructions@mL 0027                     PinkInstructions@mR 0029  
                     fullSpeedAhead@mL 001C                       fullSpeedAhead@mR 001E  
              __end_of_RedInstructions 234E               color_writetoaddr@address 000C  
              ??_I2C_2_Master_RepStart 000A                       ?_Interrupts_init 0001  
                          ___flmul@grs 003D                            _CCP1CONbits 000FAB  
                    ?_color_read_Clear 000D                           _EUSART4RXbuf 0060  
                         _EUSART4TXbuf 0100                            _CCP2CONbits 000FA7  
                    ?_color_read_Green 000D                     __end_of_AntiYellow 1D60  
                          _CCP3CONbits 000F26                            _CCP4CONbits 000F22  
                   __end_of_AppendTime 2888                ??_LightBlueInstructions 0030  
                           main@motorL 00C1                             main@motorR 00CA  
                   ??_color_read_Clear 000F                     ??_color_read_Green 000F  
                           _turnLeft90 1F72                         __end_of_LowISR 0058  
               AppendMoves@moves_index 0009                         _fullSpeedAhead 1826  
                       __end_of___wmul 2928                        AppendMoves@temp 000E  
                   detect_color@dist_B 00B3                     detect_color@dist_G 00B2  
                   detect_color@dist_R 00B1                      _int_threshold_low 004F  
                  color_read_Clear@tmp 0012                    start_initialization 2762  
                        _TxBufWriteCnt 0052                   OrangeInstructions@mL 002C  
                 OrangeInstructions@mR 002E                  Return_Anti_Moves@temp 000E  
                            _MoveBuggy 0E40                    color_read_Green@tmp 0012  
                             ??_LowISR 0006                __end_of_initDCmotorsPWM 20B0  
               __end_of_fullSpeedAhead 1914                               ??___wmul 000D  
                          __pdataBANK0 00D3          i2I2C_2_Master_Write@data_byte 0002  
                    ?_PinkInstructions 0027                     Update_RGBC@tempval 0014  
                   ??_PinkInstructions 002B           __end_ofi2_I2C_2_Master_Start 2A9A  
         __end_ofi2_I2C_2_Master_Write 2A68                              ___fldiv@a 001B  
                            ___fldiv@b 0017                              ___flmul@a 0034  
                            ___flmul@b 0030                            __pbssCOMRAM 004F  
                         ??_WhiteLight 0009                          __pcstackBANK0 009E  
                 AppendTime@time_array 000D                   AppendTime@time_index 000B  
                     ?_RedInstructions 0027                               ?_HighISR 0001  
                           ?_MoveBuggy 0035                       ___lwdiv@dividend 000F  
                         ?_Timer0_init 0001                            ?_turnLeft90 0022  
                      ?_fullSpeedAhead 001C                     BlueInstructions@mL 0027  
                   BlueInstructions@mR 0029                              __pintcode 0008  
                   __end_of_WhiteLight 2AA2                               ?___fldiv 0017  
                             ?___flmul 0030                               ?___fltol 0049  
                             ?___lwdiv 000F                            __pintcodelo 0018  
         ?_interrupts_clear_colorclick 0001                   I2C_2_Master_Read@ack 000B  
                    _WhiteInstructions 1AF0                   I2C_2_Master_Read@tmp 000C  
                        ?_turnRight135 0027                           ?_Return_Time 0009  
                    _I2C_2_Master_Idle 28B2                     _fullSpeedBackwards 1A02  
                    _I2C_2_Master_Init 2888                      _I2C_2_Master_Read 27A8  
                   ?_WhiteInstructions 003B                      _I2C_2_Master_Stop 2A72  
                         _RxBufReadCnt 0053                     GreenInstructions@a 002D  
                   ?_I2C_2_Master_Idle 0001                     ?_I2C_2_Master_Init 0001  
                   ?_I2C_2_Master_Read 0001                          ??_setMotorPWM 0018  
                   ?_I2C_2_Master_Stop 0001                       ___lwdiv@quotient 0013  
                          turnLeft90@a 0026               initDCmotorsPWM@PWMperiod 0009  
              LightBlueInstructions@mL 002C                LightBlueInstructions@mR 002E  
                  ?_fullSpeedBackwards 001C                    ??_WhiteInstructions 003F  
                  ??_I2C_2_Master_Idle 0009                    ??_I2C_2_Master_Init 0009  
                         ?_Update_RGBC 0014                    ??_I2C_2_Master_Read 000A  
                       ___wmul@product 000D                               _LATAbits 000F79  
                  ??_I2C_2_Master_Stop 000A                               _LATCbits 000F7B  
                             _LATDbits 000F7C                               _LATEbits 000F7D  
                             _LATFbits 000F7E                        Return_Time@temp 0010  
                             _LATGbits 000F7F                               _LATHbits 000F80  
                             _IPR0bits 000E1F                               _PIE0bits 000E29  
                             _LED_init 2A40                       RedInstructions@a 002D  
                             _PIE4bits 000E2D                               i2u221_40 28EA  
                             i2u221_41 28E6                               i2u222_40 2900  
                             i2u222_41 28FC                            turnRight@mL 001C  
                          turnRight@mR 001E                               i1u377_20 0036  
                             i1u377_21 0032                               _PIR0bits 000E33  
                             _PIR4bits 000E37                               i2u472_47 2722  
                             i2u378_40 29BE                               i2u378_41 29BA  
                     ?_initDCmotorsPWM 0009                               _SSP2CON2 000EDA  
                             _SSP2STAT 000ED8                   ??_fullSpeedBackwards 0020  
            __end_of_WhiteInstructions 1BDA                     _OrangeInstructions 21BC  
                    PinkInstructions@a 002D              __end_of_I2C_2_Master_Idle 28DA  
            __end_of_I2C_2_Master_Init 28B2              __end_of_I2C_2_Master_Read 27EA  
                    ___wmul@multiplier 0009                         ??_turnRight135 002B  
            __end_of_I2C_2_Master_Stop 2A7C                           setMotorPWM@m 0016  
          I2C_2_Master_Write@data_byte 000A          ??_interrupts_clear_colorclick 000E  
           __end_of_YellowInstructions 2136                      ??_color_read_Blue 000F  
                  ?_OrangeInstructions 002C                           _TxBufReadCnt 0051  
          ?_init_colorclick_interrupts 0001                               _AntiPink 1D60  
             i2color_writetoaddr@value 0003                              _turnRight 1738  
                  WhiteInstructions@mL 003B                    WhiteInstructions@mR 003D  
        __end_of_I2C_2_Master_RepStart 2A72                     color_read_Blue@tmp 0012  
                  __end_of_setMotorPWM 1630                            ??_MoveBuggy 003B  
                 i2_I2C_2_Master_Start 2A90                   i2_I2C_2_Master_Write 2A5C  
                         AntiYellow@mL 002E                           AntiYellow@mR 0030  
                             __Hrparam 0000                   ??_OrangeInstructions 0030  
                             __Lrparam 0000          __end_of_LightBlueInstructions 22C8  
          __end_ofi2_I2C_2_Master_Idle 2902            __end_ofi2_I2C_2_Master_Stop 2A90  
                       turnRight135@mL 0027                         turnRight135@mR 0029  
                        turnLeft135@mL 0027                          turnLeft135@mR 0029  
                           _ANSELBbits 000E9A                             _ANSELDbits 000EA7  
                             ___xxtofl 1310                             _T0CON0bits 000FD5  
                           _T0CON1bits 000FD6                        ___lwdiv@divisor 0011  
                    BlueInstructions@a 002D                        ___lwdiv@counter 0015  
                           ?_turnRight 001C                               __ptext10 1AF0  
                             __ptext11 27EA                               __ptext20 2928  
                             __ptext12 294C                               __ptext21 1CAE  
                             __ptext13 0E40                               __ptext30 1914  
                             __ptext22 22C8                               __ptext14 20B0  
                             __ptext31 1BDA                               __ptext23 1EC4  
                             __ptext15 2136                               __ptext40 2672  
                             __ptext32 1A02                               __ptext24 1738  
                             __ptext16 21BC                               __ptext41 2A68  
                             __ptext33 14C4                               __ptext25 1D60  
                             __ptext17 2448                               __ptext50 2A72  
                             __ptext42 27A8                               __ptext34 2902  
                             __ptext26 1826                               __ptext18 2242  
                             __ptext51 2A7C                               __ptext43 296E  
                             __ptext35 23D4                               __ptext27 234E  
                             __ptext19 24B6                               __ptext60 2A86  
                             __ptext52 28B2                               __ptext44 2A40  
                             __ptext36 2524                               __ptext28 1E12  
                             __ptext61 2A90                               __ptext53 2856  
                             __ptext45 29EE                               __ptext37 2582  
                             __ptext29 1F72                               __ptext62 28DA  
                             __ptext46 2A0C                               __ptext38 25D2  
                             __ptext47 26C2                               __ptext39 2622  
                             __ptext56 2A26                               __ptext48 298E  
                             __ptext57 2712                               __ptext49 2A50  
                             __ptext58 29CE                               __ptext59 2A5C  
                         _SSP2CON1bits 000ED9                           _SSP2CON2bits 000EDA  
      ??i2_interrupts_clear_colorclick 0006                 LightBlueInstructions@a 0032  
                           turnLeft@mL 001C                             turnLeft@mR 001E  
                ?i2_I2C_2_Master_Start 0001                  ?i2_I2C_2_Master_Write 0001  
                        ??_turnLeft135 002B                               isa$xinst 000000  
                           _RC4STAbits 000EE7                               int$flags 0057  
                        ??_turnRight90 0026                       _BlueInstructions 1E12  
                             _turnLeft 1914                             _INTCONbits 000FF2  
                          AntiYellow@a 0034                            _setMotorPWM 14C4  
                        ?_detect_color 00A2                          turnRight135@a 002B  
                             intlevel1 0000                               intlevel2 0000  
                        turnRight90@mL 0022                          turnRight90@mR 0024  
                     ??_fullSpeedAhead 0020                   __end_of_turnRight135 24B6  
                         ??_turnLeft90 0026                             AntiPink@mL 002E  
                           AntiPink@mR 0030                            _moves_index 0056  
                     _color_click_init 2822                    __end_of_turnLeft135 2524  
                           _SSP2DATPPS 000E1D                             _SSP2CLKPPS 000E1C  
                  __end_of_turnRight90 1F72                          ??_AppendMoves 000D  
                       ??_detect_color 00A4                            ??_turnRight 0020  
                   __end_of_turnLeft90 2020                             _TX4STAbits 000EE8  
               ??i2_I2C_2_Master_Start 0002                 ??i2_I2C_2_Master_Write 0002  
                 YellowInstructions@mL 0027                   YellowInstructions@mR 0029  
__end_ofi2_interrupts_clear_colorclick 2A40          i2_interrupts_clear_colorclick 2A26  
