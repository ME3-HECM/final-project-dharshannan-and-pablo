

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Mar 08 12:00:29 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1
    54                           	psect	text42,global,reloc=2,class=CODE,delta=1
    55                           	psect	text43,global,reloc=2,class=CODE,delta=1
    56                           	psect	text44,global,reloc=2,class=CODE,delta=1
    57                           	psect	text45,global,reloc=2,class=CODE,delta=1
    58                           	psect	text46,global,reloc=2,class=CODE,delta=1
    59                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    60                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    61                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1
    67                           	psect	text54,global,reloc=2,class=CODE,delta=1
    68                           	psect	text55,global,reloc=2,class=CODE,delta=1
    69                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    70                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    71                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    72                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    73                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    74   000000                     
    75                           ; Generated 06/04/2022 GMT
    76                           ; 
    77                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    78                           ; All rights reserved.
    79                           ; 
    80                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    81                           ; 
    82                           ; Redistribution and use in source and binary forms, with or without modification, are
    83                           ; permitted provided that the following conditions are met:
    84                           ; 
    85                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    86                           ;        conditions and the following disclaimer.
    87                           ; 
    88                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    89                           ;        of conditions and the following disclaimer in the documentation and/or other
    90                           ;        materials provided with the distribution. Publication is not required when
    91                           ;        this file is used in an embedded application.
    92                           ; 
    93                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    94                           ;        software without specific prior written permission.
    95                           ; 
    96                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    97                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    98                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    99                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   100                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   101                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   102                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   103                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   104                           ; 
   105                           ; 
   106                           ; Code-generator required, PIC18F67K40 Definitions
   107                           ; 
   108                           ; SFR Addresses
   109   000000                     
   110                           	psect	idataCOMRAM
   111   002454                     __pidataCOMRAM:
   112                           	callstack 0
   113                           
   114                           ;initializer for _int_threshold_high
   115   002454  09C4               	dw	2500
   116   000000                     _T0CON0bits	set	4053
   117   000000                     _T0CON1bits	set	4054
   118   000000                     _TX4REG	set	3812
   119   000000                     _RC4STAbits	set	3815
   120   000000                     _SP4BRGH	set	3814
   121   000000                     _TRISBbits	set	3970
   122   000000                     _TRISCbits	set	3971
   123   000000                     _TRISEbits	set	3973
   124   000000                     _TRISFbits	set	3974
   125   000000                     _TRISGbits	set	3975
   126   000000                     _SSP2CON2bits	set	3802
   127   000000                     _INT1PPS	set	3569
   128   000000                     _SSP2CLKPPS	set	3612
   129   000000                     _SSP2DATPPS	set	3613
   130   000000                     _ANSELDbits	set	3751
   131   000000                     _SSP2ADD	set	3798
   132   000000                     _SSP2CON1bits	set	3801
   133   000000                     _RC4REG	set	3811
   134   000000                     _SP4BRGL	set	3813
   135   000000                     _TX4STAbits	set	3816
   136   000000                     _BAUD4CONbits	set	3817
   137   000000                     _LATAbits	set	3961
   138   000000                     _LATGbits	set	3967
   139   000000                     _LATHbits	set	3968
   140   000000                     _TRISAbits	set	3969
   141   000000                     _SSP2CON2	set	3802
   142   000000                     _TRISDbits	set	3972
   143   000000                     _CCPR4H	set	3873
   144   000000                     _CCPR3H	set	3877
   145   000000                     _SSP2STAT	set	3800
   146   000000                     _SSP2BUF	set	3797
   147   000000                     _IPR0bits	set	3615
   148   000000                     _PIE0bits	set	3625
   149   000000                     _RC7PPS	set	3689
   150   000000                     _RD5PPS	set	3695
   151   000000                     _RE2PPS	set	3700
   152   000000                     _RD6PPS	set	3696
   153   000000                     _T2PR	set	4028
   154   000000                     _T2CONbits	set	4029
   155   000000                     _TRISHbits	set	3976
   156   000000                     _CCPR2H	set	4006
   157   000000                     _CCPR1H	set	4010
   158   000000                     _LATCbits	set	3963
   159   000000                     _LATEbits	set	3965
   160   000000                     _LATFbits	set	3966
   161   000000                     _RE4PPS	set	3702
   162   000000                     _RG6PPS	set	3720
   163   000000                     _ANSELBbits	set	3738
   164   000000                     _TMR0L	set	4051
   165   000000                     _TMR0H	set	4052
   166   000000                     _INTCONbits	set	4082
   167   000000                     _T2CLKCONbits	set	4031
   168   000000                     _T2HLTbits	set	4030
   169   000000                     _CCP1CONbits	set	4011
   170   000000                     _CCPTMRS0bits	set	4013
   171   000000                     _CCP2CONbits	set	4007
   172   000000                     _CCP3CONbits	set	3878
   173   000000                     _CCP4CONbits	set	3874
   174   000000                     _RX4PPS	set	3605
   175   000000                     _PIE4bits	set	3629
   176   000000                     _PIR0bits	set	3635
   177   000000                     _PIR4bits	set	3639
   178   000000                     _RC0PPS	set	3682
   179                           
   180                           ; #config settings
   181                           
   182                           	psect	cinit
   183   00220C                     __pcinit:
   184                           	callstack 0
   185   00220C                     start_initialization:
   186                           	callstack 0
   187   00220C                     __initialization:
   188                           	callstack 0
   189                           
   190                           ; Initialize objects allocated to COMRAM (2 bytes)
   191                           ; load TBLPTR registers with __pidataCOMRAM
   192   00220C  0E54               	movlw	low __pidataCOMRAM
   193   00220E  6EF6               	movwf	tblptrl,c
   194   002210  0E24               	movlw	high __pidataCOMRAM
   195   002212  6EF7               	movwf	tblptrh,c
   196   002214  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   197   002216  6EF8               	movwf	tblptru,c
   198   002218  0009               	tblrd		*+	;fetch initializer
   199   00221A  CFF5 F055          	movff	tablat,__pdataCOMRAM
   200   00221E  0009               	tblrd		*+	;fetch initializer
   201   002220  CFF5 F056          	movff	tablat,__pdataCOMRAM+1
   202                           
   203                           ; Clear objects allocated to BANK0 (82 bytes)
   204   002224  EE00  F060         	lfsr	0,__pbssBANK0
   205   002228  0E52               	movlw	82
   206   00222A                     clear_0:
   207   00222A  6AEE               	clrf	postinc0,c
   208   00222C  06E8               	decf	wreg,f,c
   209   00222E  E1FD               	bnz	clear_0
   210                           
   211                           ; Clear objects allocated to COMRAM (6 bytes)
   212   002230  6A54               	clrf	(__pbssCOMRAM+5)& (0+255),c
   213   002232  6A53               	clrf	(__pbssCOMRAM+4)& (0+255),c
   214   002234  6A52               	clrf	(__pbssCOMRAM+3)& (0+255),c
   215   002236  6A51               	clrf	(__pbssCOMRAM+2)& (0+255),c
   216   002238  6A50               	clrf	(__pbssCOMRAM+1)& (0+255),c
   217   00223A  6A4F               	clrf	__pbssCOMRAM& (0+255),c
   218   00223C                     end_of_initialization:
   219                           	callstack 0
   220   00223C                     __end_of__initialization:
   221                           	callstack 0
   222   00223C  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   223   00223E  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   224   002240  0100               	movlb	0
   225   002242  EFAE  F008         	goto	_main	;jump to C main() function
   226                           
   227                           	psect	bssCOMRAM
   228   00004F                     __pbssCOMRAM:
   229                           	callstack 0
   230   00004F                     _int_threshold_low:
   231                           	callstack 0
   232   00004F                     	ds	2
   233   000051                     _TxBufReadCnt:
   234                           	callstack 0
   235   000051                     	ds	1
   236   000052                     _TxBufWriteCnt:
   237                           	callstack 0
   238   000052                     	ds	1
   239   000053                     _RxBufReadCnt:
   240                           	callstack 0
   241   000053                     	ds	1
   242   000054                     _RxBufWriteCnt:
   243                           	callstack 0
   244   000054                     	ds	1
   245                           
   246                           	psect	dataCOMRAM
   247   000055                     __pdataCOMRAM:
   248                           	callstack 0
   249   000055                     _int_threshold_high:
   250                           	callstack 0
   251   000055                     	ds	2
   252                           
   253                           	psect	bssBANK0
   254   000060                     __pbssBANK0:
   255                           	callstack 0
   256   000060                     _EUSART4TXbuf:
   257                           	callstack 0
   258   000060                     	ds	60
   259   00009C                     _EUSART4RXbuf:
   260                           	callstack 0
   261   00009C                     	ds	20
   262   0000B0                     _tmr_ovf:
   263                           	callstack 0
   264   0000B0                     	ds	1
   265   0000B1                     _color_flag:
   266                           	callstack 0
   267   0000B1                     	ds	1
   268                           
   269                           	psect	cstackBANK0
   270   0000B2                     __pcstackBANK0:
   271                           	callstack 0
   272   0000B2                     ??___fltol:
   273                           
   274                           ; 1 bytes @ 0x0
   275   0000B2                     	ds	4
   276   0000B6                     detect_color@tempval:
   277                           	callstack 0
   278                           
   279                           ; 2 bytes @ 0x4
   280   0000B6                     	ds	2
   281   0000B8                     ??_detect_color:
   282                           
   283                           ; 1 bytes @ 0x6
   284   0000B8                     	ds	12
   285   0000C4                     detect_color@color:
   286                           	callstack 0
   287                           
   288                           ; 1 bytes @ 0x12
   289   0000C4                     	ds	1
   290   0000C5                     detect_color@dist_R:
   291                           	callstack 0
   292                           
   293                           ; 1 bytes @ 0x13
   294   0000C5                     	ds	1
   295   0000C6                     detect_color@dist_G:
   296                           	callstack 0
   297                           
   298                           ; 1 bytes @ 0x14
   299   0000C6                     	ds	1
   300   0000C7                     detect_color@dist_B:
   301                           	callstack 0
   302                           
   303                           ; 1 bytes @ 0x15
   304   0000C7                     	ds	1
   305   0000C8                     ??_main:
   306                           
   307                           ; 1 bytes @ 0x16
   308   0000C8                     	ds	2
   309   0000CA                     main@b:
   310                           	callstack 0
   311                           
   312                           ; 1 bytes @ 0x18
   313   0000CA                     	ds	1
   314   0000CB                     main@color_detected:
   315                           	callstack 0
   316                           
   317                           ; 1 bytes @ 0x19
   318   0000CB                     	ds	1
   319   0000CC                     main@initial_color:
   320                           	callstack 0
   321                           
   322                           ; 8 bytes @ 0x1A
   323   0000CC                     	ds	8
   324   0000D4                     main@motorL:
   325                           	callstack 0
   326                           
   327                           ; 9 bytes @ 0x22
   328   0000D4                     	ds	9
   329   0000DD                     main@motorR:
   330                           	callstack 0
   331                           
   332                           ; 9 bytes @ 0x2B
   333   0000DD                     	ds	9
   334                           
   335                           	psect	cstackCOMRAM
   336   000001                     __pcstackCOMRAM:
   337                           	callstack 0
   338   000001                     ??i2_I2C_2_Master_Idle:
   339   000001                     
   340                           ; 1 bytes @ 0x0
   341   000001                     	ds	1
   342   000002                     i2I2C_2_Master_Write@data_byte:
   343                           	callstack 0
   344                           
   345                           ; 1 bytes @ 0x1
   346   000002                     	ds	1
   347   000003                     i2color_writetoaddr@value:
   348                           	callstack 0
   349                           
   350                           ; 1 bytes @ 0x2
   351   000003                     	ds	1
   352   000004                     i2color_writetoaddr@address:
   353                           	callstack 0
   354                           
   355                           ; 1 bytes @ 0x3
   356   000004                     	ds	1
   357   000005                     ??i2_init_colorclick_interrupts:
   358                           
   359                           ; 1 bytes @ 0x4
   360   000005                     	ds	1
   361   000006                     ??_LowISR:
   362   000006                     
   363                           ; 1 bytes @ 0x5
   364   000006                     	ds	3
   365   000009                     ??_I2C_2_Master_Idle:
   366   000009                     ?___wmul:
   367                           	callstack 0
   368   000009                     ?___xxtofl:
   369                           	callstack 0
   370   000009                     initDCmotorsPWM@PWMperiod:
   371                           	callstack 0
   372   000009                     ___wmul@multiplier:
   373                           	callstack 0
   374   000009                     ___xxtofl@val:
   375                           	callstack 0
   376                           
   377                           ; 4 bytes @ 0x8
   378   000009                     	ds	1
   379   00000A                     ??_I2C_2_Master_Read:
   380   00000A                     I2C_2_Master_Write@data_byte:
   381                           	callstack 0
   382                           
   383                           ; 1 bytes @ 0x9
   384   00000A                     	ds	1
   385   00000B                     color_writetoaddr@value:
   386                           	callstack 0
   387   00000B                     I2C_2_Master_Read@ack:
   388                           	callstack 0
   389   00000B                     ___wmul@multiplicand:
   390                           	callstack 0
   391                           
   392                           ; 2 bytes @ 0xA
   393   00000B                     	ds	1
   394   00000C                     color_writetoaddr@address:
   395                           	callstack 0
   396   00000C                     I2C_2_Master_Read@tmp:
   397                           	callstack 0
   398                           
   399                           ; 1 bytes @ 0xB
   400   00000C                     	ds	1
   401   00000D                     ??_color_click_init:
   402   00000D                     ??_init_colorclick_interrupts:
   403   00000D                     ??___xxtofl:
   404   00000D                     ?_color_read_Red:
   405                           	callstack 0
   406   00000D                     ?_color_read_Green:
   407                           	callstack 0
   408   00000D                     ?_color_read_Blue:
   409                           	callstack 0
   410   00000D                     ?_color_read_Clear:
   411                           	callstack 0
   412   00000D                     ___wmul@product:
   413                           	callstack 0
   414                           
   415                           ; 2 bytes @ 0xC
   416   00000D                     	ds	1
   417   00000E                     
   418                           ; 1 bytes @ 0xD
   419   00000E                     	ds	1
   420   00000F                     ??_color_read_Red:
   421   00000F                     ??_color_read_Green:
   422   00000F                     ??_color_read_Blue:
   423   00000F                     ??_color_read_Clear:
   424   00000F                     ?___lwdiv:
   425                           	callstack 0
   426   00000F                     ___lwdiv@dividend:
   427                           	callstack 0
   428                           
   429                           ; 2 bytes @ 0xE
   430   00000F                     	ds	2
   431   000011                     ___xxtofl@sign:
   432                           	callstack 0
   433   000011                     ___lwdiv@divisor:
   434                           	callstack 0
   435                           
   436                           ; 2 bytes @ 0x10
   437   000011                     	ds	1
   438   000012                     ___xxtofl@exp:
   439                           	callstack 0
   440   000012                     color_read_Red@tmp:
   441                           	callstack 0
   442   000012                     color_read_Green@tmp:
   443                           	callstack 0
   444   000012                     color_read_Blue@tmp:
   445                           	callstack 0
   446   000012                     color_read_Clear@tmp:
   447                           	callstack 0
   448                           
   449                           ; 2 bytes @ 0x11
   450   000012                     	ds	1
   451   000013                     ___lwdiv@quotient:
   452                           	callstack 0
   453   000013                     ___xxtofl@arg:
   454                           	callstack 0
   455                           
   456                           ; 4 bytes @ 0x12
   457   000013                     	ds	1
   458   000014                     Update_RGBC@tempval:
   459                           	callstack 0
   460                           
   461                           ; 2 bytes @ 0x13
   462   000014                     	ds	1
   463   000015                     ___lwdiv@counter:
   464                           	callstack 0
   465                           
   466                           ; 1 bytes @ 0x14
   467   000015                     	ds	1
   468   000016                     setMotorPWM@m:
   469                           	callstack 0
   470                           
   471                           ; 2 bytes @ 0x15
   472   000016                     	ds	1
   473   000017                     ?___fldiv:
   474                           	callstack 0
   475   000017                     ___fldiv@b:
   476                           	callstack 0
   477                           
   478                           ; 4 bytes @ 0x16
   479   000017                     	ds	1
   480   000018                     ??_setMotorPWM:
   481                           
   482                           ; 1 bytes @ 0x17
   483   000018                     	ds	2
   484   00001A                     setMotorPWM@posDuty:
   485                           	callstack 0
   486                           
   487                           ; 1 bytes @ 0x19
   488   00001A                     	ds	1
   489   00001B                     setMotorPWM@negDuty:
   490                           	callstack 0
   491   00001B                     ___fldiv@a:
   492                           	callstack 0
   493                           
   494                           ; 4 bytes @ 0x1A
   495   00001B                     	ds	1
   496   00001C                     stop@mL:
   497                           	callstack 0
   498   00001C                     turnLeft@mL:
   499                           	callstack 0
   500   00001C                     turnRight@mL:
   501                           	callstack 0
   502   00001C                     fullSpeedAhead@mL:
   503                           	callstack 0
   504   00001C                     fullSpeedBackwards@mL:
   505                           	callstack 0
   506                           
   507                           ; 2 bytes @ 0x1B
   508   00001C                     	ds	2
   509   00001E                     stop@mR:
   510                           	callstack 0
   511   00001E                     turnLeft@mR:
   512                           	callstack 0
   513   00001E                     turnRight@mR:
   514                           	callstack 0
   515   00001E                     fullSpeedAhead@mR:
   516                           	callstack 0
   517   00001E                     fullSpeedBackwards@mR:
   518                           	callstack 0
   519                           
   520                           ; 2 bytes @ 0x1D
   521   00001E                     	ds	1
   522   00001F                     ??___fldiv:
   523                           
   524                           ; 1 bytes @ 0x1E
   525   00001F                     	ds	1
   526   000020                     ??_stop:
   527   000020                     ??_turnLeft:
   528   000020                     ??_turnRight:
   529   000020                     ??_fullSpeedAhead:
   530   000020                     ??_fullSpeedBackwards:
   531                           
   532                           ; 1 bytes @ 0x1F
   533   000020                     	ds	2
   534   000022                     turnLeft90@mL:
   535                           	callstack 0
   536   000022                     turnRight90@mL:
   537                           	callstack 0
   538   000022                     turnRight135@mL:
   539                           	callstack 0
   540   000022                     turnLeft135@mL:
   541                           	callstack 0
   542                           
   543                           ; 2 bytes @ 0x21
   544   000022                     	ds	1
   545   000023                     ___fldiv@rem:
   546                           	callstack 0
   547                           
   548                           ; 4 bytes @ 0x22
   549   000023                     	ds	1
   550   000024                     turnLeft90@mR:
   551                           	callstack 0
   552   000024                     turnRight90@mR:
   553                           	callstack 0
   554   000024                     turnRight135@mR:
   555                           	callstack 0
   556   000024                     turnLeft135@mR:
   557                           	callstack 0
   558                           
   559                           ; 2 bytes @ 0x23
   560   000024                     	ds	2
   561   000026                     turnLeft90@a:
   562                           	callstack 0
   563   000026                     turnRight90@a:
   564                           	callstack 0
   565   000026                     turnRight135@a:
   566                           	callstack 0
   567   000026                     turnLeft135@a:
   568                           	callstack 0
   569                           
   570                           ; 1 bytes @ 0x25
   571   000026                     	ds	1
   572   000027                     ___fldiv@sign:
   573                           	callstack 0
   574   000027                     RedInstructions@mL:
   575                           	callstack 0
   576   000027                     GreenInstructions@mL:
   577                           	callstack 0
   578   000027                     BlueInstructions@mL:
   579                           	callstack 0
   580   000027                     YellowInstructions@mL:
   581                           	callstack 0
   582   000027                     PinkInstructions@mL:
   583                           	callstack 0
   584   000027                     OrangeInstructions@mL:
   585                           	callstack 0
   586   000027                     LightBlueInstructions@mL:
   587                           	callstack 0
   588                           
   589                           ; 2 bytes @ 0x26
   590   000027                     	ds	1
   591   000028                     ___fldiv@new_exp:
   592                           	callstack 0
   593                           
   594                           ; 2 bytes @ 0x27
   595   000028                     	ds	1
   596   000029                     RedInstructions@mR:
   597                           	callstack 0
   598   000029                     GreenInstructions@mR:
   599                           	callstack 0
   600   000029                     BlueInstructions@mR:
   601                           	callstack 0
   602   000029                     YellowInstructions@mR:
   603                           	callstack 0
   604   000029                     PinkInstructions@mR:
   605                           	callstack 0
   606   000029                     OrangeInstructions@mR:
   607                           	callstack 0
   608   000029                     LightBlueInstructions@mR:
   609                           	callstack 0
   610                           
   611                           ; 2 bytes @ 0x28
   612   000029                     	ds	1
   613   00002A                     ___fldiv@grs:
   614                           	callstack 0
   615                           
   616                           ; 4 bytes @ 0x29
   617   00002A                     	ds	1
   618   00002B                     ??_RedInstructions:
   619   00002B                     ??_GreenInstructions:
   620   00002B                     ??_BlueInstructions:
   621   00002B                     ??_YellowInstructions:
   622   00002B                     ??_PinkInstructions:
   623   00002B                     ??_OrangeInstructions:
   624   00002B                     ??_LightBlueInstructions:
   625                           
   626                           ; 1 bytes @ 0x2A
   627   00002B                     	ds	2
   628   00002D                     RedInstructions@a:
   629                           	callstack 0
   630   00002D                     GreenInstructions@a:
   631                           	callstack 0
   632   00002D                     BlueInstructions@a:
   633                           	callstack 0
   634   00002D                     YellowInstructions@a:
   635                           	callstack 0
   636   00002D                     PinkInstructions@a:
   637                           	callstack 0
   638   00002D                     OrangeInstructions@a:
   639                           	callstack 0
   640   00002D                     LightBlueInstructions@a:
   641                           	callstack 0
   642                           
   643                           ; 1 bytes @ 0x2C
   644   00002D                     	ds	1
   645   00002E                     ___fldiv@bexp:
   646                           	callstack 0
   647   00002E                     MoveBuggy@color_detected:
   648                           	callstack 0
   649                           
   650                           ; 2 bytes @ 0x2D
   651   00002E                     	ds	1
   652   00002F                     ___fldiv@aexp:
   653                           	callstack 0
   654                           
   655                           ; 1 bytes @ 0x2E
   656   00002F                     	ds	1
   657   000030                     ?___flmul:
   658                           	callstack 0
   659   000030                     MoveBuggy@mL:
   660                           	callstack 0
   661   000030                     ___flmul@b:
   662                           	callstack 0
   663                           
   664                           ; 4 bytes @ 0x2F
   665   000030                     	ds	2
   666   000032                     MoveBuggy@mR:
   667                           	callstack 0
   668                           
   669                           ; 2 bytes @ 0x31
   670   000032                     	ds	2
   671   000034                     ___flmul@a:
   672                           	callstack 0
   673                           
   674                           ; 4 bytes @ 0x33
   675   000034                     	ds	4
   676   000038                     ??___flmul:
   677                           
   678                           ; 1 bytes @ 0x37
   679   000038                     	ds	4
   680   00003C                     ___flmul@sign:
   681                           	callstack 0
   682                           
   683                           ; 1 bytes @ 0x3B
   684   00003C                     	ds	1
   685   00003D                     ___flmul@grs:
   686                           	callstack 0
   687                           
   688                           ; 4 bytes @ 0x3C
   689   00003D                     	ds	4
   690   000041                     ___flmul@aexp:
   691                           	callstack 0
   692                           
   693                           ; 1 bytes @ 0x40
   694   000041                     	ds	1
   695   000042                     ___flmul@bexp:
   696                           	callstack 0
   697                           
   698                           ; 1 bytes @ 0x41
   699   000042                     	ds	1
   700   000043                     ___flmul@prod:
   701                           	callstack 0
   702                           
   703                           ; 4 bytes @ 0x42
   704   000043                     	ds	4
   705   000047                     ___flmul@temp:
   706                           	callstack 0
   707                           
   708                           ; 2 bytes @ 0x46
   709   000047                     	ds	2
   710   000049                     ?___fltol:
   711                           	callstack 0
   712   000049                     ___fltol@f1:
   713                           	callstack 0
   714                           
   715                           ; 4 bytes @ 0x48
   716   000049                     	ds	4
   717   00004D                     ___fltol@sign1:
   718                           	callstack 0
   719                           
   720                           ; 1 bytes @ 0x4C
   721   00004D                     	ds	1
   722   00004E                     ___fltol@exp1:
   723                           	callstack 0
   724                           
   725                           ; 1 bytes @ 0x4D
   726   00004E                     	ds	1
   727                           
   728 ;;
   729 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   730 ;;
   731 ;; *************** function _main *****************
   732 ;; Defined at:
   733 ;;		line 21 in file "main_motor.c"
   734 ;; Parameters:    Size  Location     Type
   735 ;;		None
   736 ;; Auto vars:     Size  Location     Type
   737 ;;  b               1   24[BANK0 ] unsigned char 
   738 ;;  motorR          9   43[BANK0 ] struct DC_motor
   739 ;;  motorL          9   34[BANK0 ] struct DC_motor
   740 ;;  initial_colo    8   26[BANK0 ] struct RGB_val
   741 ;;  color_detect    1   25[BANK0 ] unsigned char 
   742 ;; Return value:  Size  Location     Type
   743 ;;                  1    wreg      void 
   744 ;; Registers used:
   745 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   746 ;; Tracked objects:
   747 ;;		On entry : 0/0
   748 ;;		On exit  : 0/0
   749 ;;		Unchanged: 0/0
   750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   752 ;;      Locals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   753 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   754 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   755 ;;Total ram usage:       30 bytes
   756 ;; Hardware stack levels required when called: 13
   757 ;; This function calls:
   758 ;;		_Interrupts_init
   759 ;;		_LED_init
   760 ;;		_MoveBuggy
   761 ;;		_Timer0_init
   762 ;;		_Update_RGBC
   763 ;;		_WhiteLight
   764 ;;		_color_click_init
   765 ;;		_detect_color
   766 ;;		_fullSpeedAhead
   767 ;;		_initDCmotorsPWM
   768 ;;		_stop
   769 ;; This function is called by:
   770 ;;		Startup code after reset
   771 ;; This function uses a non-reentrant model
   772 ;;
   773                           
   774                           	psect	text0
   775   00115C                     __ptext0:
   776                           	callstack 0
   777   00115C                     _main:
   778                           	callstack 18
   779   00115C                     
   780                           ;main_motor.c: 24:     RGB_val initial_color;;main_motor.c: 25:     initial_color.R = 0;
   781   00115C  0E00               	movlw	0
   782   00115E  0100               	movlb	0	; () banked
   783   001160  6FCD               	movwf	(main@initial_color+1)& (0+255),b
   784   001162  0E00               	movlw	0
   785   001164  6FCC               	movwf	main@initial_color& (0+255),b
   786                           
   787                           ;main_motor.c: 26:     initial_color.G = 0;
   788   001166  0E00               	movlw	0
   789   001168  6FCF               	movwf	(main@initial_color+3)& (0+255),b
   790   00116A  0E00               	movlw	0
   791   00116C  6FCE               	movwf	(main@initial_color+2)& (0+255),b
   792                           
   793                           ;main_motor.c: 27:     initial_color.B = 0;
   794   00116E  0E00               	movlw	0
   795   001170  6FD1               	movwf	(main@initial_color+5)& (0+255),b
   796   001172  0E00               	movlw	0
   797   001174  6FD0               	movwf	(main@initial_color+4)& (0+255),b
   798                           
   799                           ;main_motor.c: 28:     initial_color.C = 0;
   800   001176  0E00               	movlw	0
   801   001178  6FD3               	movwf	(main@initial_color+7)& (0+255),b
   802   00117A  0E00               	movlw	0
   803   00117C  6FD2               	movwf	(main@initial_color+6)& (0+255),b
   804   00117E                     
   805                           ; BSR set to: 0
   806                           ;main_motor.c: 30:     LED_init();
   807   00117E  ECFB  F011         	call	_LED_init	;wreg free
   808   001182                     
   809                           ;main_motor.c: 31:     color_click_init();
   810   001182  EC23  F011         	call	_color_click_init	;wreg free
   811   001186                     
   812                           ;main_motor.c: 32:     Interrupts_init();
   813   001186  EC8D  F011         	call	_Interrupts_init	;wreg free
   814                           
   815                           ;main_motor.c: 34:     Timer0_init();
   816   00118A  ECB1  F011         	call	_Timer0_init	;wreg free
   817                           
   818                           ;main_motor.c: 37:     initDCmotorsPWM(99);
   819   00118E  0E00               	movlw	0
   820   001190  6E0A               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   821   001192  0E63               	movlw	99
   822   001194  6E09               	movwf	initDCmotorsPWM@PWMperiod^0,c
   823   001196  EC00  F00D         	call	_initDCmotorsPWM	;wreg free
   824   00119A                     
   825                           ;main_motor.c: 39:     struct DC_motor motorL, motorR;;main_motor.c: 41:     motorL.powe
      +                          r=0;
   826   00119A  0E00               	movlw	0
   827   00119C  0100               	movlb	0	; () banked
   828   00119E  6FD4               	movwf	main@motorL& (0+255),b
   829   0011A0                     
   830                           ; BSR set to: 0
   831                           ;main_motor.c: 42:     motorL.direction=1;
   832   0011A0  0E01               	movlw	1
   833   0011A2  6FD5               	movwf	(main@motorL+1)& (0+255),b
   834   0011A4                     
   835                           ; BSR set to: 0
   836                           ;main_motor.c: 43:     motorL.brakemode=1;
   837   0011A4  0E01               	movlw	1
   838   0011A6  6FD6               	movwf	(main@motorL+2)& (0+255),b
   839   0011A8                     
   840                           ; BSR set to: 0
   841                           ;main_motor.c: 44:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
   842   0011A8  0EAA               	movlw	170
   843   0011AA  6FD9               	movwf	(main@motorL+5)& (0+255),b
   844   0011AC  0E0F               	movlw	15
   845   0011AE  6FDA               	movwf	(main@motorL+6)& (0+255),b
   846   0011B0                     
   847                           ; BSR set to: 0
   848                           ;main_motor.c: 45:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
   849   0011B0  0EA6               	movlw	166
   850   0011B2  6FDB               	movwf	(main@motorL+7)& (0+255),b
   851   0011B4  0E0F               	movlw	15
   852   0011B6  6FDC               	movwf	(main@motorL+8)& (0+255),b
   853   0011B8                     
   854                           ; BSR set to: 0
   855                           ;main_motor.c: 46:     motorL.PWMperiod= T2PR;
   856   0011B8  CFBC F0D7          	movff	4028,main@motorL+3	;volatile
   857   0011BC  6BD8               	clrf	(main@motorL+4)& (0+255),b
   858   0011BE                     
   859                           ; BSR set to: 0
   860                           ;main_motor.c: 48:     motorR.power=0;
   861   0011BE  0E00               	movlw	0
   862   0011C0  6FDD               	movwf	main@motorR& (0+255),b
   863   0011C2                     
   864                           ; BSR set to: 0
   865                           ;main_motor.c: 49:     motorR.direction=1;
   866   0011C2  0E01               	movlw	1
   867   0011C4  6FDE               	movwf	(main@motorR+1)& (0+255),b
   868   0011C6                     
   869                           ; BSR set to: 0
   870                           ;main_motor.c: 50:     motorR.brakemode=1;
   871   0011C6  0E01               	movlw	1
   872   0011C8  6FDF               	movwf	(main@motorR+2)& (0+255),b
   873   0011CA                     
   874                           ; BSR set to: 0
   875                           ;main_motor.c: 51:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
   876   0011CA  0E25               	movlw	37
   877   0011CC  6FE2               	movwf	(main@motorR+5)& (0+255),b
   878   0011CE  0E0F               	movlw	15
   879   0011D0  6FE3               	movwf	(main@motorR+6)& (0+255),b
   880   0011D2                     
   881                           ; BSR set to: 0
   882                           ;main_motor.c: 52:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
   883   0011D2  0E21               	movlw	33
   884   0011D4  6FE4               	movwf	(main@motorR+7)& (0+255),b
   885   0011D6  0E0F               	movlw	15
   886   0011D8  6FE5               	movwf	(main@motorR+8)& (0+255),b
   887   0011DA                     
   888                           ; BSR set to: 0
   889                           ;main_motor.c: 53:     motorR.PWMperiod= T2PR;
   890   0011DA  CFBC F0E0          	movff	4028,main@motorR+3	;volatile
   891   0011DE  6BE1               	clrf	(main@motorR+4)& (0+255),b
   892   0011E0                     
   893                           ; BSR set to: 0
   894                           ;main_motor.c: 57:     WhiteLight();
   895   0011E0  EC26  F012         	call	_WhiteLight	;wreg free
   896   0011E4                     l3833:
   897                           
   898                           ;main_motor.c: 59:         Update_RGBC(&initial_color);
   899   0011E4  0ECC               	movlw	low main@initial_color
   900   0011E6  6E14               	movwf	Update_RGBC@tempval^0,c
   901   0011E8  0E00               	movlw	high main@initial_color
   902   0011EA  6E15               	movwf	(Update_RGBC@tempval+1)^0,c
   903   0011EC  EC14  F00F         	call	_Update_RGBC	;wreg free
   904   0011F0                     
   905                           ;main_motor.c: 60:         color_detected = detect_color(&initial_color);
   906   0011F0  0ECC               	movlw	low main@initial_color
   907   0011F2  0100               	movlb	0	; () banked
   908   0011F4  6FB6               	movwf	detect_color@tempval& (0+255),b
   909   0011F6  0E00               	movlw	high main@initial_color
   910   0011F8  6FB7               	movwf	(detect_color@tempval+1)& (0+255),b
   911   0011FA  EC2E  F000         	call	_detect_color	;wreg free
   912   0011FE  0100               	movlb	0	; () banked
   913   001200  6FCB               	movwf	main@color_detected& (0+255),b
   914   001202                     
   915                           ; BSR set to: 0
   916                           ;main_motor.c: 62:         unsigned char b = 0;
   917   001202  0E00               	movlw	0
   918   001204  6FCA               	movwf	main@b& (0+255),b
   919   001206                     
   920                           ; BSR set to: 0
   921                           ;main_motor.c: 63:         if(color_detected == 0){
   922   001206  51CB               	movf	main@color_detected& (0+255),w,b
   923   001208  A4D8               	btfss	status,2,c
   924   00120A  EF09  F009         	goto	u4031
   925   00120E  EF0B  F009         	goto	u4030
   926   001212                     u4031:
   927   001212  EF19  F009         	goto	l3845
   928   001216                     u4030:
   929   001216                     
   930                           ; BSR set to: 0
   931                           ;main_motor.c: 64:             fullSpeedAhead(&motorL,&motorR);
   932   001216  0ED4               	movlw	low main@motorL
   933   001218  6E1C               	movwf	fullSpeedAhead@mL^0,c
   934   00121A  0E00               	movlw	high main@motorL
   935   00121C  6E1D               	movwf	(fullSpeedAhead@mL+1)^0,c
   936   00121E  0EDD               	movlw	low main@motorR
   937   001220  6E1E               	movwf	fullSpeedAhead@mR^0,c
   938   001222  0E00               	movlw	high main@motorR
   939   001224  6E1F               	movwf	(fullSpeedAhead@mR+1)^0,c
   940   001226  EC67  F00B         	call	_fullSpeedAhead	;wreg free
   941   00122A                     
   942                           ;main_motor.c: 65:             b++;
   943   00122A  0100               	movlb	0	; () banked
   944   00122C  2BCA               	incf	main@b& (0+255),f,b
   945                           
   946                           ;main_motor.c: 66:         }
   947   00122E  EFF2  F008         	goto	l3833
   948   001232                     l3845:
   949                           
   950                           ; BSR set to: 0
   951   001232  51CB               	movf	main@color_detected& (0+255),w,b
   952   001234  B4D8               	btfsc	status,2,c
   953   001236  EF1F  F009         	goto	u4041
   954   00123A  EF21  F009         	goto	u4040
   955   00123E                     u4041:
   956   00123E  EFF2  F008         	goto	l3833
   957   001242                     u4040:
   958   001242                     
   959                           ; BSR set to: 0
   960                           ;main_motor.c: 69:             LATHbits.LATH3 = 1;
   961   001242  8680               	bsf	128,3,c	;volatile
   962                           
   963                           ;main_motor.c: 71:             while(b>0){
   964   001244  EF30  F009         	goto	l3853
   965   001248                     l3849:
   966                           
   967                           ; BSR set to: 0
   968                           ;main_motor.c: 72:                 stop(&motorL,&motorR);
   969   001248  0ED4               	movlw	low main@motorL
   970   00124A  6E1C               	movwf	stop@mL^0,c
   971   00124C  0E00               	movlw	high main@motorL
   972   00124E  6E1D               	movwf	(stop@mL+1)^0,c
   973   001250  0EDD               	movlw	low main@motorR
   974   001252  6E1E               	movwf	stop@mR^0,c
   975   001254  0E00               	movlw	high main@motorR
   976   001256  6E1F               	movwf	(stop@mR+1)^0,c
   977   001258  EC3D  F00C         	call	_stop	;wreg free
   978   00125C                     
   979                           ;main_motor.c: 73:                 b--;
   980   00125C  0100               	movlb	0	; () banked
   981   00125E  07CA               	decf	main@b& (0+255),f,b
   982   001260                     l3853:
   983                           
   984                           ; BSR set to: 0
   985                           ;main_motor.c: 71:             while(b>0){
   986   001260  51CA               	movf	main@b& (0+255),w,b
   987   001262  A4D8               	btfss	status,2,c
   988   001264  EF36  F009         	goto	u4051
   989   001268  EF38  F009         	goto	u4050
   990   00126C                     u4051:
   991   00126C  EF24  F009         	goto	l3849
   992   001270                     u4050:
   993   001270                     
   994                           ; BSR set to: 0
   995                           ;main_motor.c: 75:             _delay((unsigned long)((500)*(64000000/4000.0)));
   996   001270  0E29               	movlw	41
   997   001272  0100               	movlb	0	; () banked
   998   001274  6FC9               	movwf	(??_main+1)& (0+255),b
   999   001276  0E96               	movlw	150
  1000   001278  6FC8               	movwf	??_main& (0+255),b
  1001   00127A  0E7F               	movlw	127
  1002   00127C                     u4067:
  1003   00127C  2EE8               	decfsz	wreg,f,c
  1004   00127E  D7FE               	bra	u4067
  1005   001280  2FC8               	decfsz	??_main& (0+255),f,b
  1006   001282  D7FC               	bra	u4067
  1007   001284  2FC9               	decfsz	(??_main+1)& (0+255),f,b
  1008   001286  D7FA               	bra	u4067
  1009   001288                     
  1010                           ;main_motor.c: 76:             LATHbits.LATH3 = 0;
  1011   001288  9680               	bcf	128,3,c	;volatile
  1012   00128A                     
  1013                           ;main_motor.c: 78:             MoveBuggy(color_detected,&motorL,&motorR);
  1014   00128A  0100               	movlb	0	; () banked
  1015   00128C  51CB               	movf	main@color_detected& (0+255),w,b
  1016   00128E  6FC8               	movwf	??_main& (0+255),b
  1017   001290  6BC9               	clrf	(??_main+1)& (0+255),b
  1018   001292  C0C8  F02E         	movff	??_main,MoveBuggy@color_detected
  1019   001296  C0C9  F02F         	movff	??_main+1,MoveBuggy@color_detected+1
  1020   00129A  0ED4               	movlw	low main@motorL
  1021   00129C  6E30               	movwf	MoveBuggy@mL^0,c
  1022   00129E  0E00               	movlw	high main@motorL
  1023   0012A0  6E31               	movwf	(MoveBuggy@mL+1)^0,c
  1024   0012A2  0EDD               	movlw	low main@motorR
  1025   0012A4  6E32               	movwf	MoveBuggy@mR^0,c
  1026   0012A6  0E00               	movlw	high main@motorR
  1027   0012A8  6E33               	movwf	(MoveBuggy@mR+1)^0,c
  1028   0012AA  EC5B  F009         	call	_MoveBuggy	;wreg free
  1029   0012AE  EFF2  F008         	goto	l3833
  1030   0012B2  EF2C  F000         	goto	start
  1031   0012B6                     __end_of_main:
  1032                           	callstack 0
  1033                           
  1034 ;; *************** function _initDCmotorsPWM *****************
  1035 ;; Defined at:
  1036 ;;		line 5 in file "dc_motor.c"
  1037 ;; Parameters:    Size  Location     Type
  1038 ;;  PWMperiod       2    8[COMRAM] unsigned int 
  1039 ;; Auto vars:     Size  Location     Type
  1040 ;;		None
  1041 ;; Return value:  Size  Location     Type
  1042 ;;                  1    wreg      void 
  1043 ;; Registers used:
  1044 ;;		wreg, status,2
  1045 ;; Tracked objects:
  1046 ;;		On entry : 0/0
  1047 ;;		On exit  : 0/0
  1048 ;;		Unchanged: 0/0
  1049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1050 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1053 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1054 ;;Total ram usage:        2 bytes
  1055 ;; Hardware stack levels used: 1
  1056 ;; Hardware stack levels required when called: 7
  1057 ;; This function calls:
  1058 ;;		Nothing
  1059 ;; This function is called by:
  1060 ;;		_main
  1061 ;; This function uses a non-reentrant model
  1062 ;;
  1063                           
  1064                           	psect	text1
  1065   001A00                     __ptext1:
  1066                           	callstack 0
  1067   001A00                     _initDCmotorsPWM:
  1068                           	callstack 23
  1069   001A00                     
  1070                           ;dc_motor.c: 7:     LATEbits.LATE2 = 0;
  1071   001A00  947D               	bcf	125,2,c	;volatile
  1072                           
  1073                           ;dc_motor.c: 8:     TRISEbits.TRISE2 = 0;
  1074   001A02  9485               	bcf	133,2,c	;volatile
  1075                           
  1076                           ;dc_motor.c: 9:     LATEbits.LATE4 = 0;
  1077   001A04  987D               	bcf	125,4,c	;volatile
  1078                           
  1079                           ;dc_motor.c: 10:     TRISEbits.TRISE4 = 0;
  1080   001A06  9885               	bcf	133,4,c	;volatile
  1081                           
  1082                           ;dc_motor.c: 11:     LATCbits.LATC7 = 0;
  1083   001A08  9E7B               	bcf	123,7,c	;volatile
  1084                           
  1085                           ;dc_motor.c: 12:     TRISCbits.TRISC7 = 0;
  1086   001A0A  9E83               	bcf	131,7,c	;volatile
  1087                           
  1088                           ;dc_motor.c: 13:     LATGbits.LATG6 = 0;
  1089   001A0C  9C7F               	bcf	127,6,c	;volatile
  1090                           
  1091                           ;dc_motor.c: 14:     TRISGbits.TRISG6 = 0;
  1092   001A0E  9C87               	bcf	135,6,c	;volatile
  1093   001A10                     
  1094                           ;dc_motor.c: 17:     RE2PPS=0x05;
  1095   001A10  0E05               	movlw	5
  1096   001A12  010E               	movlb	14	; () banked
  1097   001A14  6F74               	movwf	116,b	;volatile
  1098                           
  1099                           ;dc_motor.c: 18:     RE4PPS=0x06;
  1100   001A16  0E06               	movlw	6
  1101   001A18  6F76               	movwf	118,b	;volatile
  1102                           
  1103                           ;dc_motor.c: 19:     RC7PPS=0x07;
  1104   001A1A  0E07               	movlw	7
  1105   001A1C  6F69               	movwf	105,b	;volatile
  1106                           
  1107                           ;dc_motor.c: 20:     RG6PPS=0x08;
  1108   001A1E  0E08               	movlw	8
  1109   001A20  6F88               	movwf	136,b	;volatile
  1110                           
  1111                           ;dc_motor.c: 23:     T2CONbits.CKPS=0b100;
  1112   001A22  50BD               	movf	189,w,c	;volatile
  1113   001A24  0B8F               	andlw	-113
  1114   001A26  0940               	iorlw	64
  1115   001A28  6EBD               	movwf	189,c	;volatile
  1116                           
  1117                           ;dc_motor.c: 24:     T2HLTbits.MODE=0b00000;
  1118   001A2A  0EE0               	movlw	-32
  1119   001A2C  16BE               	andwf	190,f,c	;volatile
  1120                           
  1121                           ;dc_motor.c: 25:     T2CLKCONbits.CS=0b0001;
  1122   001A2E  50BF               	movf	191,w,c	;volatile
  1123   001A30  0BF0               	andlw	-16
  1124   001A32  0901               	iorlw	1
  1125   001A34  6EBF               	movwf	191,c	;volatile
  1126   001A36                     
  1127                           ; BSR set to: 14
  1128                           ;dc_motor.c: 29:     T2PR=PWMperiod;
  1129   001A36  C009  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  1130   001A3A                     
  1131                           ; BSR set to: 14
  1132                           ;dc_motor.c: 30:     T2CONbits.ON=1;
  1133   001A3A  8EBD               	bsf	189,7,c	;volatile
  1134                           
  1135                           ;dc_motor.c: 34:     CCPR1H=0;
  1136   001A3C  0E00               	movlw	0
  1137   001A3E  6EAA               	movwf	170,c	;volatile
  1138                           
  1139                           ;dc_motor.c: 35:     CCPR2H=0;
  1140   001A40  0E00               	movlw	0
  1141   001A42  6EA6               	movwf	166,c	;volatile
  1142                           
  1143                           ;dc_motor.c: 36:     CCPR3H=0;
  1144   001A44  0E00               	movlw	0
  1145   001A46  010F               	movlb	15	; () banked
  1146   001A48  6F25               	movwf	37,b	;volatile
  1147                           
  1148                           ;dc_motor.c: 37:     CCPR4H=0;
  1149   001A4A  0E00               	movlw	0
  1150   001A4C  6F21               	movwf	33,b	;volatile
  1151                           
  1152                           ;dc_motor.c: 40:     CCPTMRS0bits.C1TSEL=0;
  1153   001A4E  0EFC               	movlw	-4
  1154   001A50  16AD               	andwf	173,f,c	;volatile
  1155                           
  1156                           ;dc_motor.c: 41:     CCPTMRS0bits.C2TSEL=0;
  1157   001A52  0EF3               	movlw	-13
  1158   001A54  16AD               	andwf	173,f,c	;volatile
  1159                           
  1160                           ;dc_motor.c: 42:     CCPTMRS0bits.C3TSEL=0;
  1161   001A56  0ECF               	movlw	-49
  1162   001A58  16AD               	andwf	173,f,c	;volatile
  1163                           
  1164                           ;dc_motor.c: 43:     CCPTMRS0bits.C4TSEL=0;
  1165   001A5A  0E3F               	movlw	-193
  1166   001A5C  16AD               	andwf	173,f,c	;volatile
  1167   001A5E                     
  1168                           ; BSR set to: 15
  1169                           ;dc_motor.c: 46:     CCP1CONbits.FMT=1;
  1170   001A5E  88AB               	bsf	171,4,c	;volatile
  1171                           
  1172                           ;dc_motor.c: 47:     CCP1CONbits.CCP1MODE=0b1100;
  1173   001A60  50AB               	movf	171,w,c	;volatile
  1174   001A62  0BF0               	andlw	-16
  1175   001A64  090C               	iorlw	12
  1176   001A66  6EAB               	movwf	171,c	;volatile
  1177   001A68                     
  1178                           ; BSR set to: 15
  1179                           ;dc_motor.c: 48:     CCP1CONbits.EN=1;
  1180   001A68  8EAB               	bsf	171,7,c	;volatile
  1181   001A6A                     
  1182                           ; BSR set to: 15
  1183                           ;dc_motor.c: 50:     CCP2CONbits.FMT=1;
  1184   001A6A  88A7               	bsf	167,4,c	;volatile
  1185                           
  1186                           ;dc_motor.c: 51:     CCP2CONbits.CCP2MODE=0b1100;
  1187   001A6C  50A7               	movf	167,w,c	;volatile
  1188   001A6E  0BF0               	andlw	-16
  1189   001A70  090C               	iorlw	12
  1190   001A72  6EA7               	movwf	167,c	;volatile
  1191   001A74                     
  1192                           ; BSR set to: 15
  1193                           ;dc_motor.c: 52:     CCP2CONbits.EN=1;
  1194   001A74  8EA7               	bsf	167,7,c	;volatile
  1195   001A76                     
  1196                           ; BSR set to: 15
  1197                           ;dc_motor.c: 54:     CCP3CONbits.FMT=1;
  1198   001A76  8926               	bsf	38,4,b	;volatile
  1199                           
  1200                           ;dc_motor.c: 55:     CCP3CONbits.CCP3MODE=0b1100;
  1201   001A78  5126               	movf	38,w,b	;volatile
  1202   001A7A  0BF0               	andlw	-16
  1203   001A7C  090C               	iorlw	12
  1204   001A7E  6F26               	movwf	38,b	;volatile
  1205   001A80                     
  1206                           ; BSR set to: 15
  1207                           ;dc_motor.c: 56:     CCP3CONbits.EN=1;
  1208   001A80  8F26               	bsf	38,7,b	;volatile
  1209   001A82                     
  1210                           ; BSR set to: 15
  1211                           ;dc_motor.c: 58:     CCP4CONbits.FMT=1;
  1212   001A82  8922               	bsf	34,4,b	;volatile
  1213                           
  1214                           ;dc_motor.c: 59:     CCP4CONbits.CCP4MODE=0b1100;
  1215   001A84  5122               	movf	34,w,b	;volatile
  1216   001A86  0BF0               	andlw	-16
  1217   001A88  090C               	iorlw	12
  1218   001A8A  6F22               	movwf	34,b	;volatile
  1219   001A8C                     
  1220                           ; BSR set to: 15
  1221                           ;dc_motor.c: 60:     CCP4CONbits.EN=1;
  1222   001A8C  8F22               	bsf	34,7,b	;volatile
  1223   001A8E                     
  1224                           ; BSR set to: 15
  1225   001A8E  0012               	return		;funcret
  1226   001A90                     __end_of_initDCmotorsPWM:
  1227                           	callstack 0
  1228                           
  1229 ;; *************** function _fullSpeedAhead *****************
  1230 ;; Defined at:
  1231 ;;		line 215 in file "dc_motor.c"
  1232 ;; Parameters:    Size  Location     Type
  1233 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  1234 ;;		 -> main@motorL(9), 
  1235 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  1236 ;;		 -> main@motorR(9), 
  1237 ;; Auto vars:     Size  Location     Type
  1238 ;;		None
  1239 ;; Return value:  Size  Location     Type
  1240 ;;                  1    wreg      void 
  1241 ;; Registers used:
  1242 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1243 ;; Tracked objects:
  1244 ;;		On entry : 0/0
  1245 ;;		On exit  : 0/0
  1246 ;;		Unchanged: 0/0
  1247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1248 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1250 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1251 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1252 ;;Total ram usage:        6 bytes
  1253 ;; Hardware stack levels used: 1
  1254 ;; Hardware stack levels required when called: 9
  1255 ;; This function calls:
  1256 ;;		_setMotorPWM
  1257 ;; This function is called by:
  1258 ;;		_main
  1259 ;; This function uses a non-reentrant model
  1260 ;;
  1261                           
  1262                           	psect	text2
  1263   0016CE                     __ptext2:
  1264                           	callstack 0
  1265   0016CE                     _fullSpeedAhead:
  1266                           	callstack 21
  1267   0016CE                     
  1268                           ;dc_motor.c: 215: void fullSpeedAhead(DC_motor *mL, DC_motor *mR);dc_motor.c: 216: {;dc_
      +                          motor.c: 218:     mL->direction = 1;
  1269   0016CE  EE20 F001          	lfsr	2,1
  1270   0016D2  501C               	movf	fullSpeedAhead@mL^0,w,c
  1271   0016D4  26D9               	addwf	fsr2l,f,c
  1272   0016D6  501D               	movf	(fullSpeedAhead@mL+1)^0,w,c
  1273   0016D8  22DA               	addwfc	fsr2h,f,c
  1274   0016DA  0E01               	movlw	1
  1275   0016DC  6EDF               	movwf	indf2,c
  1276                           
  1277                           ;dc_motor.c: 219:     mL->brakemode = 0;
  1278   0016DE  EE20 F002          	lfsr	2,2
  1279   0016E2  501C               	movf	fullSpeedAhead@mL^0,w,c
  1280   0016E4  26D9               	addwf	fsr2l,f,c
  1281   0016E6  501D               	movf	(fullSpeedAhead@mL+1)^0,w,c
  1282   0016E8  22DA               	addwfc	fsr2h,f,c
  1283   0016EA  0E00               	movlw	0
  1284   0016EC  6EDF               	movwf	indf2,c
  1285                           
  1286                           ;dc_motor.c: 221:     mR->direction = 1;
  1287   0016EE  EE20 F001          	lfsr	2,1
  1288   0016F2  501E               	movf	fullSpeedAhead@mR^0,w,c
  1289   0016F4  26D9               	addwf	fsr2l,f,c
  1290   0016F6  501F               	movf	(fullSpeedAhead@mR+1)^0,w,c
  1291   0016F8  22DA               	addwfc	fsr2h,f,c
  1292   0016FA  0E01               	movlw	1
  1293   0016FC  6EDF               	movwf	indf2,c
  1294                           
  1295                           ;dc_motor.c: 222:     mR->brakemode = 0;
  1296   0016FE  EE20 F002          	lfsr	2,2
  1297   001702  501E               	movf	fullSpeedAhead@mR^0,w,c
  1298   001704  26D9               	addwf	fsr2l,f,c
  1299   001706  501F               	movf	(fullSpeedAhead@mR+1)^0,w,c
  1300   001708  22DA               	addwfc	fsr2h,f,c
  1301   00170A  0E00               	movlw	0
  1302   00170C  6EDF               	movwf	indf2,c
  1303                           
  1304                           ;dc_motor.c: 226:     if(mL->power>50){mL->power=50;}
  1305   00170E  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  1306   001712  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  1307   001716  50DF               	movf	indf2,w,c
  1308   001718  0A80               	xorlw	128
  1309   00171A  0F4D               	addlw	-179
  1310   00171C  A0D8               	btfss	status,0,c
  1311   00171E  EF93  F00B         	goto	u3261
  1312   001722  EF95  F00B         	goto	u3260
  1313   001726                     u3261:
  1314   001726  EF9B  F00B         	goto	l3417
  1315   00172A                     u3260:
  1316   00172A  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  1317   00172E  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  1318   001732  0E32               	movlw	50
  1319   001734  6EDF               	movwf	indf2,c
  1320   001736                     l3417:
  1321                           
  1322                           ;dc_motor.c: 227:     if(mR->power>50){mR->power=50;}
  1323   001736  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  1324   00173A  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  1325   00173E  50DF               	movf	indf2,w,c
  1326   001740  0A80               	xorlw	128
  1327   001742  0F4D               	addlw	-179
  1328   001744  A0D8               	btfss	status,0,c
  1329   001746  EFA7  F00B         	goto	u3271
  1330   00174A  EFA9  F00B         	goto	u3270
  1331   00174E                     u3271:
  1332   00174E  EFAF  F00B         	goto	l3421
  1333   001752                     u3270:
  1334   001752  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  1335   001756  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  1336   00175A  0E32               	movlw	50
  1337   00175C  6EDF               	movwf	indf2,c
  1338   00175E                     l3421:
  1339                           
  1340                           ;dc_motor.c: 229:     ++mL->power;
  1341   00175E  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  1342   001762  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  1343   001766  2ADF               	incf	indf2,f,c
  1344   001768                     
  1345                           ;dc_motor.c: 230:     ++mR->power;
  1346   001768  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  1347   00176C  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  1348   001770  2ADF               	incf	indf2,f,c
  1349   001772                     
  1350                           ;dc_motor.c: 232:     setMotorPWM(mL);
  1351   001772  C01C  F016         	movff	fullSpeedAhead@mL,setMotorPWM@m
  1352   001776  C01D  F017         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  1353   00177A  ECF8  F007         	call	_setMotorPWM	;wreg free
  1354   00177E                     
  1355                           ;dc_motor.c: 233:     setMotorPWM(mR);
  1356   00177E  C01E  F016         	movff	fullSpeedAhead@mR,setMotorPWM@m
  1357   001782  C01F  F017         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  1358   001786  ECF8  F007         	call	_setMotorPWM	;wreg free
  1359   00178A                     
  1360                           ;dc_motor.c: 234:     _delay((unsigned long)((50)*(64000000/4000.0)));
  1361   00178A  0E05               	movlw	5
  1362   00178C  6E21               	movwf	(??_fullSpeedAhead+1)^0,c
  1363   00178E  0E0F               	movlw	15
  1364   001790  6E20               	movwf	??_fullSpeedAhead^0,c
  1365   001792  0EF1               	movlw	241
  1366   001794                     u4077:
  1367   001794  2EE8               	decfsz	wreg,f,c
  1368   001796  D7FE               	bra	u4077
  1369   001798  2E20               	decfsz	??_fullSpeedAhead^0,f,c
  1370   00179A  D7FC               	bra	u4077
  1371   00179C  2E21               	decfsz	(??_fullSpeedAhead+1)^0,f,c
  1372   00179E  D7FA               	bra	u4077
  1373   0017A0  F000               	nop	
  1374   0017A2  0012               	return		;funcret
  1375   0017A4                     __end_of_fullSpeedAhead:
  1376                           	callstack 0
  1377                           
  1378 ;; *************** function _detect_color *****************
  1379 ;; Defined at:
  1380 ;;		line 99 in file "color.c"
  1381 ;; Parameters:    Size  Location     Type
  1382 ;;  tempval         2    4[BANK0 ] PTR struct RGB_val
  1383 ;;		 -> main@initial_color(8), 
  1384 ;; Auto vars:     Size  Location     Type
  1385 ;;  dist_B          1   21[BANK0 ] unsigned char 
  1386 ;;  dist_G          1   20[BANK0 ] unsigned char 
  1387 ;;  dist_R          1   19[BANK0 ] unsigned char 
  1388 ;;  color           1   18[BANK0 ] unsigned char 
  1389 ;; Return value:  Size  Location     Type
  1390 ;;                  1    wreg      unsigned char 
  1391 ;; Registers used:
  1392 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1393 ;; Tracked objects:
  1394 ;;		On entry : 0/0
  1395 ;;		On exit  : 0/0
  1396 ;;		Unchanged: 0/0
  1397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1398 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1399 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1400 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1401 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1402 ;;Total ram usage:       18 bytes
  1403 ;; Hardware stack levels used: 1
  1404 ;; Hardware stack levels required when called: 8
  1405 ;; This function calls:
  1406 ;;		___fldiv
  1407 ;;		___flmul
  1408 ;;		___fltol
  1409 ;;		___xxtofl
  1410 ;; This function is called by:
  1411 ;;		_main
  1412 ;; This function uses a non-reentrant model
  1413 ;;
  1414                           
  1415                           	psect	text3
  1416   00005C                     __ptext3:
  1417                           	callstack 0
  1418   00005C                     _detect_color:
  1419                           	callstack 22
  1420   00005C                     
  1421                           ;color.c: 99: unsigned char detect_color(RGB_val *tempval);color.c: 100: {;color.c: 101:
      +                               unsigned char color = 0;
  1422   00005C  0E00               	movlw	0
  1423   00005E  0100               	movlb	0	; () banked
  1424   000060  6FC4               	movwf	detect_color@color& (0+255),b
  1425   000062                     
  1426                           ; BSR set to: 0
  1427                           ;color.c: 104:     unsigned char dist_R, dist_G, dist_B;;color.c: 105:     dist_R = ((fl
      +                          oat)(tempval->R)/(float)(tempval->R + tempval->G + tempval->B))*100;
  1428   000062  0E00               	movlw	0
  1429   000064  6E34               	movwf	___flmul@a^0,c
  1430   000066  0E00               	movlw	0
  1431   000068  6E35               	movwf	(___flmul@a+1)^0,c
  1432   00006A  0EC8               	movlw	200
  1433   00006C  6E36               	movwf	(___flmul@a+2)^0,c
  1434   00006E  0E42               	movlw	66
  1435   000070  6E37               	movwf	(___flmul@a+3)^0,c
  1436   000072  EE20 F004          	lfsr	2,4
  1437   000076  51B6               	movf	detect_color@tempval& (0+255),w,b
  1438   000078  26D9               	addwf	fsr2l,f,c
  1439   00007A  51B7               	movf	(detect_color@tempval+1)& (0+255),w,b
  1440   00007C  22DA               	addwfc	fsr2h,f,c
  1441   00007E  CFDE F0B8          	movff	postinc2,??_detect_color
  1442   000082  CFDD F0B9          	movff	postdec2,??_detect_color+1
  1443   000086  EE20 F002          	lfsr	2,2
  1444   00008A  51B6               	movf	detect_color@tempval& (0+255),w,b
  1445   00008C  26D9               	addwf	fsr2l,f,c
  1446   00008E  51B7               	movf	(detect_color@tempval+1)& (0+255),w,b
  1447   000090  22DA               	addwfc	fsr2h,f,c
  1448   000092  CFDE F0BA          	movff	postinc2,??_detect_color+2
  1449   000096  CFDD F0BB          	movff	postdec2,??_detect_color+3
  1450   00009A  C0B6  FFD9         	movff	detect_color@tempval,fsr2l
  1451   00009E  C0B7  FFDA         	movff	detect_color@tempval+1,fsr2h
  1452   0000A2  CFDE F0BC          	movff	postinc2,??_detect_color+4
  1453   0000A6  CFDD F0BD          	movff	postdec2,??_detect_color+5
  1454   0000AA  51BA               	movf	(??_detect_color+2)& (0+255),w,b
  1455   0000AC  25BC               	addwf	(??_detect_color+4)& (0+255),w,b
  1456   0000AE  6FBE               	movwf	(??_detect_color+6)& (0+255),b
  1457   0000B0  51BB               	movf	(??_detect_color+3)& (0+255),w,b
  1458   0000B2  21BD               	addwfc	(??_detect_color+5)& (0+255),w,b
  1459   0000B4  6FBF               	movwf	(??_detect_color+7)& (0+255),b
  1460   0000B6  51B8               	movf	??_detect_color& (0+255),w,b
  1461   0000B8  25BE               	addwf	(??_detect_color+6)& (0+255),w,b
  1462   0000BA  6FC0               	movwf	(??_detect_color+8)& (0+255),b
  1463   0000BC  51B9               	movf	(??_detect_color+1)& (0+255),w,b
  1464   0000BE  21BF               	addwfc	(??_detect_color+7)& (0+255),w,b
  1465   0000C0  6FC1               	movwf	(??_detect_color+9)& (0+255),b
  1466   0000C2  C0C0  F009         	movff	??_detect_color+8,___xxtofl@val
  1467   0000C6  C0C1  F00A         	movff	??_detect_color+9,___xxtofl@val+1
  1468   0000CA  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1469   0000CC  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1470   0000CE  0E00               	movlw	0
  1471   0000D0  EC1E  F007         	call	___xxtofl
  1472   0000D4  C009  F01B         	movff	?___xxtofl,___fldiv@a
  1473   0000D8  C00A  F01C         	movff	?___xxtofl+1,___fldiv@a+1
  1474   0000DC  C00B  F01D         	movff	?___xxtofl+2,___fldiv@a+2
  1475   0000E0  C00C  F01E         	movff	?___xxtofl+3,___fldiv@a+3
  1476   0000E4  C0B6  FFD9         	movff	detect_color@tempval,fsr2l
  1477   0000E8  C0B7  FFDA         	movff	detect_color@tempval+1,fsr2h
  1478   0000EC  CFDE F0C2          	movff	postinc2,??_detect_color+10
  1479   0000F0  CFDD F0C3          	movff	postdec2,??_detect_color+11
  1480   0000F4  C0C2  F009         	movff	??_detect_color+10,___xxtofl@val
  1481   0000F8  C0C3  F00A         	movff	??_detect_color+11,___xxtofl@val+1
  1482   0000FC  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1483   0000FE  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1484   000100  0E00               	movlw	0
  1485   000102  EC1E  F007         	call	___xxtofl
  1486   000106  C009  F017         	movff	?___xxtofl,___fldiv@b
  1487   00010A  C00A  F018         	movff	?___xxtofl+1,___fldiv@b+1
  1488   00010E  C00B  F019         	movff	?___xxtofl+2,___fldiv@b+2
  1489   000112  C00C  F01A         	movff	?___xxtofl+3,___fldiv@b+3
  1490   000116  EC51  F005         	call	___fldiv	;wreg free
  1491   00011A  C017  F030         	movff	?___fldiv,___flmul@b
  1492   00011E  C018  F031         	movff	?___fldiv+1,___flmul@b+1
  1493   000122  C019  F032         	movff	?___fldiv+2,___flmul@b+2
  1494   000126  C01A  F033         	movff	?___fldiv+3,___flmul@b+3
  1495   00012A  EC3C  F003         	call	___flmul	;wreg free
  1496   00012E  C030  F049         	movff	?___flmul,___fltol@f1
  1497   000132  C031  F04A         	movff	?___flmul+1,___fltol@f1+1
  1498   000136  C032  F04B         	movff	?___flmul+2,___fltol@f1+2
  1499   00013A  C033  F04C         	movff	?___flmul+3,___fltol@f1+3
  1500   00013E  ECF5  F009         	call	___fltol	;wreg free
  1501   000142  5049               	movf	?___fltol^0,w,c
  1502   000144  0100               	movlb	0	; () banked
  1503   000146  6FC5               	movwf	detect_color@dist_R& (0+255),b
  1504   000148                     
  1505                           ; BSR set to: 0
  1506                           ;color.c: 106:     dist_G = ((float)(tempval->G)/(float)(tempval->R + tempval->G + tempv
      +                          al->B))*100;
  1507   000148  0E00               	movlw	0
  1508   00014A  6E34               	movwf	___flmul@a^0,c
  1509   00014C  0E00               	movlw	0
  1510   00014E  6E35               	movwf	(___flmul@a+1)^0,c
  1511   000150  0EC8               	movlw	200
  1512   000152  6E36               	movwf	(___flmul@a+2)^0,c
  1513   000154  0E42               	movlw	66
  1514   000156  6E37               	movwf	(___flmul@a+3)^0,c
  1515   000158  EE20 F004          	lfsr	2,4
  1516   00015C  51B6               	movf	detect_color@tempval& (0+255),w,b
  1517   00015E  26D9               	addwf	fsr2l,f,c
  1518   000160  51B7               	movf	(detect_color@tempval+1)& (0+255),w,b
  1519   000162  22DA               	addwfc	fsr2h,f,c
  1520   000164  CFDE F0B8          	movff	postinc2,??_detect_color
  1521   000168  CFDD F0B9          	movff	postdec2,??_detect_color+1
  1522   00016C  EE20 F002          	lfsr	2,2
  1523   000170  51B6               	movf	detect_color@tempval& (0+255),w,b
  1524   000172  26D9               	addwf	fsr2l,f,c
  1525   000174  51B7               	movf	(detect_color@tempval+1)& (0+255),w,b
  1526   000176  22DA               	addwfc	fsr2h,f,c
  1527   000178  CFDE F0BA          	movff	postinc2,??_detect_color+2
  1528   00017C  CFDD F0BB          	movff	postdec2,??_detect_color+3
  1529   000180  C0B6  FFD9         	movff	detect_color@tempval,fsr2l
  1530   000184  C0B7  FFDA         	movff	detect_color@tempval+1,fsr2h
  1531   000188  CFDE F0BC          	movff	postinc2,??_detect_color+4
  1532   00018C  CFDD F0BD          	movff	postdec2,??_detect_color+5
  1533   000190  51BA               	movf	(??_detect_color+2)& (0+255),w,b
  1534   000192  25BC               	addwf	(??_detect_color+4)& (0+255),w,b
  1535   000194  6FBE               	movwf	(??_detect_color+6)& (0+255),b
  1536   000196  51BB               	movf	(??_detect_color+3)& (0+255),w,b
  1537   000198  21BD               	addwfc	(??_detect_color+5)& (0+255),w,b
  1538   00019A  6FBF               	movwf	(??_detect_color+7)& (0+255),b
  1539   00019C  51B8               	movf	??_detect_color& (0+255),w,b
  1540   00019E  25BE               	addwf	(??_detect_color+6)& (0+255),w,b
  1541   0001A0  6FC0               	movwf	(??_detect_color+8)& (0+255),b
  1542   0001A2  51B9               	movf	(??_detect_color+1)& (0+255),w,b
  1543   0001A4  21BF               	addwfc	(??_detect_color+7)& (0+255),w,b
  1544   0001A6  6FC1               	movwf	(??_detect_color+9)& (0+255),b
  1545   0001A8  C0C0  F009         	movff	??_detect_color+8,___xxtofl@val
  1546   0001AC  C0C1  F00A         	movff	??_detect_color+9,___xxtofl@val+1
  1547   0001B0  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1548   0001B2  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1549   0001B4  0E00               	movlw	0
  1550   0001B6  EC1E  F007         	call	___xxtofl
  1551   0001BA  C009  F01B         	movff	?___xxtofl,___fldiv@a
  1552   0001BE  C00A  F01C         	movff	?___xxtofl+1,___fldiv@a+1
  1553   0001C2  C00B  F01D         	movff	?___xxtofl+2,___fldiv@a+2
  1554   0001C6  C00C  F01E         	movff	?___xxtofl+3,___fldiv@a+3
  1555   0001CA  0100               	movlb	0	; () banked
  1556   0001CC  EE20 F002          	lfsr	2,2
  1557   0001D0  51B6               	movf	detect_color@tempval& (0+255),w,b
  1558   0001D2  26D9               	addwf	fsr2l,f,c
  1559   0001D4  51B7               	movf	(detect_color@tempval+1)& (0+255),w,b
  1560   0001D6  22DA               	addwfc	fsr2h,f,c
  1561   0001D8  CFDE F0C2          	movff	postinc2,??_detect_color+10
  1562   0001DC  CFDD F0C3          	movff	postdec2,??_detect_color+11
  1563   0001E0  C0C2  F009         	movff	??_detect_color+10,___xxtofl@val
  1564   0001E4  C0C3  F00A         	movff	??_detect_color+11,___xxtofl@val+1
  1565   0001E8  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1566   0001EA  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1567   0001EC  0E00               	movlw	0
  1568   0001EE  EC1E  F007         	call	___xxtofl
  1569   0001F2  C009  F017         	movff	?___xxtofl,___fldiv@b
  1570   0001F6  C00A  F018         	movff	?___xxtofl+1,___fldiv@b+1
  1571   0001FA  C00B  F019         	movff	?___xxtofl+2,___fldiv@b+2
  1572   0001FE  C00C  F01A         	movff	?___xxtofl+3,___fldiv@b+3
  1573   000202  EC51  F005         	call	___fldiv	;wreg free
  1574   000206  C017  F030         	movff	?___fldiv,___flmul@b
  1575   00020A  C018  F031         	movff	?___fldiv+1,___flmul@b+1
  1576   00020E  C019  F032         	movff	?___fldiv+2,___flmul@b+2
  1577   000212  C01A  F033         	movff	?___fldiv+3,___flmul@b+3
  1578   000216  EC3C  F003         	call	___flmul	;wreg free
  1579   00021A  C030  F049         	movff	?___flmul,___fltol@f1
  1580   00021E  C031  F04A         	movff	?___flmul+1,___fltol@f1+1
  1581   000222  C032  F04B         	movff	?___flmul+2,___fltol@f1+2
  1582   000226  C033  F04C         	movff	?___flmul+3,___fltol@f1+3
  1583   00022A  ECF5  F009         	call	___fltol	;wreg free
  1584   00022E  5049               	movf	?___fltol^0,w,c
  1585   000230  0100               	movlb	0	; () banked
  1586   000232  6FC6               	movwf	detect_color@dist_G& (0+255),b
  1587   000234                     
  1588                           ; BSR set to: 0
  1589                           ;color.c: 107:     dist_B = ((float)(tempval->B)/(float)(tempval->R + tempval->G + tempv
      +                          al->B))*100;
  1590   000234  0E00               	movlw	0
  1591   000236  6E34               	movwf	___flmul@a^0,c
  1592   000238  0E00               	movlw	0
  1593   00023A  6E35               	movwf	(___flmul@a+1)^0,c
  1594   00023C  0EC8               	movlw	200
  1595   00023E  6E36               	movwf	(___flmul@a+2)^0,c
  1596   000240  0E42               	movlw	66
  1597   000242  6E37               	movwf	(___flmul@a+3)^0,c
  1598   000244  EE20 F004          	lfsr	2,4
  1599   000248  51B6               	movf	detect_color@tempval& (0+255),w,b
  1600   00024A  26D9               	addwf	fsr2l,f,c
  1601   00024C  51B7               	movf	(detect_color@tempval+1)& (0+255),w,b
  1602   00024E  22DA               	addwfc	fsr2h,f,c
  1603   000250  CFDE F0B8          	movff	postinc2,??_detect_color
  1604   000254  CFDD F0B9          	movff	postdec2,??_detect_color+1
  1605   000258  EE20 F002          	lfsr	2,2
  1606   00025C  51B6               	movf	detect_color@tempval& (0+255),w,b
  1607   00025E  26D9               	addwf	fsr2l,f,c
  1608   000260  51B7               	movf	(detect_color@tempval+1)& (0+255),w,b
  1609   000262  22DA               	addwfc	fsr2h,f,c
  1610   000264  CFDE F0BA          	movff	postinc2,??_detect_color+2
  1611   000268  CFDD F0BB          	movff	postdec2,??_detect_color+3
  1612   00026C  C0B6  FFD9         	movff	detect_color@tempval,fsr2l
  1613   000270  C0B7  FFDA         	movff	detect_color@tempval+1,fsr2h
  1614   000274  CFDE F0BC          	movff	postinc2,??_detect_color+4
  1615   000278  CFDD F0BD          	movff	postdec2,??_detect_color+5
  1616   00027C  51BA               	movf	(??_detect_color+2)& (0+255),w,b
  1617   00027E  25BC               	addwf	(??_detect_color+4)& (0+255),w,b
  1618   000280  6FBE               	movwf	(??_detect_color+6)& (0+255),b
  1619   000282  51BB               	movf	(??_detect_color+3)& (0+255),w,b
  1620   000284  21BD               	addwfc	(??_detect_color+5)& (0+255),w,b
  1621   000286  6FBF               	movwf	(??_detect_color+7)& (0+255),b
  1622   000288  51B8               	movf	??_detect_color& (0+255),w,b
  1623   00028A  25BE               	addwf	(??_detect_color+6)& (0+255),w,b
  1624   00028C  6FC0               	movwf	(??_detect_color+8)& (0+255),b
  1625   00028E  51B9               	movf	(??_detect_color+1)& (0+255),w,b
  1626   000290  21BF               	addwfc	(??_detect_color+7)& (0+255),w,b
  1627   000292  6FC1               	movwf	(??_detect_color+9)& (0+255),b
  1628   000294  C0C0  F009         	movff	??_detect_color+8,___xxtofl@val
  1629   000298  C0C1  F00A         	movff	??_detect_color+9,___xxtofl@val+1
  1630   00029C  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1631   00029E  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1632   0002A0  0E00               	movlw	0
  1633   0002A2  EC1E  F007         	call	___xxtofl
  1634   0002A6  C009  F01B         	movff	?___xxtofl,___fldiv@a
  1635   0002AA  C00A  F01C         	movff	?___xxtofl+1,___fldiv@a+1
  1636   0002AE  C00B  F01D         	movff	?___xxtofl+2,___fldiv@a+2
  1637   0002B2  C00C  F01E         	movff	?___xxtofl+3,___fldiv@a+3
  1638   0002B6  0100               	movlb	0	; () banked
  1639   0002B8  EE20 F004          	lfsr	2,4
  1640   0002BC  51B6               	movf	detect_color@tempval& (0+255),w,b
  1641   0002BE  26D9               	addwf	fsr2l,f,c
  1642   0002C0  51B7               	movf	(detect_color@tempval+1)& (0+255),w,b
  1643   0002C2  22DA               	addwfc	fsr2h,f,c
  1644   0002C4  CFDE F0C2          	movff	postinc2,??_detect_color+10
  1645   0002C8  CFDD F0C3          	movff	postdec2,??_detect_color+11
  1646   0002CC  C0C2  F009         	movff	??_detect_color+10,___xxtofl@val
  1647   0002D0  C0C3  F00A         	movff	??_detect_color+11,___xxtofl@val+1
  1648   0002D4  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1649   0002D6  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1650   0002D8  0E00               	movlw	0
  1651   0002DA  EC1E  F007         	call	___xxtofl
  1652   0002DE  C009  F017         	movff	?___xxtofl,___fldiv@b
  1653   0002E2  C00A  F018         	movff	?___xxtofl+1,___fldiv@b+1
  1654   0002E6  C00B  F019         	movff	?___xxtofl+2,___fldiv@b+2
  1655   0002EA  C00C  F01A         	movff	?___xxtofl+3,___fldiv@b+3
  1656   0002EE  EC51  F005         	call	___fldiv	;wreg free
  1657   0002F2  C017  F030         	movff	?___fldiv,___flmul@b
  1658   0002F6  C018  F031         	movff	?___fldiv+1,___flmul@b+1
  1659   0002FA  C019  F032         	movff	?___fldiv+2,___flmul@b+2
  1660   0002FE  C01A  F033         	movff	?___fldiv+3,___flmul@b+3
  1661   000302  EC3C  F003         	call	___flmul	;wreg free
  1662   000306  C030  F049         	movff	?___flmul,___fltol@f1
  1663   00030A  C031  F04A         	movff	?___flmul+1,___fltol@f1+1
  1664   00030E  C032  F04B         	movff	?___flmul+2,___fltol@f1+2
  1665   000312  C033  F04C         	movff	?___flmul+3,___fltol@f1+3
  1666   000316  ECF5  F009         	call	___fltol	;wreg free
  1667   00031A  5049               	movf	?___fltol^0,w,c
  1668   00031C  0100               	movlb	0	; () banked
  1669   00031E  6FC7               	movwf	detect_color@dist_B& (0+255),b
  1670   000320                     
  1671                           ; BSR set to: 0
  1672                           ;color.c: 109:     if(color_flag){
  1673   000320  51B1               	movf	_color_flag& (0+255),w,b
  1674   000322  B4D8               	btfsc	status,2,c
  1675   000324  EF96  F001         	goto	u3541
  1676   000328  EF98  F001         	goto	u3540
  1677   00032C                     u3541:
  1678   00032C  EF38  F003         	goto	l42
  1679   000330                     u3540:
  1680   000330                     
  1681                           ; BSR set to: 0
  1682                           ;color.c: 110:         if((74<=dist_R) && (dist_R<=76) && (10<=dist_G) && (dist_G<=12) &
      +                          & (13<=dist_B) && (dist_B<=15)){
  1683   000330  0E49               	movlw	73
  1684   000332  65C5               	cpfsgt	detect_color@dist_R& (0+255),b
  1685   000334  EF9E  F001         	goto	u3551
  1686   000338  EFA0  F001         	goto	u3550
  1687   00033C                     u3551:
  1688   00033C  EFCC  F001         	goto	l3697
  1689   000340                     u3550:
  1690   000340                     
  1691                           ; BSR set to: 0
  1692   000340  0E4D               	movlw	77
  1693   000342  61C5               	cpfslt	detect_color@dist_R& (0+255),b
  1694   000344  EFA6  F001         	goto	u3561
  1695   000348  EFA8  F001         	goto	u3560
  1696   00034C                     u3561:
  1697   00034C  EFCC  F001         	goto	l3697
  1698   000350                     u3560:
  1699   000350                     
  1700                           ; BSR set to: 0
  1701   000350  0E09               	movlw	9
  1702   000352  65C6               	cpfsgt	detect_color@dist_G& (0+255),b
  1703   000354  EFAE  F001         	goto	u3571
  1704   000358  EFB0  F001         	goto	u3570
  1705   00035C                     u3571:
  1706   00035C  EFCC  F001         	goto	l3697
  1707   000360                     u3570:
  1708   000360                     
  1709                           ; BSR set to: 0
  1710   000360  0E0D               	movlw	13
  1711   000362  61C6               	cpfslt	detect_color@dist_G& (0+255),b
  1712   000364  EFB6  F001         	goto	u3581
  1713   000368  EFB8  F001         	goto	u3580
  1714   00036C                     u3581:
  1715   00036C  EFCC  F001         	goto	l3697
  1716   000370                     u3580:
  1717   000370                     
  1718                           ; BSR set to: 0
  1719   000370  0E0C               	movlw	12
  1720   000372  65C7               	cpfsgt	detect_color@dist_B& (0+255),b
  1721   000374  EFBE  F001         	goto	u3591
  1722   000378  EFC0  F001         	goto	u3590
  1723   00037C                     u3591:
  1724   00037C  EFCC  F001         	goto	l3697
  1725   000380                     u3590:
  1726   000380                     
  1727                           ; BSR set to: 0
  1728   000380  0E10               	movlw	16
  1729   000382  61C7               	cpfslt	detect_color@dist_B& (0+255),b
  1730   000384  EFC6  F001         	goto	u3601
  1731   000388  EFC8  F001         	goto	u3600
  1732   00038C                     u3601:
  1733   00038C  EFCC  F001         	goto	l3697
  1734   000390                     u3600:
  1735   000390                     
  1736                           ; BSR set to: 0
  1737                           ;color.c: 111:             color = 1;
  1738   000390  0E01               	movlw	1
  1739   000392  6FC4               	movwf	detect_color@color& (0+255),b
  1740                           
  1741                           ;color.c: 112:         }
  1742   000394  EF38  F003         	goto	l42
  1743   000398                     l3697:
  1744                           
  1745                           ; BSR set to: 0
  1746   000398  0E23               	movlw	35
  1747   00039A  65C5               	cpfsgt	detect_color@dist_R& (0+255),b
  1748   00039C  EFD2  F001         	goto	u3611
  1749   0003A0  EFD4  F001         	goto	u3610
  1750   0003A4                     u3611:
  1751   0003A4  EF00  F002         	goto	l3711
  1752   0003A8                     u3610:
  1753   0003A8                     
  1754                           ; BSR set to: 0
  1755   0003A8  0E27               	movlw	39
  1756   0003AA  61C5               	cpfslt	detect_color@dist_R& (0+255),b
  1757   0003AC  EFDA  F001         	goto	u3621
  1758   0003B0  EFDC  F001         	goto	u3620
  1759   0003B4                     u3621:
  1760   0003B4  EF00  F002         	goto	l3711
  1761   0003B8                     u3620:
  1762   0003B8                     
  1763                           ; BSR set to: 0
  1764   0003B8  0E28               	movlw	40
  1765   0003BA  65C6               	cpfsgt	detect_color@dist_G& (0+255),b
  1766   0003BC  EFE2  F001         	goto	u3631
  1767   0003C0  EFE4  F001         	goto	u3630
  1768   0003C4                     u3631:
  1769   0003C4  EF00  F002         	goto	l3711
  1770   0003C8                     u3630:
  1771   0003C8                     
  1772                           ; BSR set to: 0
  1773   0003C8  0E2C               	movlw	44
  1774   0003CA  61C6               	cpfslt	detect_color@dist_G& (0+255),b
  1775   0003CC  EFEA  F001         	goto	u3641
  1776   0003D0  EFEC  F001         	goto	u3640
  1777   0003D4                     u3641:
  1778   0003D4  EF00  F002         	goto	l3711
  1779   0003D8                     u3640:
  1780   0003D8                     
  1781                           ; BSR set to: 0
  1782   0003D8  0E13               	movlw	19
  1783   0003DA  65C7               	cpfsgt	detect_color@dist_B& (0+255),b
  1784   0003DC  EFF2  F001         	goto	u3651
  1785   0003E0  EFF4  F001         	goto	u3650
  1786   0003E4                     u3651:
  1787   0003E4  EF00  F002         	goto	l3711
  1788   0003E8                     u3650:
  1789   0003E8                     
  1790                           ; BSR set to: 0
  1791   0003E8  0E17               	movlw	23
  1792   0003EA  61C7               	cpfslt	detect_color@dist_B& (0+255),b
  1793   0003EC  EFFA  F001         	goto	u3661
  1794   0003F0  EFFC  F001         	goto	u3660
  1795   0003F4                     u3661:
  1796   0003F4  EF00  F002         	goto	l3711
  1797   0003F8                     u3660:
  1798   0003F8                     
  1799                           ; BSR set to: 0
  1800                           ;color.c: 114:             color = 2;
  1801   0003F8  0E02               	movlw	2
  1802   0003FA  6FC4               	movwf	detect_color@color& (0+255),b
  1803                           
  1804                           ;color.c: 115:         }
  1805   0003FC  EF38  F003         	goto	l42
  1806   000400                     l3711:
  1807                           
  1808                           ; BSR set to: 0
  1809   000400  0E1C               	movlw	28
  1810   000402  65C5               	cpfsgt	detect_color@dist_R& (0+255),b
  1811   000404  EF06  F002         	goto	u3671
  1812   000408  EF08  F002         	goto	u3670
  1813   00040C                     u3671:
  1814   00040C  EF34  F002         	goto	l3725
  1815   000410                     u3670:
  1816   000410                     
  1817                           ; BSR set to: 0
  1818   000410  0E23               	movlw	35
  1819   000412  61C5               	cpfslt	detect_color@dist_R& (0+255),b
  1820   000414  EF0E  F002         	goto	u3681
  1821   000418  EF10  F002         	goto	u3680
  1822   00041C                     u3681:
  1823   00041C  EF34  F002         	goto	l3725
  1824   000420                     u3680:
  1825   000420                     
  1826                           ; BSR set to: 0
  1827   000420  0E1F               	movlw	31
  1828   000422  65C6               	cpfsgt	detect_color@dist_G& (0+255),b
  1829   000424  EF16  F002         	goto	u3691
  1830   000428  EF18  F002         	goto	u3690
  1831   00042C                     u3691:
  1832   00042C  EF34  F002         	goto	l3725
  1833   000430                     u3690:
  1834   000430                     
  1835                           ; BSR set to: 0
  1836   000430  0E27               	movlw	39
  1837   000432  61C6               	cpfslt	detect_color@dist_G& (0+255),b
  1838   000434  EF1E  F002         	goto	u3701
  1839   000438  EF20  F002         	goto	u3700
  1840   00043C                     u3701:
  1841   00043C  EF34  F002         	goto	l3725
  1842   000440                     u3700:
  1843   000440                     
  1844                           ; BSR set to: 0
  1845   000440  0E1E               	movlw	30
  1846   000442  65C7               	cpfsgt	detect_color@dist_B& (0+255),b
  1847   000444  EF26  F002         	goto	u3711
  1848   000448  EF28  F002         	goto	u3710
  1849   00044C                     u3711:
  1850   00044C  EF34  F002         	goto	l3725
  1851   000450                     u3710:
  1852   000450                     
  1853                           ; BSR set to: 0
  1854   000450  0E26               	movlw	38
  1855   000452  61C7               	cpfslt	detect_color@dist_B& (0+255),b
  1856   000454  EF2E  F002         	goto	u3721
  1857   000458  EF30  F002         	goto	u3720
  1858   00045C                     u3721:
  1859   00045C  EF34  F002         	goto	l3725
  1860   000460                     u3720:
  1861   000460                     
  1862                           ; BSR set to: 0
  1863                           ;color.c: 117:             color = 3;
  1864   000460  0E03               	movlw	3
  1865   000462  6FC4               	movwf	detect_color@color& (0+255),b
  1866                           
  1867                           ;color.c: 118:         }
  1868   000464  EF38  F003         	goto	l42
  1869   000468                     l3725:
  1870                           
  1871                           ; BSR set to: 0
  1872   000468  0E31               	movlw	49
  1873   00046A  65C5               	cpfsgt	detect_color@dist_R& (0+255),b
  1874   00046C  EF3A  F002         	goto	u3731
  1875   000470  EF3C  F002         	goto	u3730
  1876   000474                     u3731:
  1877   000474  EF68  F002         	goto	l3739
  1878   000478                     u3730:
  1879   000478                     
  1880                           ; BSR set to: 0
  1881   000478  0E35               	movlw	53
  1882   00047A  61C5               	cpfslt	detect_color@dist_R& (0+255),b
  1883   00047C  EF42  F002         	goto	u3741
  1884   000480  EF44  F002         	goto	u3740
  1885   000484                     u3741:
  1886   000484  EF68  F002         	goto	l3739
  1887   000488                     u3740:
  1888   000488                     
  1889                           ; BSR set to: 0
  1890   000488  0E1D               	movlw	29
  1891   00048A  65C6               	cpfsgt	detect_color@dist_G& (0+255),b
  1892   00048C  EF4A  F002         	goto	u3751
  1893   000490  EF4C  F002         	goto	u3750
  1894   000494                     u3751:
  1895   000494  EF68  F002         	goto	l3739
  1896   000498                     u3750:
  1897   000498                     
  1898                           ; BSR set to: 0
  1899   000498  0E21               	movlw	33
  1900   00049A  61C6               	cpfslt	detect_color@dist_G& (0+255),b
  1901   00049C  EF52  F002         	goto	u3761
  1902   0004A0  EF54  F002         	goto	u3760
  1903   0004A4                     u3761:
  1904   0004A4  EF68  F002         	goto	l3739
  1905   0004A8                     u3760:
  1906   0004A8                     
  1907                           ; BSR set to: 0
  1908   0004A8  0E10               	movlw	16
  1909   0004AA  65C7               	cpfsgt	detect_color@dist_B& (0+255),b
  1910   0004AC  EF5A  F002         	goto	u3771
  1911   0004B0  EF5C  F002         	goto	u3770
  1912   0004B4                     u3771:
  1913   0004B4  EF68  F002         	goto	l3739
  1914   0004B8                     u3770:
  1915   0004B8                     
  1916                           ; BSR set to: 0
  1917   0004B8  0E14               	movlw	20
  1918   0004BA  61C7               	cpfslt	detect_color@dist_B& (0+255),b
  1919   0004BC  EF62  F002         	goto	u3781
  1920   0004C0  EF64  F002         	goto	u3780
  1921   0004C4                     u3781:
  1922   0004C4  EF68  F002         	goto	l3739
  1923   0004C8                     u3780:
  1924   0004C8                     
  1925                           ; BSR set to: 0
  1926                           ;color.c: 120:             color = 4;
  1927   0004C8  0E04               	movlw	4
  1928   0004CA  6FC4               	movwf	detect_color@color& (0+255),b
  1929                           
  1930                           ;color.c: 121:         }
  1931   0004CC  EF38  F003         	goto	l42
  1932   0004D0                     l3739:
  1933                           
  1934                           ; BSR set to: 0
  1935   0004D0  0E2F               	movlw	47
  1936   0004D2  65C5               	cpfsgt	detect_color@dist_R& (0+255),b
  1937   0004D4  EF6E  F002         	goto	u3791
  1938   0004D8  EF70  F002         	goto	u3790
  1939   0004DC                     u3791:
  1940   0004DC  EF9C  F002         	goto	l3753
  1941   0004E0                     u3790:
  1942   0004E0                     
  1943                           ; BSR set to: 0
  1944   0004E0  0E33               	movlw	51
  1945   0004E2  61C5               	cpfslt	detect_color@dist_R& (0+255),b
  1946   0004E4  EF76  F002         	goto	u3801
  1947   0004E8  EF78  F002         	goto	u3800
  1948   0004EC                     u3801:
  1949   0004EC  EF9C  F002         	goto	l3753
  1950   0004F0                     u3800:
  1951   0004F0                     
  1952                           ; BSR set to: 0
  1953   0004F0  0E1B               	movlw	27
  1954   0004F2  65C6               	cpfsgt	detect_color@dist_G& (0+255),b
  1955   0004F4  EF7E  F002         	goto	u3811
  1956   0004F8  EF80  F002         	goto	u3810
  1957   0004FC                     u3811:
  1958   0004FC  EF9C  F002         	goto	l3753
  1959   000500                     u3810:
  1960   000500                     
  1961                           ; BSR set to: 0
  1962   000500  0E1F               	movlw	31
  1963   000502  61C6               	cpfslt	detect_color@dist_G& (0+255),b
  1964   000504  EF86  F002         	goto	u3821
  1965   000508  EF88  F002         	goto	u3820
  1966   00050C                     u3821:
  1967   00050C  EF9C  F002         	goto	l3753
  1968   000510                     u3820:
  1969   000510                     
  1970                           ; BSR set to: 0
  1971   000510  0E14               	movlw	20
  1972   000512  65C7               	cpfsgt	detect_color@dist_B& (0+255),b
  1973   000514  EF8E  F002         	goto	u3831
  1974   000518  EF90  F002         	goto	u3830
  1975   00051C                     u3831:
  1976   00051C  EF9C  F002         	goto	l3753
  1977   000520                     u3830:
  1978   000520                     
  1979                           ; BSR set to: 0
  1980   000520  0E18               	movlw	24
  1981   000522  61C7               	cpfslt	detect_color@dist_B& (0+255),b
  1982   000524  EF96  F002         	goto	u3841
  1983   000528  EF98  F002         	goto	u3840
  1984   00052C                     u3841:
  1985   00052C  EF9C  F002         	goto	l3753
  1986   000530                     u3840:
  1987   000530                     
  1988                           ; BSR set to: 0
  1989                           ;color.c: 123:             color = 5;
  1990   000530  0E05               	movlw	5
  1991   000532  6FC4               	movwf	detect_color@color& (0+255),b
  1992                           
  1993                           ;color.c: 124:         }
  1994   000534  EF38  F003         	goto	l42
  1995   000538                     l3753:
  1996                           
  1997                           ; BSR set to: 0
  1998   000538  0E3A               	movlw	58
  1999   00053A  65C5               	cpfsgt	detect_color@dist_R& (0+255),b
  2000   00053C  EFA2  F002         	goto	u3851
  2001   000540  EFA4  F002         	goto	u3850
  2002   000544                     u3851:
  2003   000544  EFD0  F002         	goto	l3767
  2004   000548                     u3850:
  2005   000548                     
  2006                           ; BSR set to: 0
  2007   000548  0E3E               	movlw	62
  2008   00054A  61C5               	cpfslt	detect_color@dist_R& (0+255),b
  2009   00054C  EFAA  F002         	goto	u3861
  2010   000550  EFAC  F002         	goto	u3860
  2011   000554                     u3861:
  2012   000554  EFD0  F002         	goto	l3767
  2013   000558                     u3860:
  2014   000558                     
  2015                           ; BSR set to: 0
  2016   000558  0E15               	movlw	21
  2017   00055A  65C6               	cpfsgt	detect_color@dist_G& (0+255),b
  2018   00055C  EFB2  F002         	goto	u3871
  2019   000560  EFB4  F002         	goto	u3870
  2020   000564                     u3871:
  2021   000564  EFD0  F002         	goto	l3767
  2022   000568                     u3870:
  2023   000568                     
  2024                           ; BSR set to: 0
  2025   000568  0E19               	movlw	25
  2026   00056A  61C6               	cpfslt	detect_color@dist_G& (0+255),b
  2027   00056C  EFBA  F002         	goto	u3881
  2028   000570  EFBC  F002         	goto	u3880
  2029   000574                     u3881:
  2030   000574  EFD0  F002         	goto	l3767
  2031   000578                     u3880:
  2032   000578                     
  2033                           ; BSR set to: 0
  2034   000578  0E0F               	movlw	15
  2035   00057A  65C7               	cpfsgt	detect_color@dist_B& (0+255),b
  2036   00057C  EFC2  F002         	goto	u3891
  2037   000580  EFC4  F002         	goto	u3890
  2038   000584                     u3891:
  2039   000584  EFD0  F002         	goto	l3767
  2040   000588                     u3890:
  2041   000588                     
  2042                           ; BSR set to: 0
  2043   000588  0E13               	movlw	19
  2044   00058A  61C7               	cpfslt	detect_color@dist_B& (0+255),b
  2045   00058C  EFCA  F002         	goto	u3901
  2046   000590  EFCC  F002         	goto	u3900
  2047   000594                     u3901:
  2048   000594  EFD0  F002         	goto	l3767
  2049   000598                     u3900:
  2050   000598                     
  2051                           ; BSR set to: 0
  2052                           ;color.c: 126:             color = 6;
  2053   000598  0E06               	movlw	6
  2054   00059A  6FC4               	movwf	detect_color@color& (0+255),b
  2055                           
  2056                           ;color.c: 127:         }
  2057   00059C  EF38  F003         	goto	l42
  2058   0005A0                     l3767:
  2059                           
  2060                           ; BSR set to: 0
  2061   0005A0  0E20               	movlw	32
  2062   0005A2  65C5               	cpfsgt	detect_color@dist_R& (0+255),b
  2063   0005A4  EFD6  F002         	goto	u3911
  2064   0005A8  EFD8  F002         	goto	u3910
  2065   0005AC                     u3911:
  2066   0005AC  EF04  F003         	goto	l3781
  2067   0005B0                     u3910:
  2068   0005B0                     
  2069                           ; BSR set to: 0
  2070   0005B0  0E24               	movlw	36
  2071   0005B2  61C5               	cpfslt	detect_color@dist_R& (0+255),b
  2072   0005B4  EFDE  F002         	goto	u3921
  2073   0005B8  EFE0  F002         	goto	u3920
  2074   0005BC                     u3921:
  2075   0005BC  EF04  F003         	goto	l3781
  2076   0005C0                     u3920:
  2077   0005C0                     
  2078                           ; BSR set to: 0
  2079   0005C0  0E25               	movlw	37
  2080   0005C2  65C6               	cpfsgt	detect_color@dist_G& (0+255),b
  2081   0005C4  EFE6  F002         	goto	u3931
  2082   0005C8  EFE8  F002         	goto	u3930
  2083   0005CC                     u3931:
  2084   0005CC  EF04  F003         	goto	l3781
  2085   0005D0                     u3930:
  2086   0005D0                     
  2087                           ; BSR set to: 0
  2088   0005D0  0E29               	movlw	41
  2089   0005D2  61C6               	cpfslt	detect_color@dist_G& (0+255),b
  2090   0005D4  EFEE  F002         	goto	u3941
  2091   0005D8  EFF0  F002         	goto	u3940
  2092   0005DC                     u3941:
  2093   0005DC  EF04  F003         	goto	l3781
  2094   0005E0                     u3940:
  2095   0005E0                     
  2096                           ; BSR set to: 0
  2097   0005E0  0E19               	movlw	25
  2098   0005E2  65C7               	cpfsgt	detect_color@dist_B& (0+255),b
  2099   0005E4  EFF6  F002         	goto	u3951
  2100   0005E8  EFF8  F002         	goto	u3950
  2101   0005EC                     u3951:
  2102   0005EC  EF04  F003         	goto	l3781
  2103   0005F0                     u3950:
  2104   0005F0                     
  2105                           ; BSR set to: 0
  2106   0005F0  0E1D               	movlw	29
  2107   0005F2  61C7               	cpfslt	detect_color@dist_B& (0+255),b
  2108   0005F4  EFFE  F002         	goto	u3961
  2109   0005F8  EF00  F003         	goto	u3960
  2110   0005FC                     u3961:
  2111   0005FC  EF04  F003         	goto	l3781
  2112   000600                     u3960:
  2113   000600                     
  2114                           ; BSR set to: 0
  2115                           ;color.c: 129:             color = 7;
  2116   000600  0E07               	movlw	7
  2117   000602  6FC4               	movwf	detect_color@color& (0+255),b
  2118                           
  2119                           ;color.c: 130:         }
  2120   000604  EF38  F003         	goto	l42
  2121   000608                     l3781:
  2122                           
  2123                           ; BSR set to: 0
  2124   000608  0E2A               	movlw	42
  2125   00060A  65C5               	cpfsgt	detect_color@dist_R& (0+255),b
  2126   00060C  EF0A  F003         	goto	u3971
  2127   000610  EF0C  F003         	goto	u3970
  2128   000614                     u3971:
  2129   000614  EF38  F003         	goto	l56
  2130   000618                     u3970:
  2131   000618                     
  2132                           ; BSR set to: 0
  2133   000618  0E2E               	movlw	46
  2134   00061A  61C5               	cpfslt	detect_color@dist_R& (0+255),b
  2135   00061C  EF12  F003         	goto	u3981
  2136   000620  EF14  F003         	goto	u3980
  2137   000624                     u3981:
  2138   000624  EF38  F003         	goto	l56
  2139   000628                     u3980:
  2140   000628                     
  2141                           ; BSR set to: 0
  2142   000628  0E1F               	movlw	31
  2143   00062A  65C6               	cpfsgt	detect_color@dist_G& (0+255),b
  2144   00062C  EF1A  F003         	goto	u3991
  2145   000630  EF1C  F003         	goto	u3990
  2146   000634                     u3991:
  2147   000634  EF38  F003         	goto	l56
  2148   000638                     u3990:
  2149   000638                     
  2150                           ; BSR set to: 0
  2151   000638  0E23               	movlw	35
  2152   00063A  61C6               	cpfslt	detect_color@dist_G& (0+255),b
  2153   00063C  EF22  F003         	goto	u4001
  2154   000640  EF24  F003         	goto	u4000
  2155   000644                     u4001:
  2156   000644  EF38  F003         	goto	l56
  2157   000648                     u4000:
  2158   000648                     
  2159                           ; BSR set to: 0
  2160   000648  0E15               	movlw	21
  2161   00064A  65C7               	cpfsgt	detect_color@dist_B& (0+255),b
  2162   00064C  EF2A  F003         	goto	u4011
  2163   000650  EF2C  F003         	goto	u4010
  2164   000654                     u4011:
  2165   000654  EF38  F003         	goto	l56
  2166   000658                     u4010:
  2167   000658                     
  2168                           ; BSR set to: 0
  2169   000658  0E19               	movlw	25
  2170   00065A  61C7               	cpfslt	detect_color@dist_B& (0+255),b
  2171   00065C  EF32  F003         	goto	u4021
  2172   000660  EF34  F003         	goto	u4020
  2173   000664                     u4021:
  2174   000664  EF38  F003         	goto	l56
  2175   000668                     u4020:
  2176   000668                     
  2177                           ; BSR set to: 0
  2178                           ;color.c: 132:             color = 8;
  2179   000668  0E08               	movlw	8
  2180   00066A  6FC4               	movwf	detect_color@color& (0+255),b
  2181                           
  2182                           ;color.c: 133:         }
  2183   00066C  EF38  F003         	goto	l42
  2184   000670                     l56:
  2185   000670                     l42:
  2186                           
  2187                           ; BSR set to: 0
  2188                           ;color.c: 138:     color_flag = 0;
  2189   000670  0E00               	movlw	0
  2190   000672  6FB1               	movwf	_color_flag& (0+255),b
  2191                           
  2192                           ;color.c: 139:     return color;
  2193   000674  51C4               	movf	detect_color@color& (0+255),w,b
  2194   000676                     
  2195                           ; BSR set to: 0
  2196   000676  0012               	return		;funcret
  2197   000678                     __end_of_detect_color:
  2198                           	callstack 0
  2199                           
  2200 ;; *************** function ___xxtofl *****************
  2201 ;; Defined at:
  2202 ;;		line 10 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\xxtofl.c"
  2203 ;; Parameters:    Size  Location     Type
  2204 ;;  sign            1    wreg     unsigned char 
  2205 ;;  val             4    8[COMRAM] long 
  2206 ;; Auto vars:     Size  Location     Type
  2207 ;;  sign            1   16[COMRAM] unsigned char 
  2208 ;;  arg             4   18[COMRAM] unsigned long 
  2209 ;;  exp             1   17[COMRAM] unsigned char 
  2210 ;; Return value:  Size  Location     Type
  2211 ;;                  4    8[COMRAM] unsigned char 
  2212 ;; Registers used:
  2213 ;;		wreg, status,2, status,0
  2214 ;; Tracked objects:
  2215 ;;		On entry : 0/0
  2216 ;;		On exit  : 0/0
  2217 ;;		Unchanged: 0/0
  2218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2219 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2220 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2221 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2222 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2223 ;;Total ram usage:       14 bytes
  2224 ;; Hardware stack levels used: 1
  2225 ;; Hardware stack levels required when called: 7
  2226 ;; This function calls:
  2227 ;;		Nothing
  2228 ;; This function is called by:
  2229 ;;		_detect_color
  2230 ;; This function uses a non-reentrant model
  2231 ;;
  2232                           
  2233                           	psect	text4
  2234   000E3C                     __ptext4:
  2235                           	callstack 0
  2236   000E3C                     ___xxtofl:
  2237                           	callstack 22
  2238                           
  2239                           ; BSR set to: 0
  2240                           ;incstack = 0
  2241                           ;___xxtofl@sign stored from wreg
  2242   000E3C  6E11               	movwf	___xxtofl@sign^0,c
  2243   000E3E  5011               	movf	___xxtofl@sign^0,w,c
  2244   000E40  B4D8               	btfsc	status,2,c
  2245   000E42  EF25  F007         	goto	u2671
  2246   000E46  EF27  F007         	goto	u2670
  2247   000E4A                     u2671:
  2248   000E4A  EF49  F007         	goto	l1245
  2249   000E4E                     u2670:
  2250   000E4E  BE0C               	btfsc	(___xxtofl@val+3)^0,7,c
  2251   000E50  EF2E  F007         	goto	u2680
  2252   000E54  EF2C  F007         	goto	u2681
  2253   000E58                     u2681:
  2254   000E58  EF49  F007         	goto	l1245
  2255   000E5C                     u2680:
  2256   000E5C  C009  F00D         	movff	___xxtofl@val,??___xxtofl
  2257   000E60  C00A  F00E         	movff	___xxtofl@val+1,??___xxtofl+1
  2258   000E64  C00B  F00F         	movff	___xxtofl@val+2,??___xxtofl+2
  2259   000E68  C00C  F010         	movff	___xxtofl@val+3,??___xxtofl+3
  2260   000E6C  1E0D               	comf	??___xxtofl^0,f,c
  2261   000E6E  1E0E               	comf	(??___xxtofl+1)^0,f,c
  2262   000E70  1E0F               	comf	(??___xxtofl+2)^0,f,c
  2263   000E72  1E10               	comf	(??___xxtofl+3)^0,f,c
  2264   000E74  2A0D               	incf	??___xxtofl^0,f,c
  2265   000E76  0E00               	movlw	0
  2266   000E78  220E               	addwfc	(??___xxtofl+1)^0,f,c
  2267   000E7A  220F               	addwfc	(??___xxtofl+2)^0,f,c
  2268   000E7C  2210               	addwfc	(??___xxtofl+3)^0,f,c
  2269   000E7E  C00D  F013         	movff	??___xxtofl,___xxtofl@arg
  2270   000E82  C00E  F014         	movff	??___xxtofl+1,___xxtofl@arg+1
  2271   000E86  C00F  F015         	movff	??___xxtofl+2,___xxtofl@arg+2
  2272   000E8A  C010  F016         	movff	??___xxtofl+3,___xxtofl@arg+3
  2273   000E8E  EF51  F007         	goto	l3193
  2274   000E92                     l1245:
  2275   000E92  C009  F013         	movff	___xxtofl@val,___xxtofl@arg
  2276   000E96  C00A  F014         	movff	___xxtofl@val+1,___xxtofl@arg+1
  2277   000E9A  C00B  F015         	movff	___xxtofl@val+2,___xxtofl@arg+2
  2278   000E9E  C00C  F016         	movff	___xxtofl@val+3,___xxtofl@arg+3
  2279   000EA2                     l3193:
  2280   000EA2  5009               	movf	___xxtofl@val^0,w,c
  2281   000EA4  100A               	iorwf	(___xxtofl@val+1)^0,w,c
  2282   000EA6  100B               	iorwf	(___xxtofl@val+2)^0,w,c
  2283   000EA8  100C               	iorwf	(___xxtofl@val+3)^0,w,c
  2284   000EAA  A4D8               	btfss	status,2,c
  2285   000EAC  EF5A  F007         	goto	u2691
  2286   000EB0  EF5C  F007         	goto	u2690
  2287   000EB4                     u2691:
  2288   000EB4  EF66  F007         	goto	l3199
  2289   000EB8                     u2690:
  2290   000EB8  0E00               	movlw	0
  2291   000EBA  6E09               	movwf	?___xxtofl^0,c
  2292   000EBC  0E00               	movlw	0
  2293   000EBE  6E0A               	movwf	(?___xxtofl+1)^0,c
  2294   000EC0  0E00               	movlw	0
  2295   000EC2  6E0B               	movwf	(?___xxtofl+2)^0,c
  2296   000EC4  0E00               	movlw	0
  2297   000EC6  6E0C               	movwf	(?___xxtofl+3)^0,c
  2298   000EC8  EFF7  F007         	goto	l1248
  2299   000ECC                     l3199:
  2300   000ECC  0E96               	movlw	150
  2301   000ECE  6E12               	movwf	___xxtofl@exp^0,c
  2302   000ED0  EF70  F007         	goto	l3203
  2303   000ED4                     l3201:
  2304   000ED4  2A12               	incf	___xxtofl@exp^0,f,c
  2305   000ED6  90D8               	bcf	status,0,c
  2306   000ED8  3216               	rrcf	(___xxtofl@arg+3)^0,f,c
  2307   000EDA  3215               	rrcf	(___xxtofl@arg+2)^0,f,c
  2308   000EDC  3214               	rrcf	(___xxtofl@arg+1)^0,f,c
  2309   000EDE  3213               	rrcf	___xxtofl@arg^0,f,c
  2310   000EE0                     l3203:
  2311   000EE0  0E00               	movlw	0
  2312   000EE2  1413               	andwf	___xxtofl@arg^0,w,c
  2313   000EE4  6E0D               	movwf	??___xxtofl^0,c
  2314   000EE6  0E00               	movlw	0
  2315   000EE8  1414               	andwf	(___xxtofl@arg+1)^0,w,c
  2316   000EEA  6E0E               	movwf	(??___xxtofl+1)^0,c
  2317   000EEC  0E00               	movlw	0
  2318   000EEE  1415               	andwf	(___xxtofl@arg+2)^0,w,c
  2319   000EF0  6E0F               	movwf	(??___xxtofl+2)^0,c
  2320   000EF2  0EFE               	movlw	254
  2321   000EF4  1416               	andwf	(___xxtofl@arg+3)^0,w,c
  2322   000EF6  6E10               	movwf	(??___xxtofl+3)^0,c
  2323   000EF8  500D               	movf	??___xxtofl^0,w,c
  2324   000EFA  100E               	iorwf	(??___xxtofl+1)^0,w,c
  2325   000EFC  100F               	iorwf	(??___xxtofl+2)^0,w,c
  2326   000EFE  1010               	iorwf	(??___xxtofl+3)^0,w,c
  2327   000F00  A4D8               	btfss	status,2,c
  2328   000F02  EF85  F007         	goto	u2701
  2329   000F06  EF87  F007         	goto	u2700
  2330   000F0A                     u2701:
  2331   000F0A  EF6A  F007         	goto	l3201
  2332   000F0E                     u2700:
  2333   000F0E  EF95  F007         	goto	l1252
  2334   000F12                     l3205:
  2335   000F12  2A12               	incf	___xxtofl@exp^0,f,c
  2336   000F14  0E01               	movlw	1
  2337   000F16  2613               	addwf	___xxtofl@arg^0,f,c
  2338   000F18  0E00               	movlw	0
  2339   000F1A  2214               	addwfc	(___xxtofl@arg+1)^0,f,c
  2340   000F1C  2215               	addwfc	(___xxtofl@arg+2)^0,f,c
  2341   000F1E  2216               	addwfc	(___xxtofl@arg+3)^0,f,c
  2342   000F20  90D8               	bcf	status,0,c
  2343   000F22  3216               	rrcf	(___xxtofl@arg+3)^0,f,c
  2344   000F24  3215               	rrcf	(___xxtofl@arg+2)^0,f,c
  2345   000F26  3214               	rrcf	(___xxtofl@arg+1)^0,f,c
  2346   000F28  3213               	rrcf	___xxtofl@arg^0,f,c
  2347   000F2A                     l1252:
  2348   000F2A  0E00               	movlw	0
  2349   000F2C  1413               	andwf	___xxtofl@arg^0,w,c
  2350   000F2E  6E0D               	movwf	??___xxtofl^0,c
  2351   000F30  0E00               	movlw	0
  2352   000F32  1414               	andwf	(___xxtofl@arg+1)^0,w,c
  2353   000F34  6E0E               	movwf	(??___xxtofl+1)^0,c
  2354   000F36  0E00               	movlw	0
  2355   000F38  1415               	andwf	(___xxtofl@arg+2)^0,w,c
  2356   000F3A  6E0F               	movwf	(??___xxtofl+2)^0,c
  2357   000F3C  0EFF               	movlw	255
  2358   000F3E  1416               	andwf	(___xxtofl@arg+3)^0,w,c
  2359   000F40  6E10               	movwf	(??___xxtofl+3)^0,c
  2360   000F42  500D               	movf	??___xxtofl^0,w,c
  2361   000F44  100E               	iorwf	(??___xxtofl+1)^0,w,c
  2362   000F46  100F               	iorwf	(??___xxtofl+2)^0,w,c
  2363   000F48  1010               	iorwf	(??___xxtofl+3)^0,w,c
  2364   000F4A  A4D8               	btfss	status,2,c
  2365   000F4C  EFAA  F007         	goto	u2711
  2366   000F50  EFAC  F007         	goto	u2710
  2367   000F54                     u2711:
  2368   000F54  EF89  F007         	goto	l3205
  2369   000F58                     u2710:
  2370   000F58  EFB4  F007         	goto	l3213
  2371   000F5C                     l3211:
  2372   000F5C  0612               	decf	___xxtofl@exp^0,f,c
  2373   000F5E  90D8               	bcf	status,0,c
  2374   000F60  3613               	rlcf	___xxtofl@arg^0,f,c
  2375   000F62  3614               	rlcf	(___xxtofl@arg+1)^0,f,c
  2376   000F64  3615               	rlcf	(___xxtofl@arg+2)^0,f,c
  2377   000F66  3616               	rlcf	(___xxtofl@arg+3)^0,f,c
  2378   000F68                     l3213:
  2379   000F68  BE15               	btfsc	(___xxtofl@arg+2)^0,7,c
  2380   000F6A  EFB9  F007         	goto	u2721
  2381   000F6E  EFBB  F007         	goto	u2720
  2382   000F72                     u2721:
  2383   000F72  EFC3  F007         	goto	l1259
  2384   000F76                     u2720:
  2385   000F76  0E02               	movlw	2
  2386   000F78  6012               	cpfslt	___xxtofl@exp^0,c
  2387   000F7A  EFC1  F007         	goto	u2731
  2388   000F7E  EFC3  F007         	goto	u2730
  2389   000F82                     u2731:
  2390   000F82  EFAE  F007         	goto	l3211
  2391   000F86                     u2730:
  2392   000F86                     l1259:
  2393   000F86  B012               	btfsc	___xxtofl@exp^0,0,c
  2394   000F88  EFC8  F007         	goto	u2741
  2395   000F8C  EFCA  F007         	goto	u2740
  2396   000F90                     u2741:
  2397   000F90  EFCB  F007         	goto	l3219
  2398   000F94                     u2740:
  2399   000F94  9E15               	bcf	(___xxtofl@arg+2)^0,7,c
  2400   000F96                     l3219:
  2401   000F96  90D8               	bcf	status,0,c
  2402   000F98  3212               	rrcf	___xxtofl@exp^0,f,c
  2403   000F9A  C012  F00D         	movff	___xxtofl@exp,??___xxtofl
  2404   000F9E  6A0E               	clrf	(??___xxtofl+1)^0,c
  2405   000FA0  6A0F               	clrf	(??___xxtofl+2)^0,c
  2406   000FA2  6A10               	clrf	(??___xxtofl+3)^0,c
  2407   000FA4  C00D  F010         	movff	??___xxtofl,??___xxtofl+3
  2408   000FA8  6A0F               	clrf	(??___xxtofl+2)^0,c
  2409   000FAA  6A0E               	clrf	(??___xxtofl+1)^0,c
  2410   000FAC  6A0D               	clrf	??___xxtofl^0,c
  2411   000FAE  500D               	movf	??___xxtofl^0,w,c
  2412   000FB0  1213               	iorwf	___xxtofl@arg^0,f,c
  2413   000FB2  500E               	movf	(??___xxtofl+1)^0,w,c
  2414   000FB4  1214               	iorwf	(___xxtofl@arg+1)^0,f,c
  2415   000FB6  500F               	movf	(??___xxtofl+2)^0,w,c
  2416   000FB8  1215               	iorwf	(___xxtofl@arg+2)^0,f,c
  2417   000FBA  5010               	movf	(??___xxtofl+3)^0,w,c
  2418   000FBC  1216               	iorwf	(___xxtofl@arg+3)^0,f,c
  2419   000FBE  5011               	movf	___xxtofl@sign^0,w,c
  2420   000FC0  B4D8               	btfsc	status,2,c
  2421   000FC2  EFE5  F007         	goto	u2751
  2422   000FC6  EFE7  F007         	goto	u2750
  2423   000FCA                     u2751:
  2424   000FCA  EFEF  F007         	goto	l3229
  2425   000FCE                     u2750:
  2426   000FCE  BE0C               	btfsc	(___xxtofl@val+3)^0,7,c
  2427   000FD0  EFEE  F007         	goto	u2760
  2428   000FD4  EFEC  F007         	goto	u2761
  2429   000FD8                     u2761:
  2430   000FD8  EFEF  F007         	goto	l3229
  2431   000FDC                     u2760:
  2432   000FDC  8E16               	bsf	(___xxtofl@arg+3)^0,7,c
  2433   000FDE                     l3229:
  2434   000FDE  C013  F009         	movff	___xxtofl@arg,?___xxtofl
  2435   000FE2  C014  F00A         	movff	___xxtofl@arg+1,?___xxtofl+1
  2436   000FE6  C015  F00B         	movff	___xxtofl@arg+2,?___xxtofl+2
  2437   000FEA  C016  F00C         	movff	___xxtofl@arg+3,?___xxtofl+3
  2438   000FEE                     l1248:
  2439   000FEE  0012               	return		;funcret
  2440   000FF0                     __end_of___xxtofl:
  2441                           	callstack 0
  2442                           
  2443 ;; *************** function ___fltol *****************
  2444 ;; Defined at:
  2445 ;;		line 43 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\fltol.c"
  2446 ;; Parameters:    Size  Location     Type
  2447 ;;  f1              4   72[COMRAM] unsigned char 
  2448 ;; Auto vars:     Size  Location     Type
  2449 ;;  exp1            1   77[COMRAM] unsigned char 
  2450 ;;  sign1           1   76[COMRAM] unsigned char 
  2451 ;; Return value:  Size  Location     Type
  2452 ;;                  4   72[COMRAM] long 
  2453 ;; Registers used:
  2454 ;;		wreg, status,2, status,0
  2455 ;; Tracked objects:
  2456 ;;		On entry : 0/0
  2457 ;;		On exit  : 0/0
  2458 ;;		Unchanged: 0/0
  2459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2460 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2461 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2462 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2463 ;;      Totals:         6       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2464 ;;Total ram usage:       10 bytes
  2465 ;; Hardware stack levels used: 1
  2466 ;; Hardware stack levels required when called: 7
  2467 ;; This function calls:
  2468 ;;		Nothing
  2469 ;; This function is called by:
  2470 ;;		_detect_color
  2471 ;; This function uses a non-reentrant model
  2472 ;;
  2473                           
  2474                           	psect	text5
  2475   0013EA                     __ptext5:
  2476                           	callstack 0
  2477   0013EA                     ___fltol:
  2478                           	callstack 22
  2479   0013EA  344B               	rlcf	(___fltol@f1+2)^0,w,c
  2480   0013EC  344C               	rlcf	(___fltol@f1+3)^0,w,c
  2481   0013EE  6E4E               	movwf	___fltol@exp1^0,c
  2482   0013F0  504E               	movf	___fltol@exp1^0,w,c
  2483   0013F2  A4D8               	btfss	status,2,c
  2484   0013F4  EFFE  F009         	goto	u3471
  2485   0013F8  EF00  F00A         	goto	u3470
  2486   0013FC                     u3471:
  2487   0013FC  EF0A  F00A         	goto	l3635
  2488   001400                     u3470:
  2489   001400                     l3631:
  2490   001400  0E00               	movlw	0
  2491   001402  6E49               	movwf	?___fltol^0,c
  2492   001404  0E00               	movlw	0
  2493   001406  6E4A               	movwf	(?___fltol+1)^0,c
  2494   001408  0E00               	movlw	0
  2495   00140A  6E4B               	movwf	(?___fltol+2)^0,c
  2496   00140C  0E00               	movlw	0
  2497   00140E  6E4C               	movwf	(?___fltol+3)^0,c
  2498   001410  EF78  F00A         	goto	l887
  2499   001414                     l3635:
  2500   001414  C049  F0B2         	movff	___fltol@f1,??___fltol
  2501   001418  C04A  F0B3         	movff	___fltol@f1+1,??___fltol+1
  2502   00141C  C04B  F0B4         	movff	___fltol@f1+2,??___fltol+2
  2503   001420  C04C  F0B5         	movff	___fltol@f1+3,??___fltol+3
  2504   001424  0E20               	movlw	32
  2505   001426  EF1B  F00A         	goto	u3480
  2506   00142A                     u3485:
  2507   00142A  0100               	movlb	0	; () banked
  2508   00142C  90D8               	bcf	status,0,c
  2509   00142E  33B5               	rrcf	(??___fltol+3)& (0+255),f,b
  2510   001430  33B4               	rrcf	(??___fltol+2)& (0+255),f,b
  2511   001432  33B3               	rrcf	(??___fltol+1)& (0+255),f,b
  2512   001434  33B2               	rrcf	??___fltol& (0+255),f,b
  2513   001436                     u3480:
  2514   001436  2EE8               	decfsz	wreg,f,c
  2515   001438  EF15  F00A         	goto	u3485
  2516   00143C  51B2               	movf	??___fltol& (0+255),w,b
  2517   00143E  6E4D               	movwf	___fltol@sign1^0,c
  2518   001440                     
  2519                           ; BSR set to: 0
  2520   001440  8E4B               	bsf	(___fltol@f1+2)^0,7,c
  2521   001442                     
  2522                           ; BSR set to: 0
  2523   001442  0EFF               	movlw	255
  2524   001444  1649               	andwf	___fltol@f1^0,f,c
  2525   001446  0EFF               	movlw	255
  2526   001448  164A               	andwf	(___fltol@f1+1)^0,f,c
  2527   00144A  0EFF               	movlw	255
  2528   00144C  164B               	andwf	(___fltol@f1+2)^0,f,c
  2529   00144E  0E00               	movlw	0
  2530   001450  164C               	andwf	(___fltol@f1+3)^0,f,c
  2531   001452                     
  2532                           ; BSR set to: 0
  2533   001452  0E96               	movlw	150
  2534   001454  5E4E               	subwf	___fltol@exp1^0,f,c
  2535   001456                     
  2536                           ; BSR set to: 0
  2537   001456  BE4E               	btfsc	___fltol@exp1^0,7,c
  2538   001458  EF32  F00A         	goto	u3490
  2539   00145C  EF30  F00A         	goto	u3491
  2540   001460                     u3491:
  2541   001460  EF48  F00A         	goto	l3655
  2542   001464                     u3490:
  2543   001464                     
  2544                           ; BSR set to: 0
  2545   001464  504E               	movf	___fltol@exp1^0,w,c
  2546   001466  0A80               	xorlw	128
  2547   001468  0F97               	addlw	151
  2548   00146A  B0D8               	btfsc	status,0,c
  2549   00146C  EF3A  F00A         	goto	u3501
  2550   001470  EF3C  F00A         	goto	u3500
  2551   001474                     u3501:
  2552   001474  EF3E  F00A         	goto	l3651
  2553   001478                     u3500:
  2554   001478  EF00  F00A         	goto	l3631
  2555   00147C                     l3651:
  2556   00147C  90D8               	bcf	status,0,c
  2557   00147E  324C               	rrcf	(___fltol@f1+3)^0,f,c
  2558   001480  324B               	rrcf	(___fltol@f1+2)^0,f,c
  2559   001482  324A               	rrcf	(___fltol@f1+1)^0,f,c
  2560   001484  3249               	rrcf	___fltol@f1^0,f,c
  2561   001486  3E4E               	incfsz	___fltol@exp1^0,f,c
  2562   001488  EF3E  F00A         	goto	l3651
  2563   00148C  EF60  F00A         	goto	l3665
  2564   001490                     l3655:
  2565                           
  2566                           ; BSR set to: 0
  2567   001490  0E1F               	movlw	31
  2568   001492  644E               	cpfsgt	___fltol@exp1^0,c
  2569   001494  EF4E  F00A         	goto	u3511
  2570   001498  EF50  F00A         	goto	u3510
  2571   00149C                     u3511:
  2572   00149C  EF58  F00A         	goto	l3663
  2573   0014A0                     u3510:
  2574   0014A0  EF00  F00A         	goto	l3631
  2575   0014A4                     l3661:
  2576   0014A4  90D8               	bcf	status,0,c
  2577   0014A6  3649               	rlcf	___fltol@f1^0,f,c
  2578   0014A8  364A               	rlcf	(___fltol@f1+1)^0,f,c
  2579   0014AA  364B               	rlcf	(___fltol@f1+2)^0,f,c
  2580   0014AC  364C               	rlcf	(___fltol@f1+3)^0,f,c
  2581   0014AE  064E               	decf	___fltol@exp1^0,f,c
  2582   0014B0                     l3663:
  2583   0014B0  504E               	movf	___fltol@exp1^0,w,c
  2584   0014B2  A4D8               	btfss	status,2,c
  2585   0014B4  EF5E  F00A         	goto	u3521
  2586   0014B8  EF60  F00A         	goto	u3520
  2587   0014BC                     u3521:
  2588   0014BC  EF52  F00A         	goto	l3661
  2589   0014C0                     u3520:
  2590   0014C0                     l3665:
  2591   0014C0  504D               	movf	___fltol@sign1^0,w,c
  2592   0014C2  B4D8               	btfsc	status,2,c
  2593   0014C4  EF66  F00A         	goto	u3531
  2594   0014C8  EF68  F00A         	goto	u3530
  2595   0014CC                     u3531:
  2596   0014CC  EF70  F00A         	goto	l3669
  2597   0014D0                     u3530:
  2598   0014D0  1E4C               	comf	(___fltol@f1+3)^0,f,c
  2599   0014D2  1E4B               	comf	(___fltol@f1+2)^0,f,c
  2600   0014D4  1E4A               	comf	(___fltol@f1+1)^0,f,c
  2601   0014D6  6C49               	negf	___fltol@f1^0,c
  2602   0014D8  0E00               	movlw	0
  2603   0014DA  224A               	addwfc	(___fltol@f1+1)^0,f,c
  2604   0014DC  224B               	addwfc	(___fltol@f1+2)^0,f,c
  2605   0014DE  224C               	addwfc	(___fltol@f1+3)^0,f,c
  2606   0014E0                     l3669:
  2607   0014E0  C049  F049         	movff	___fltol@f1,?___fltol
  2608   0014E4  C04A  F04A         	movff	___fltol@f1+1,?___fltol+1
  2609   0014E8  C04B  F04B         	movff	___fltol@f1+2,?___fltol+2
  2610   0014EC  C04C  F04C         	movff	___fltol@f1+3,?___fltol+3
  2611   0014F0                     l887:
  2612   0014F0  0012               	return		;funcret
  2613   0014F2                     __end_of___fltol:
  2614                           	callstack 0
  2615                           
  2616 ;; *************** function ___flmul *****************
  2617 ;; Defined at:
  2618 ;;		line 8 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\sprcmul.c"
  2619 ;; Parameters:    Size  Location     Type
  2620 ;;  b               4   47[COMRAM] long 
  2621 ;;  a               4   51[COMRAM] long 
  2622 ;; Auto vars:     Size  Location     Type
  2623 ;;  prod            4   66[COMRAM] struct .
  2624 ;;  grs             4   60[COMRAM] unsigned long 
  2625 ;;  temp            2   70[COMRAM] struct .
  2626 ;;  bexp            1   65[COMRAM] unsigned char 
  2627 ;;  aexp            1   64[COMRAM] unsigned char 
  2628 ;;  sign            1   59[COMRAM] unsigned char 
  2629 ;; Return value:  Size  Location     Type
  2630 ;;                  4   47[COMRAM] unsigned char 
  2631 ;; Registers used:
  2632 ;;		wreg, status,2, status,0, prodl, prodh
  2633 ;; Tracked objects:
  2634 ;;		On entry : 0/0
  2635 ;;		On exit  : 0/0
  2636 ;;		Unchanged: 0/0
  2637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2638 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2639 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2640 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2641 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2642 ;;Total ram usage:       25 bytes
  2643 ;; Hardware stack levels used: 1
  2644 ;; Hardware stack levels required when called: 7
  2645 ;; This function calls:
  2646 ;;		Nothing
  2647 ;; This function is called by:
  2648 ;;		_detect_color
  2649 ;; This function uses a non-reentrant model
  2650 ;;
  2651                           
  2652                           	psect	text6
  2653   000678                     __ptext6:
  2654                           	callstack 0
  2655   000678                     ___flmul:
  2656                           	callstack 22
  2657   000678  5033               	movf	(___flmul@b+3)^0,w,c
  2658   00067A  0B80               	andlw	128
  2659   00067C  6E3C               	movwf	___flmul@sign^0,c
  2660   00067E  5033               	movf	(___flmul@b+3)^0,w,c
  2661   000680  2433               	addwf	(___flmul@b+3)^0,w,c
  2662   000682  6E42               	movwf	___flmul@bexp^0,c
  2663   000684  AE32               	btfss	(___flmul@b+2)^0,7,c
  2664   000686  EF47  F003         	goto	u2411
  2665   00068A  EF49  F003         	goto	u2410
  2666   00068E                     u2411:
  2667   00068E  EF4A  F003         	goto	l3019
  2668   000692                     u2410:
  2669   000692  8042               	bsf	___flmul@bexp^0,0,c
  2670   000694                     l3019:
  2671   000694  5042               	movf	___flmul@bexp^0,w,c
  2672   000696  B4D8               	btfsc	status,2,c
  2673   000698  EF50  F003         	goto	u2421
  2674   00069C  EF52  F003         	goto	u2420
  2675   0006A0                     u2421:
  2676   0006A0  EF65  F003         	goto	l3027
  2677   0006A4                     u2420:
  2678   0006A4  2842               	incf	___flmul@bexp^0,w,c
  2679   0006A6  A4D8               	btfss	status,2,c
  2680   0006A8  EF58  F003         	goto	u2431
  2681   0006AC  EF5A  F003         	goto	u2430
  2682   0006B0                     u2431:
  2683   0006B0  EF62  F003         	goto	l3025
  2684   0006B4                     u2430:
  2685   0006B4  0E00               	movlw	0
  2686   0006B6  6E30               	movwf	___flmul@b^0,c
  2687   0006B8  0E00               	movlw	0
  2688   0006BA  6E31               	movwf	(___flmul@b+1)^0,c
  2689   0006BC  0E00               	movlw	0
  2690   0006BE  6E32               	movwf	(___flmul@b+2)^0,c
  2691   0006C0  0E00               	movlw	0
  2692   0006C2  6E33               	movwf	(___flmul@b+3)^0,c
  2693   0006C4                     l3025:
  2694   0006C4  8E32               	bsf	(___flmul@b+2)^0,7,c
  2695   0006C6  EF6D  F003         	goto	l3029
  2696   0006CA                     l3027:
  2697   0006CA  0E00               	movlw	0
  2698   0006CC  6E30               	movwf	___flmul@b^0,c
  2699   0006CE  0E00               	movlw	0
  2700   0006D0  6E31               	movwf	(___flmul@b+1)^0,c
  2701   0006D2  0E00               	movlw	0
  2702   0006D4  6E32               	movwf	(___flmul@b+2)^0,c
  2703   0006D6  0E00               	movlw	0
  2704   0006D8  6E33               	movwf	(___flmul@b+3)^0,c
  2705   0006DA                     l3029:
  2706   0006DA  5037               	movf	(___flmul@a+3)^0,w,c
  2707   0006DC  0B80               	andlw	128
  2708   0006DE  1A3C               	xorwf	___flmul@sign^0,f,c
  2709   0006E0  5037               	movf	(___flmul@a+3)^0,w,c
  2710   0006E2  2437               	addwf	(___flmul@a+3)^0,w,c
  2711   0006E4  6E41               	movwf	___flmul@aexp^0,c
  2712   0006E6  AE36               	btfss	(___flmul@a+2)^0,7,c
  2713   0006E8  EF78  F003         	goto	u2441
  2714   0006EC  EF7A  F003         	goto	u2440
  2715   0006F0                     u2441:
  2716   0006F0  EF7B  F003         	goto	l3037
  2717   0006F4                     u2440:
  2718   0006F4  8041               	bsf	___flmul@aexp^0,0,c
  2719   0006F6                     l3037:
  2720   0006F6  5041               	movf	___flmul@aexp^0,w,c
  2721   0006F8  B4D8               	btfsc	status,2,c
  2722   0006FA  EF81  F003         	goto	u2451
  2723   0006FE  EF83  F003         	goto	u2450
  2724   000702                     u2451:
  2725   000702  EF96  F003         	goto	l3045
  2726   000706                     u2450:
  2727   000706  2841               	incf	___flmul@aexp^0,w,c
  2728   000708  A4D8               	btfss	status,2,c
  2729   00070A  EF89  F003         	goto	u2461
  2730   00070E  EF8B  F003         	goto	u2460
  2731   000712                     u2461:
  2732   000712  EF93  F003         	goto	l3043
  2733   000716                     u2460:
  2734   000716  0E00               	movlw	0
  2735   000718  6E34               	movwf	___flmul@a^0,c
  2736   00071A  0E00               	movlw	0
  2737   00071C  6E35               	movwf	(___flmul@a+1)^0,c
  2738   00071E  0E00               	movlw	0
  2739   000720  6E36               	movwf	(___flmul@a+2)^0,c
  2740   000722  0E00               	movlw	0
  2741   000724  6E37               	movwf	(___flmul@a+3)^0,c
  2742   000726                     l3043:
  2743   000726  8E36               	bsf	(___flmul@a+2)^0,7,c
  2744   000728  EF9E  F003         	goto	l1204
  2745   00072C                     l3045:
  2746   00072C  0E00               	movlw	0
  2747   00072E  6E34               	movwf	___flmul@a^0,c
  2748   000730  0E00               	movlw	0
  2749   000732  6E35               	movwf	(___flmul@a+1)^0,c
  2750   000734  0E00               	movlw	0
  2751   000736  6E36               	movwf	(___flmul@a+2)^0,c
  2752   000738  0E00               	movlw	0
  2753   00073A  6E37               	movwf	(___flmul@a+3)^0,c
  2754   00073C                     l1204:
  2755   00073C  5041               	movf	___flmul@aexp^0,w,c
  2756   00073E  B4D8               	btfsc	status,2,c
  2757   000740  EFA4  F003         	goto	u2471
  2758   000744  EFA6  F003         	goto	u2470
  2759   000748                     u2471:
  2760   000748  EFAE  F003         	goto	l3049
  2761   00074C                     u2470:
  2762   00074C  5042               	movf	___flmul@bexp^0,w,c
  2763   00074E  A4D8               	btfss	status,2,c
  2764   000750  EFAC  F003         	goto	u2481
  2765   000754  EFAE  F003         	goto	u2480
  2766   000758                     u2481:
  2767   000758  EFB8  F003         	goto	l3053
  2768   00075C                     u2480:
  2769   00075C                     l3049:
  2770   00075C  0E00               	movlw	0
  2771   00075E  6E30               	movwf	?___flmul^0,c
  2772   000760  0E00               	movlw	0
  2773   000762  6E31               	movwf	(?___flmul+1)^0,c
  2774   000764  0E00               	movlw	0
  2775   000766  6E32               	movwf	(?___flmul+2)^0,c
  2776   000768  0E00               	movlw	0
  2777   00076A  6E33               	movwf	(?___flmul+3)^0,c
  2778   00076C  EF50  F005         	goto	l1208
  2779   000770                     l3053:
  2780   000770  5036               	movf	(___flmul@a+2)^0,w,c
  2781   000772  0230               	mulwf	___flmul@b^0,c
  2782   000774  CFF3 F047          	movff	prodl,___flmul@temp
  2783   000778  CFF4 F048          	movff	prodh,___flmul@temp+1
  2784   00077C  5047               	movf	___flmul@temp^0,w,c
  2785   00077E  6E3D               	movwf	___flmul@grs^0,c
  2786   000780  6A3E               	clrf	(___flmul@grs+1)^0,c
  2787   000782  6A3F               	clrf	(___flmul@grs+2)^0,c
  2788   000784  6A40               	clrf	(___flmul@grs+3)^0,c
  2789   000786  5048               	movf	(___flmul@temp+1)^0,w,c
  2790   000788  6E43               	movwf	___flmul@prod^0,c
  2791   00078A  6A44               	clrf	(___flmul@prod+1)^0,c
  2792   00078C  6A45               	clrf	(___flmul@prod+2)^0,c
  2793   00078E  6A46               	clrf	(___flmul@prod+3)^0,c
  2794   000790  5035               	movf	(___flmul@a+1)^0,w,c
  2795   000792  0231               	mulwf	(___flmul@b+1)^0,c
  2796   000794  CFF3 F047          	movff	prodl,___flmul@temp
  2797   000798  CFF4 F048          	movff	prodh,___flmul@temp+1
  2798   00079C  5047               	movf	___flmul@temp^0,w,c
  2799   00079E  263D               	addwf	___flmul@grs^0,f,c
  2800   0007A0  0E00               	movlw	0
  2801   0007A2  223E               	addwfc	(___flmul@grs+1)^0,f,c
  2802   0007A4  223F               	addwfc	(___flmul@grs+2)^0,f,c
  2803   0007A6  2240               	addwfc	(___flmul@grs+3)^0,f,c
  2804   0007A8  5048               	movf	(___flmul@temp+1)^0,w,c
  2805   0007AA  2643               	addwf	___flmul@prod^0,f,c
  2806   0007AC  0E00               	movlw	0
  2807   0007AE  2244               	addwfc	(___flmul@prod+1)^0,f,c
  2808   0007B0  2245               	addwfc	(___flmul@prod+2)^0,f,c
  2809   0007B2  2246               	addwfc	(___flmul@prod+3)^0,f,c
  2810   0007B4  5034               	movf	___flmul@a^0,w,c
  2811   0007B6  0232               	mulwf	(___flmul@b+2)^0,c
  2812   0007B8  CFF3 F047          	movff	prodl,___flmul@temp
  2813   0007BC  CFF4 F048          	movff	prodh,___flmul@temp+1
  2814   0007C0  5047               	movf	___flmul@temp^0,w,c
  2815   0007C2  263D               	addwf	___flmul@grs^0,f,c
  2816   0007C4  0E00               	movlw	0
  2817   0007C6  223E               	addwfc	(___flmul@grs+1)^0,f,c
  2818   0007C8  223F               	addwfc	(___flmul@grs+2)^0,f,c
  2819   0007CA  2240               	addwfc	(___flmul@grs+3)^0,f,c
  2820   0007CC  5048               	movf	(___flmul@temp+1)^0,w,c
  2821   0007CE  2643               	addwf	___flmul@prod^0,f,c
  2822   0007D0  0E00               	movlw	0
  2823   0007D2  2244               	addwfc	(___flmul@prod+1)^0,f,c
  2824   0007D4  2245               	addwfc	(___flmul@prod+2)^0,f,c
  2825   0007D6  2246               	addwfc	(___flmul@prod+3)^0,f,c
  2826   0007D8  C03F  F040         	movff	___flmul@grs+2,___flmul@grs+3
  2827   0007DC  C03E  F03F         	movff	___flmul@grs+1,___flmul@grs+2
  2828   0007E0  C03D  F03E         	movff	___flmul@grs,___flmul@grs+1
  2829   0007E4  6A3D               	clrf	___flmul@grs^0,c
  2830   0007E6  5034               	movf	___flmul@a^0,w,c
  2831   0007E8  0231               	mulwf	(___flmul@b+1)^0,c
  2832   0007EA  CFF3 F047          	movff	prodl,___flmul@temp
  2833   0007EE  CFF4 F048          	movff	prodh,___flmul@temp+1
  2834   0007F2  5047               	movf	___flmul@temp^0,w,c
  2835   0007F4  263D               	addwf	___flmul@grs^0,f,c
  2836   0007F6  5048               	movf	(___flmul@temp+1)^0,w,c
  2837   0007F8  223E               	addwfc	(___flmul@grs+1)^0,f,c
  2838   0007FA  0E00               	movlw	0
  2839   0007FC  223F               	addwfc	(___flmul@grs+2)^0,f,c
  2840   0007FE  0E00               	movlw	0
  2841   000800  2240               	addwfc	(___flmul@grs+3)^0,f,c
  2842   000802  5035               	movf	(___flmul@a+1)^0,w,c
  2843   000804  0230               	mulwf	___flmul@b^0,c
  2844   000806  CFF3 F047          	movff	prodl,___flmul@temp
  2845   00080A  CFF4 F048          	movff	prodh,___flmul@temp+1
  2846   00080E  5047               	movf	___flmul@temp^0,w,c
  2847   000810  263D               	addwf	___flmul@grs^0,f,c
  2848   000812  5048               	movf	(___flmul@temp+1)^0,w,c
  2849   000814  223E               	addwfc	(___flmul@grs+1)^0,f,c
  2850   000816  0E00               	movlw	0
  2851   000818  223F               	addwfc	(___flmul@grs+2)^0,f,c
  2852   00081A  0E00               	movlw	0
  2853   00081C  2240               	addwfc	(___flmul@grs+3)^0,f,c
  2854   00081E  C03F  F040         	movff	___flmul@grs+2,___flmul@grs+3
  2855   000822  C03E  F03F         	movff	___flmul@grs+1,___flmul@grs+2
  2856   000826  C03D  F03E         	movff	___flmul@grs,___flmul@grs+1
  2857   00082A  6A3D               	clrf	___flmul@grs^0,c
  2858   00082C  5034               	movf	___flmul@a^0,w,c
  2859   00082E  0230               	mulwf	___flmul@b^0,c
  2860   000830  CFF3 F047          	movff	prodl,___flmul@temp
  2861   000834  CFF4 F048          	movff	prodh,___flmul@temp+1
  2862   000838  5047               	movf	___flmul@temp^0,w,c
  2863   00083A  263D               	addwf	___flmul@grs^0,f,c
  2864   00083C  5048               	movf	(___flmul@temp+1)^0,w,c
  2865   00083E  223E               	addwfc	(___flmul@grs+1)^0,f,c
  2866   000840  0E00               	movlw	0
  2867   000842  223F               	addwfc	(___flmul@grs+2)^0,f,c
  2868   000844  0E00               	movlw	0
  2869   000846  2240               	addwfc	(___flmul@grs+3)^0,f,c
  2870   000848  5036               	movf	(___flmul@a+2)^0,w,c
  2871   00084A  0231               	mulwf	(___flmul@b+1)^0,c
  2872   00084C  CFF3 F047          	movff	prodl,___flmul@temp
  2873   000850  CFF4 F048          	movff	prodh,___flmul@temp+1
  2874   000854  5047               	movf	___flmul@temp^0,w,c
  2875   000856  2643               	addwf	___flmul@prod^0,f,c
  2876   000858  5048               	movf	(___flmul@temp+1)^0,w,c
  2877   00085A  2244               	addwfc	(___flmul@prod+1)^0,f,c
  2878   00085C  0E00               	movlw	0
  2879   00085E  2245               	addwfc	(___flmul@prod+2)^0,f,c
  2880   000860  0E00               	movlw	0
  2881   000862  2246               	addwfc	(___flmul@prod+3)^0,f,c
  2882   000864  5035               	movf	(___flmul@a+1)^0,w,c
  2883   000866  0232               	mulwf	(___flmul@b+2)^0,c
  2884   000868  CFF3 F047          	movff	prodl,___flmul@temp
  2885   00086C  CFF4 F048          	movff	prodh,___flmul@temp+1
  2886   000870  5047               	movf	___flmul@temp^0,w,c
  2887   000872  2643               	addwf	___flmul@prod^0,f,c
  2888   000874  5048               	movf	(___flmul@temp+1)^0,w,c
  2889   000876  2244               	addwfc	(___flmul@prod+1)^0,f,c
  2890   000878  0E00               	movlw	0
  2891   00087A  2245               	addwfc	(___flmul@prod+2)^0,f,c
  2892   00087C  0E00               	movlw	0
  2893   00087E  2246               	addwfc	(___flmul@prod+3)^0,f,c
  2894   000880  5036               	movf	(___flmul@a+2)^0,w,c
  2895   000882  0232               	mulwf	(___flmul@b+2)^0,c
  2896   000884  CFF3 F047          	movff	prodl,___flmul@temp
  2897   000888  CFF4 F048          	movff	prodh,___flmul@temp+1
  2898   00088C  5047               	movf	___flmul@temp^0,w,c
  2899   00088E  6E38               	movwf	??___flmul^0,c
  2900   000890  5048               	movf	(___flmul@temp+1)^0,w,c
  2901   000892  6E39               	movwf	(??___flmul+1)^0,c
  2902   000894  6A3A               	clrf	(??___flmul+2)^0,c
  2903   000896  6A3B               	clrf	(??___flmul+3)^0,c
  2904   000898  C03A  F03B         	movff	??___flmul+2,??___flmul+3
  2905   00089C  C039  F03A         	movff	??___flmul+1,??___flmul+2
  2906   0008A0  C038  F039         	movff	??___flmul,??___flmul+1
  2907   0008A4  6A38               	clrf	??___flmul^0,c
  2908   0008A6  5038               	movf	??___flmul^0,w,c
  2909   0008A8  2643               	addwf	___flmul@prod^0,f,c
  2910   0008AA  5039               	movf	(??___flmul+1)^0,w,c
  2911   0008AC  2244               	addwfc	(___flmul@prod+1)^0,f,c
  2912   0008AE  503A               	movf	(??___flmul+2)^0,w,c
  2913   0008B0  2245               	addwfc	(___flmul@prod+2)^0,f,c
  2914   0008B2  503B               	movf	(??___flmul+3)^0,w,c
  2915   0008B4  2246               	addwfc	(___flmul@prod+3)^0,f,c
  2916   0008B6  C03D  F038         	movff	___flmul@grs,??___flmul
  2917   0008BA  C03E  F039         	movff	___flmul@grs+1,??___flmul+1
  2918   0008BE  C03F  F03A         	movff	___flmul@grs+2,??___flmul+2
  2919   0008C2  C040  F03B         	movff	___flmul@grs+3,??___flmul+3
  2920   0008C6  0E19               	movlw	25
  2921   0008C8  EF6B  F004         	goto	u2490
  2922   0008CC                     u2495:
  2923   0008CC  90D8               	bcf	status,0,c
  2924   0008CE  323B               	rrcf	(??___flmul+3)^0,f,c
  2925   0008D0  323A               	rrcf	(??___flmul+2)^0,f,c
  2926   0008D2  3239               	rrcf	(??___flmul+1)^0,f,c
  2927   0008D4  3238               	rrcf	??___flmul^0,f,c
  2928   0008D6                     u2490:
  2929   0008D6  2EE8               	decfsz	wreg,f,c
  2930   0008D8  EF66  F004         	goto	u2495
  2931   0008DC  5038               	movf	??___flmul^0,w,c
  2932   0008DE  2643               	addwf	___flmul@prod^0,f,c
  2933   0008E0  5039               	movf	(??___flmul+1)^0,w,c
  2934   0008E2  2244               	addwfc	(___flmul@prod+1)^0,f,c
  2935   0008E4  503A               	movf	(??___flmul+2)^0,w,c
  2936   0008E6  2245               	addwfc	(___flmul@prod+2)^0,f,c
  2937   0008E8  503B               	movf	(??___flmul+3)^0,w,c
  2938   0008EA  2246               	addwfc	(___flmul@prod+3)^0,f,c
  2939   0008EC  C03F  F040         	movff	___flmul@grs+2,___flmul@grs+3
  2940   0008F0  C03E  F03F         	movff	___flmul@grs+1,___flmul@grs+2
  2941   0008F4  C03D  F03E         	movff	___flmul@grs,___flmul@grs+1
  2942   0008F8  6A3D               	clrf	___flmul@grs^0,c
  2943   0008FA  5041               	movf	___flmul@aexp^0,w,c
  2944   0008FC  C042  F038         	movff	___flmul@bexp,??___flmul
  2945   000900  6A39               	clrf	(??___flmul+1)^0,c
  2946   000902  2638               	addwf	??___flmul^0,f,c
  2947   000904  0E00               	movlw	0
  2948   000906  2239               	addwfc	(??___flmul+1)^0,f,c
  2949   000908  0E82               	movlw	130
  2950   00090A  2438               	addwf	??___flmul^0,w,c
  2951   00090C  6E47               	movwf	___flmul@temp^0,c
  2952   00090E  0EFF               	movlw	255
  2953   000910  2039               	addwfc	(??___flmul+1)^0,w,c
  2954   000912  6E48               	movwf	(___flmul@temp+1)^0,c
  2955   000914  EFA1  F004         	goto	l3101
  2956   000918                     l3095:
  2957   000918  90D8               	bcf	status,0,c
  2958   00091A  3643               	rlcf	___flmul@prod^0,f,c
  2959   00091C  3644               	rlcf	(___flmul@prod+1)^0,f,c
  2960   00091E  3645               	rlcf	(___flmul@prod+2)^0,f,c
  2961   000920  3646               	rlcf	(___flmul@prod+3)^0,f,c
  2962   000922  AE40               	btfss	(___flmul@grs+3)^0,7,c
  2963   000924  EF96  F004         	goto	u2501
  2964   000928  EF98  F004         	goto	u2500
  2965   00092C                     u2501:
  2966   00092C  EF99  F004         	goto	l1211
  2967   000930                     u2500:
  2968   000930  8043               	bsf	___flmul@prod^0,0,c
  2969   000932                     l1211:
  2970   000932  90D8               	bcf	status,0,c
  2971   000934  363D               	rlcf	___flmul@grs^0,f,c
  2972   000936  363E               	rlcf	(___flmul@grs+1)^0,f,c
  2973   000938  363F               	rlcf	(___flmul@grs+2)^0,f,c
  2974   00093A  3640               	rlcf	(___flmul@grs+3)^0,f,c
  2975   00093C  0647               	decf	___flmul@temp^0,f,c
  2976   00093E  A0D8               	btfss	status,0,c
  2977   000940  0648               	decf	(___flmul@temp+1)^0,f,c
  2978   000942                     l3101:
  2979   000942  AE45               	btfss	(___flmul@prod+2)^0,7,c
  2980   000944  EFA6  F004         	goto	u2511
  2981   000948  EFA8  F004         	goto	u2510
  2982   00094C                     u2511:
  2983   00094C  EF8C  F004         	goto	l3095
  2984   000950                     u2510:
  2985   000950  0E00               	movlw	0
  2986   000952  6E41               	movwf	___flmul@aexp^0,c
  2987   000954  AE40               	btfss	(___flmul@grs+3)^0,7,c
  2988   000956  EFAF  F004         	goto	u2521
  2989   00095A  EFB1  F004         	goto	u2520
  2990   00095E                     u2521:
  2991   00095E  EFD5  F004         	goto	l1213
  2992   000962                     u2520:
  2993   000962  0EFF               	movlw	255
  2994   000964  143D               	andwf	___flmul@grs^0,w,c
  2995   000966  6E38               	movwf	??___flmul^0,c
  2996   000968  0EFF               	movlw	255
  2997   00096A  143E               	andwf	(___flmul@grs+1)^0,w,c
  2998   00096C  6E39               	movwf	(??___flmul+1)^0,c
  2999   00096E  0EFF               	movlw	255
  3000   000970  143F               	andwf	(___flmul@grs+2)^0,w,c
  3001   000972  6E3A               	movwf	(??___flmul+2)^0,c
  3002   000974  0E7F               	movlw	127
  3003   000976  1440               	andwf	(___flmul@grs+3)^0,w,c
  3004   000978  6E3B               	movwf	(??___flmul+3)^0,c
  3005   00097A  5038               	movf	??___flmul^0,w,c
  3006   00097C  1039               	iorwf	(??___flmul+1)^0,w,c
  3007   00097E  103A               	iorwf	(??___flmul+2)^0,w,c
  3008   000980  103B               	iorwf	(??___flmul+3)^0,w,c
  3009   000982  B4D8               	btfsc	status,2,c
  3010   000984  EFC6  F004         	goto	u2531
  3011   000988  EFC8  F004         	goto	u2530
  3012   00098C                     u2531:
  3013   00098C  EFCC  F004         	goto	l1214
  3014   000990                     u2530:
  3015   000990                     l3109:
  3016   000990  0E01               	movlw	1
  3017   000992  6E41               	movwf	___flmul@aexp^0,c
  3018   000994  EFD5  F004         	goto	l1213
  3019   000998                     l1214:
  3020   000998  A043               	btfss	___flmul@prod^0,0,c
  3021   00099A  EFD1  F004         	goto	u2541
  3022   00099E  EFD3  F004         	goto	u2540
  3023   0009A2                     u2541:
  3024   0009A2  EFD5  F004         	goto	l1213
  3025   0009A6                     u2540:
  3026   0009A6  EFC8  F004         	goto	l3109
  3027   0009AA                     l1213:
  3028   0009AA  5041               	movf	___flmul@aexp^0,w,c
  3029   0009AC  B4D8               	btfsc	status,2,c
  3030   0009AE  EFDB  F004         	goto	u2551
  3031   0009B2  EFDD  F004         	goto	u2550
  3032   0009B6                     u2551:
  3033   0009B6  EF01  F005         	goto	l3121
  3034   0009BA                     u2550:
  3035   0009BA  0E01               	movlw	1
  3036   0009BC  2643               	addwf	___flmul@prod^0,f,c
  3037   0009BE  0E00               	movlw	0
  3038   0009C0  2244               	addwfc	(___flmul@prod+1)^0,f,c
  3039   0009C2  2245               	addwfc	(___flmul@prod+2)^0,f,c
  3040   0009C4  2246               	addwfc	(___flmul@prod+3)^0,f,c
  3041   0009C6  A046               	btfss	(___flmul@prod+3)^0,0,c
  3042   0009C8  EFE8  F004         	goto	u2561
  3043   0009CC  EFEA  F004         	goto	u2560
  3044   0009D0                     u2561:
  3045   0009D0  EF01  F005         	goto	l3121
  3046   0009D4                     u2560:
  3047   0009D4  C043  F038         	movff	___flmul@prod,??___flmul
  3048   0009D8  C044  F039         	movff	___flmul@prod+1,??___flmul+1
  3049   0009DC  C045  F03A         	movff	___flmul@prod+2,??___flmul+2
  3050   0009E0  C046  F03B         	movff	___flmul@prod+3,??___flmul+3
  3051   0009E4  343B               	rlcf	(??___flmul+3)^0,w,c
  3052   0009E6  323B               	rrcf	(??___flmul+3)^0,f,c
  3053   0009E8  323A               	rrcf	(??___flmul+2)^0,f,c
  3054   0009EA  3239               	rrcf	(??___flmul+1)^0,f,c
  3055   0009EC  3238               	rrcf	??___flmul^0,f,c
  3056   0009EE  C038  F043         	movff	??___flmul,___flmul@prod
  3057   0009F2  C039  F044         	movff	??___flmul+1,___flmul@prod+1
  3058   0009F6  C03A  F045         	movff	??___flmul+2,___flmul@prod+2
  3059   0009FA  C03B  F046         	movff	??___flmul+3,___flmul@prod+3
  3060   0009FE  4A47               	infsnz	___flmul@temp^0,f,c
  3061   000A00  2A48               	incf	(___flmul@temp+1)^0,f,c
  3062   000A02                     l3121:
  3063   000A02  BE48               	btfsc	(___flmul@temp+1)^0,7,c
  3064   000A04  EF0C  F005         	goto	u2571
  3065   000A08  5048               	movf	(___flmul@temp+1)^0,w,c
  3066   000A0A  E108               	bnz	u2570
  3067   000A0C  2847               	incf	___flmul@temp^0,w,c
  3068   000A0E  A0D8               	btfss	status,0,c
  3069   000A10  EF0C  F005         	goto	u2571
  3070   000A14  EF0E  F005         	goto	u2570
  3071   000A18                     u2571:
  3072   000A18  EF18  F005         	goto	l3125
  3073   000A1C                     u2570:
  3074   000A1C  0E00               	movlw	0
  3075   000A1E  6E43               	movwf	___flmul@prod^0,c
  3076   000A20  0E00               	movlw	0
  3077   000A22  6E44               	movwf	(___flmul@prod+1)^0,c
  3078   000A24  0E80               	movlw	128
  3079   000A26  6E45               	movwf	(___flmul@prod+2)^0,c
  3080   000A28  0E7F               	movlw	127
  3081   000A2A  6E46               	movwf	(___flmul@prod+3)^0,c
  3082   000A2C  EF46  F005         	goto	l3137
  3083   000A30                     l3125:
  3084   000A30  BE48               	btfsc	(___flmul@temp+1)^0,7,c
  3085   000A32  EF25  F005         	goto	u2580
  3086   000A36  5048               	movf	(___flmul@temp+1)^0,w,c
  3087   000A38  E106               	bnz	u2581
  3088   000A3A  0447               	decf	___flmul@temp^0,w,c
  3089   000A3C  B0D8               	btfsc	status,0,c
  3090   000A3E  EF23  F005         	goto	u2581
  3091   000A42  EF25  F005         	goto	u2580
  3092   000A46                     u2581:
  3093   000A46  EF31  F005         	goto	l1221
  3094   000A4A                     u2580:
  3095   000A4A  0E00               	movlw	0
  3096   000A4C  6E43               	movwf	___flmul@prod^0,c
  3097   000A4E  0E00               	movlw	0
  3098   000A50  6E44               	movwf	(___flmul@prod+1)^0,c
  3099   000A52  0E00               	movlw	0
  3100   000A54  6E45               	movwf	(___flmul@prod+2)^0,c
  3101   000A56  0E00               	movlw	0
  3102   000A58  6E46               	movwf	(___flmul@prod+3)^0,c
  3103   000A5A  0E00               	movlw	0
  3104   000A5C  6E3C               	movwf	___flmul@sign^0,c
  3105   000A5E  EF46  F005         	goto	l3137
  3106   000A62                     l1221:
  3107   000A62  C047  F042         	movff	___flmul@temp,___flmul@bexp
  3108   000A66  0EFF               	movlw	255
  3109   000A68  1643               	andwf	___flmul@prod^0,f,c
  3110   000A6A  0EFF               	movlw	255
  3111   000A6C  1644               	andwf	(___flmul@prod+1)^0,f,c
  3112   000A6E  0E7F               	movlw	127
  3113   000A70  1645               	andwf	(___flmul@prod+2)^0,f,c
  3114   000A72  0E00               	movlw	0
  3115   000A74  1646               	andwf	(___flmul@prod+3)^0,f,c
  3116   000A76  A042               	btfss	___flmul@bexp^0,0,c
  3117   000A78  EF40  F005         	goto	u2591
  3118   000A7C  EF42  F005         	goto	u2590
  3119   000A80                     u2591:
  3120   000A80  EF43  F005         	goto	l3135
  3121   000A84                     u2590:
  3122   000A84  8E45               	bsf	(___flmul@prod+2)^0,7,c
  3123   000A86                     l3135:
  3124   000A86  90D8               	bcf	status,0,c
  3125   000A88  3042               	rrcf	___flmul@bexp^0,w,c
  3126   000A8A  6E46               	movwf	(___flmul@prod+3)^0,c
  3127   000A8C                     l3137:
  3128   000A8C  503C               	movf	___flmul@sign^0,w,c
  3129   000A8E  1246               	iorwf	(___flmul@prod+3)^0,f,c
  3130   000A90  C043  F030         	movff	___flmul@prod,?___flmul
  3131   000A94  C044  F031         	movff	___flmul@prod+1,?___flmul+1
  3132   000A98  C045  F032         	movff	___flmul@prod+2,?___flmul+2
  3133   000A9C  C046  F033         	movff	___flmul@prod+3,?___flmul+3
  3134   000AA0                     l1208:
  3135   000AA0  0012               	return		;funcret
  3136   000AA2                     __end_of___flmul:
  3137                           	callstack 0
  3138                           
  3139 ;; *************** function ___fldiv *****************
  3140 ;; Defined at:
  3141 ;;		line 11 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\sprcdiv.c"
  3142 ;; Parameters:    Size  Location     Type
  3143 ;;  b               4   22[COMRAM] unsigned char 
  3144 ;;  a               4   26[COMRAM] unsigned char 
  3145 ;; Auto vars:     Size  Location     Type
  3146 ;;  grs             4   41[COMRAM] unsigned long 
  3147 ;;  rem             4   34[COMRAM] unsigned long 
  3148 ;;  new_exp         2   39[COMRAM] short 
  3149 ;;  aexp            1   46[COMRAM] unsigned char 
  3150 ;;  bexp            1   45[COMRAM] unsigned char 
  3151 ;;  sign            1   38[COMRAM] unsigned char 
  3152 ;; Return value:  Size  Location     Type
  3153 ;;                  4   22[COMRAM] unsigned char 
  3154 ;; Registers used:
  3155 ;;		wreg, status,2, status,0
  3156 ;; Tracked objects:
  3157 ;;		On entry : 0/0
  3158 ;;		On exit  : 0/0
  3159 ;;		Unchanged: 0/0
  3160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3161 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3162 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3163 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3164 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3165 ;;Total ram usage:       25 bytes
  3166 ;; Hardware stack levels used: 1
  3167 ;; Hardware stack levels required when called: 7
  3168 ;; This function calls:
  3169 ;;		Nothing
  3170 ;; This function is called by:
  3171 ;;		_detect_color
  3172 ;; This function uses a non-reentrant model
  3173 ;;
  3174                           
  3175                           	psect	text7
  3176   000AA2                     __ptext7:
  3177                           	callstack 0
  3178   000AA2                     ___fldiv:
  3179                           	callstack 22
  3180   000AA2  501A               	movf	(___fldiv@b+3)^0,w,c
  3181   000AA4  0B80               	andlw	128
  3182   000AA6  6E27               	movwf	___fldiv@sign^0,c
  3183   000AA8  501A               	movf	(___fldiv@b+3)^0,w,c
  3184   000AAA  241A               	addwf	(___fldiv@b+3)^0,w,c
  3185   000AAC  6E2E               	movwf	___fldiv@bexp^0,c
  3186   000AAE  AE19               	btfss	(___fldiv@b+2)^0,7,c
  3187   000AB0  EF5C  F005         	goto	u2181
  3188   000AB4  EF5E  F005         	goto	u2180
  3189   000AB8                     u2181:
  3190   000AB8  EF5F  F005         	goto	l2881
  3191   000ABC                     u2180:
  3192   000ABC  802E               	bsf	___fldiv@bexp^0,0,c
  3193   000ABE                     l2881:
  3194   000ABE  502E               	movf	___fldiv@bexp^0,w,c
  3195   000AC0  B4D8               	btfsc	status,2,c
  3196   000AC2  EF65  F005         	goto	u2191
  3197   000AC6  EF67  F005         	goto	u2190
  3198   000ACA                     u2191:
  3199   000ACA  EF7C  F005         	goto	l2891
  3200   000ACE                     u2190:
  3201   000ACE  282E               	incf	___fldiv@bexp^0,w,c
  3202   000AD0  A4D8               	btfss	status,2,c
  3203   000AD2  EF6D  F005         	goto	u2201
  3204   000AD6  EF6F  F005         	goto	u2200
  3205   000ADA                     u2201:
  3206   000ADA  EF77  F005         	goto	l2887
  3207   000ADE                     u2200:
  3208   000ADE  0E00               	movlw	0
  3209   000AE0  6E17               	movwf	___fldiv@b^0,c
  3210   000AE2  0E00               	movlw	0
  3211   000AE4  6E18               	movwf	(___fldiv@b+1)^0,c
  3212   000AE6  0E00               	movlw	0
  3213   000AE8  6E19               	movwf	(___fldiv@b+2)^0,c
  3214   000AEA  0E00               	movlw	0
  3215   000AEC  6E1A               	movwf	(___fldiv@b+3)^0,c
  3216   000AEE                     l2887:
  3217   000AEE  8E19               	bsf	(___fldiv@b+2)^0,7,c
  3218   000AF0  0E00               	movlw	0
  3219   000AF2  6E1A               	movwf	(___fldiv@b+3)^0,c
  3220   000AF4  EF84  F005         	goto	l2893
  3221   000AF8                     l2891:
  3222   000AF8  0E00               	movlw	0
  3223   000AFA  6E17               	movwf	___fldiv@b^0,c
  3224   000AFC  0E00               	movlw	0
  3225   000AFE  6E18               	movwf	(___fldiv@b+1)^0,c
  3226   000B00  0E00               	movlw	0
  3227   000B02  6E19               	movwf	(___fldiv@b+2)^0,c
  3228   000B04  0E00               	movlw	0
  3229   000B06  6E1A               	movwf	(___fldiv@b+3)^0,c
  3230   000B08                     l2893:
  3231   000B08  501E               	movf	(___fldiv@a+3)^0,w,c
  3232   000B0A  0B80               	andlw	128
  3233   000B0C  1A27               	xorwf	___fldiv@sign^0,f,c
  3234   000B0E  501E               	movf	(___fldiv@a+3)^0,w,c
  3235   000B10  241E               	addwf	(___fldiv@a+3)^0,w,c
  3236   000B12  6E2F               	movwf	___fldiv@aexp^0,c
  3237   000B14  AE1D               	btfss	(___fldiv@a+2)^0,7,c
  3238   000B16  EF8F  F005         	goto	u2211
  3239   000B1A  EF91  F005         	goto	u2210
  3240   000B1E                     u2211:
  3241   000B1E  EF92  F005         	goto	l2901
  3242   000B22                     u2210:
  3243   000B22  802F               	bsf	___fldiv@aexp^0,0,c
  3244   000B24                     l2901:
  3245   000B24  502F               	movf	___fldiv@aexp^0,w,c
  3246   000B26  B4D8               	btfsc	status,2,c
  3247   000B28  EF98  F005         	goto	u2221
  3248   000B2C  EF9A  F005         	goto	u2220
  3249   000B30                     u2221:
  3250   000B30  EFAF  F005         	goto	l2911
  3251   000B34                     u2220:
  3252   000B34  282F               	incf	___fldiv@aexp^0,w,c
  3253   000B36  A4D8               	btfss	status,2,c
  3254   000B38  EFA0  F005         	goto	u2231
  3255   000B3C  EFA2  F005         	goto	u2230
  3256   000B40                     u2231:
  3257   000B40  EFAA  F005         	goto	l2907
  3258   000B44                     u2230:
  3259   000B44  0E00               	movlw	0
  3260   000B46  6E1B               	movwf	___fldiv@a^0,c
  3261   000B48  0E00               	movlw	0
  3262   000B4A  6E1C               	movwf	(___fldiv@a+1)^0,c
  3263   000B4C  0E00               	movlw	0
  3264   000B4E  6E1D               	movwf	(___fldiv@a+2)^0,c
  3265   000B50  0E00               	movlw	0
  3266   000B52  6E1E               	movwf	(___fldiv@a+3)^0,c
  3267   000B54                     l2907:
  3268   000B54  8E1D               	bsf	(___fldiv@a+2)^0,7,c
  3269   000B56  0E00               	movlw	0
  3270   000B58  6E1E               	movwf	(___fldiv@a+3)^0,c
  3271   000B5A  EFB7  F005         	goto	l2913
  3272   000B5E                     l2911:
  3273   000B5E  0E00               	movlw	0
  3274   000B60  6E1B               	movwf	___fldiv@a^0,c
  3275   000B62  0E00               	movlw	0
  3276   000B64  6E1C               	movwf	(___fldiv@a+1)^0,c
  3277   000B66  0E00               	movlw	0
  3278   000B68  6E1D               	movwf	(___fldiv@a+2)^0,c
  3279   000B6A  0E00               	movlw	0
  3280   000B6C  6E1E               	movwf	(___fldiv@a+3)^0,c
  3281   000B6E                     l2913:
  3282   000B6E  501B               	movf	___fldiv@a^0,w,c
  3283   000B70  101C               	iorwf	(___fldiv@a+1)^0,w,c
  3284   000B72  101D               	iorwf	(___fldiv@a+2)^0,w,c
  3285   000B74  101E               	iorwf	(___fldiv@a+3)^0,w,c
  3286   000B76  A4D8               	btfss	status,2,c
  3287   000B78  EFC0  F005         	goto	u2241
  3288   000B7C  EFC2  F005         	goto	u2240
  3289   000B80                     u2241:
  3290   000B80  EFDA  F005         	goto	l2925
  3291   000B84                     u2240:
  3292   000B84  0E00               	movlw	0
  3293   000B86  6E17               	movwf	___fldiv@b^0,c
  3294   000B88  0E00               	movlw	0
  3295   000B8A  6E18               	movwf	(___fldiv@b+1)^0,c
  3296   000B8C  0E00               	movlw	0
  3297   000B8E  6E19               	movwf	(___fldiv@b+2)^0,c
  3298   000B90  0E00               	movlw	0
  3299   000B92  6E1A               	movwf	(___fldiv@b+3)^0,c
  3300   000B94  0E80               	movlw	128
  3301   000B96  1219               	iorwf	(___fldiv@b+2)^0,f,c
  3302   000B98  0E7F               	movlw	127
  3303   000B9A  121A               	iorwf	(___fldiv@b+3)^0,f,c
  3304   000B9C                     l2919:
  3305   000B9C  5027               	movf	___fldiv@sign^0,w,c
  3306   000B9E  121A               	iorwf	(___fldiv@b+3)^0,f,c
  3307   000BA0  C017  F017         	movff	___fldiv@b,?___fldiv
  3308   000BA4  C018  F018         	movff	___fldiv@b+1,?___fldiv+1
  3309   000BA8  C019  F019         	movff	___fldiv@b+2,?___fldiv+2
  3310   000BAC  C01A  F01A         	movff	___fldiv@b+3,?___fldiv+3
  3311   000BB0  EF1D  F007         	goto	l1172
  3312   000BB4                     l2925:
  3313   000BB4  502E               	movf	___fldiv@bexp^0,w,c
  3314   000BB6  A4D8               	btfss	status,2,c
  3315   000BB8  EFE0  F005         	goto	u2251
  3316   000BBC  EFE2  F005         	goto	u2250
  3317   000BC0                     u2251:
  3318   000BC0  EFEC  F005         	goto	l2933
  3319   000BC4                     u2250:
  3320   000BC4  0E00               	movlw	0
  3321   000BC6  6E17               	movwf	?___fldiv^0,c
  3322   000BC8  0E00               	movlw	0
  3323   000BCA  6E18               	movwf	(?___fldiv+1)^0,c
  3324   000BCC  0E00               	movlw	0
  3325   000BCE  6E19               	movwf	(?___fldiv+2)^0,c
  3326   000BD0  0E00               	movlw	0
  3327   000BD2  6E1A               	movwf	(?___fldiv+3)^0,c
  3328   000BD4  EF1D  F007         	goto	l1172
  3329   000BD8                     l2933:
  3330   000BD8  502F               	movf	___fldiv@aexp^0,w,c
  3331   000BDA  C02E  F01F         	movff	___fldiv@bexp,??___fldiv
  3332   000BDE  6A20               	clrf	(??___fldiv+1)^0,c
  3333   000BE0  5E1F               	subwf	??___fldiv^0,f,c
  3334   000BE2  0E00               	movlw	0
  3335   000BE4  5A20               	subwfb	(??___fldiv+1)^0,f,c
  3336   000BE6  0E7F               	movlw	127
  3337   000BE8  241F               	addwf	??___fldiv^0,w,c
  3338   000BEA  6E28               	movwf	___fldiv@new_exp^0,c
  3339   000BEC  0E00               	movlw	0
  3340   000BEE  2020               	addwfc	(??___fldiv+1)^0,w,c
  3341   000BF0  6E29               	movwf	(___fldiv@new_exp+1)^0,c
  3342   000BF2  C017  F023         	movff	___fldiv@b,___fldiv@rem
  3343   000BF6  C018  F024         	movff	___fldiv@b+1,___fldiv@rem+1
  3344   000BFA  C019  F025         	movff	___fldiv@b+2,___fldiv@rem+2
  3345   000BFE  C01A  F026         	movff	___fldiv@b+3,___fldiv@rem+3
  3346   000C02  0E00               	movlw	0
  3347   000C04  6E17               	movwf	___fldiv@b^0,c
  3348   000C06  0E00               	movlw	0
  3349   000C08  6E18               	movwf	(___fldiv@b+1)^0,c
  3350   000C0A  0E00               	movlw	0
  3351   000C0C  6E19               	movwf	(___fldiv@b+2)^0,c
  3352   000C0E  0E00               	movlw	0
  3353   000C10  6E1A               	movwf	(___fldiv@b+3)^0,c
  3354   000C12  0E00               	movlw	0
  3355   000C14  6E2A               	movwf	___fldiv@grs^0,c
  3356   000C16  0E00               	movlw	0
  3357   000C18  6E2B               	movwf	(___fldiv@grs+1)^0,c
  3358   000C1A  0E00               	movlw	0
  3359   000C1C  6E2C               	movwf	(___fldiv@grs+2)^0,c
  3360   000C1E  0E00               	movlw	0
  3361   000C20  6E2D               	movwf	(___fldiv@grs+3)^0,c
  3362   000C22  0E00               	movlw	0
  3363   000C24  6E2F               	movwf	___fldiv@aexp^0,c
  3364   000C26  EF4D  F006         	goto	l1174
  3365   000C2A                     l2943:
  3366   000C2A  502F               	movf	___fldiv@aexp^0,w,c
  3367   000C2C  B4D8               	btfsc	status,2,c
  3368   000C2E  EF1B  F006         	goto	u2261
  3369   000C32  EF1D  F006         	goto	u2260
  3370   000C36                     u2261:
  3371   000C36  EF34  F006         	goto	l2951
  3372   000C3A                     u2260:
  3373   000C3A  90D8               	bcf	status,0,c
  3374   000C3C  3623               	rlcf	___fldiv@rem^0,f,c
  3375   000C3E  3624               	rlcf	(___fldiv@rem+1)^0,f,c
  3376   000C40  3625               	rlcf	(___fldiv@rem+2)^0,f,c
  3377   000C42  3626               	rlcf	(___fldiv@rem+3)^0,f,c
  3378   000C44  90D8               	bcf	status,0,c
  3379   000C46  3617               	rlcf	___fldiv@b^0,f,c
  3380   000C48  3618               	rlcf	(___fldiv@b+1)^0,f,c
  3381   000C4A  3619               	rlcf	(___fldiv@b+2)^0,f,c
  3382   000C4C  361A               	rlcf	(___fldiv@b+3)^0,f,c
  3383   000C4E  AE2D               	btfss	(___fldiv@grs+3)^0,7,c
  3384   000C50  EF2C  F006         	goto	u2271
  3385   000C54  EF2E  F006         	goto	u2270
  3386   000C58                     u2271:
  3387   000C58  EF2F  F006         	goto	l1177
  3388   000C5C                     u2270:
  3389   000C5C  8017               	bsf	___fldiv@b^0,0,c
  3390   000C5E                     l1177:
  3391   000C5E  90D8               	bcf	status,0,c
  3392   000C60  362A               	rlcf	___fldiv@grs^0,f,c
  3393   000C62  362B               	rlcf	(___fldiv@grs+1)^0,f,c
  3394   000C64  362C               	rlcf	(___fldiv@grs+2)^0,f,c
  3395   000C66  362D               	rlcf	(___fldiv@grs+3)^0,f,c
  3396   000C68                     l2951:
  3397   000C68  501B               	movf	___fldiv@a^0,w,c
  3398   000C6A  5C23               	subwf	___fldiv@rem^0,w,c
  3399   000C6C  501C               	movf	(___fldiv@a+1)^0,w,c
  3400   000C6E  5824               	subwfb	(___fldiv@rem+1)^0,w,c
  3401   000C70  501D               	movf	(___fldiv@a+2)^0,w,c
  3402   000C72  5825               	subwfb	(___fldiv@rem+2)^0,w,c
  3403   000C74  501E               	movf	(___fldiv@a+3)^0,w,c
  3404   000C76  5826               	subwfb	(___fldiv@rem+3)^0,w,c
  3405   000C78  A0D8               	btfss	status,0,c
  3406   000C7A  EF41  F006         	goto	u2281
  3407   000C7E  EF43  F006         	goto	u2280
  3408   000C82                     u2281:
  3409   000C82  EF4C  F006         	goto	l2957
  3410   000C86                     u2280:
  3411   000C86  8C2D               	bsf	(___fldiv@grs+3)^0,6,c
  3412   000C88  501B               	movf	___fldiv@a^0,w,c
  3413   000C8A  5E23               	subwf	___fldiv@rem^0,f,c
  3414   000C8C  501C               	movf	(___fldiv@a+1)^0,w,c
  3415   000C8E  5A24               	subwfb	(___fldiv@rem+1)^0,f,c
  3416   000C90  501D               	movf	(___fldiv@a+2)^0,w,c
  3417   000C92  5A25               	subwfb	(___fldiv@rem+2)^0,f,c
  3418   000C94  501E               	movf	(___fldiv@a+3)^0,w,c
  3419   000C96  5A26               	subwfb	(___fldiv@rem+3)^0,f,c
  3420   000C98                     l2957:
  3421   000C98  2A2F               	incf	___fldiv@aexp^0,f,c
  3422   000C9A                     l1174:
  3423   000C9A  0E19               	movlw	25
  3424   000C9C  642F               	cpfsgt	___fldiv@aexp^0,c
  3425   000C9E  EF53  F006         	goto	u2291
  3426   000CA2  EF55  F006         	goto	u2290
  3427   000CA6                     u2291:
  3428   000CA6  EF15  F006         	goto	l2943
  3429   000CAA                     u2290:
  3430   000CAA  5023               	movf	___fldiv@rem^0,w,c
  3431   000CAC  1024               	iorwf	(___fldiv@rem+1)^0,w,c
  3432   000CAE  1025               	iorwf	(___fldiv@rem+2)^0,w,c
  3433   000CB0  1026               	iorwf	(___fldiv@rem+3)^0,w,c
  3434   000CB2  B4D8               	btfsc	status,2,c
  3435   000CB4  EF5E  F006         	goto	u2301
  3436   000CB8  EF60  F006         	goto	u2300
  3437   000CBC                     u2301:
  3438   000CBC  EF78  F006         	goto	l2969
  3439   000CC0                     u2300:
  3440   000CC0  802A               	bsf	___fldiv@grs^0,0,c
  3441   000CC2  EF78  F006         	goto	l2969
  3442   000CC6                     l2963:
  3443   000CC6  90D8               	bcf	status,0,c
  3444   000CC8  3617               	rlcf	___fldiv@b^0,f,c
  3445   000CCA  3618               	rlcf	(___fldiv@b+1)^0,f,c
  3446   000CCC  3619               	rlcf	(___fldiv@b+2)^0,f,c
  3447   000CCE  361A               	rlcf	(___fldiv@b+3)^0,f,c
  3448   000CD0  AE2D               	btfss	(___fldiv@grs+3)^0,7,c
  3449   000CD2  EF6D  F006         	goto	u2311
  3450   000CD6  EF6F  F006         	goto	u2310
  3451   000CDA                     u2311:
  3452   000CDA  EF70  F006         	goto	l1183
  3453   000CDE                     u2310:
  3454   000CDE  8017               	bsf	___fldiv@b^0,0,c
  3455   000CE0                     l1183:
  3456   000CE0  90D8               	bcf	status,0,c
  3457   000CE2  362A               	rlcf	___fldiv@grs^0,f,c
  3458   000CE4  362B               	rlcf	(___fldiv@grs+1)^0,f,c
  3459   000CE6  362C               	rlcf	(___fldiv@grs+2)^0,f,c
  3460   000CE8  362D               	rlcf	(___fldiv@grs+3)^0,f,c
  3461   000CEA  0628               	decf	___fldiv@new_exp^0,f,c
  3462   000CEC  A0D8               	btfss	status,0,c
  3463   000CEE  0629               	decf	(___fldiv@new_exp+1)^0,f,c
  3464   000CF0                     l2969:
  3465   000CF0  AE19               	btfss	(___fldiv@b+2)^0,7,c
  3466   000CF2  EF7D  F006         	goto	u2321
  3467   000CF6  EF7F  F006         	goto	u2320
  3468   000CFA                     u2321:
  3469   000CFA  EF63  F006         	goto	l2963
  3470   000CFE                     u2320:
  3471   000CFE  0E00               	movlw	0
  3472   000D00  6E2F               	movwf	___fldiv@aexp^0,c
  3473   000D02  AE2D               	btfss	(___fldiv@grs+3)^0,7,c
  3474   000D04  EF86  F006         	goto	u2331
  3475   000D08  EF88  F006         	goto	u2330
  3476   000D0C                     u2331:
  3477   000D0C  EFAC  F006         	goto	l1185
  3478   000D10                     u2330:
  3479   000D10  0EFF               	movlw	255
  3480   000D12  142A               	andwf	___fldiv@grs^0,w,c
  3481   000D14  6E1F               	movwf	??___fldiv^0,c
  3482   000D16  0EFF               	movlw	255
  3483   000D18  142B               	andwf	(___fldiv@grs+1)^0,w,c
  3484   000D1A  6E20               	movwf	(??___fldiv+1)^0,c
  3485   000D1C  0EFF               	movlw	255
  3486   000D1E  142C               	andwf	(___fldiv@grs+2)^0,w,c
  3487   000D20  6E21               	movwf	(??___fldiv+2)^0,c
  3488   000D22  0E7F               	movlw	127
  3489   000D24  142D               	andwf	(___fldiv@grs+3)^0,w,c
  3490   000D26  6E22               	movwf	(??___fldiv+3)^0,c
  3491   000D28  501F               	movf	??___fldiv^0,w,c
  3492   000D2A  1020               	iorwf	(??___fldiv+1)^0,w,c
  3493   000D2C  1021               	iorwf	(??___fldiv+2)^0,w,c
  3494   000D2E  1022               	iorwf	(??___fldiv+3)^0,w,c
  3495   000D30  B4D8               	btfsc	status,2,c
  3496   000D32  EF9D  F006         	goto	u2341
  3497   000D36  EF9F  F006         	goto	u2340
  3498   000D3A                     u2341:
  3499   000D3A  EFA3  F006         	goto	l1186
  3500   000D3E                     u2340:
  3501   000D3E                     l2977:
  3502   000D3E  0E01               	movlw	1
  3503   000D40  6E2F               	movwf	___fldiv@aexp^0,c
  3504   000D42  EFAC  F006         	goto	l1185
  3505   000D46                     l1186:
  3506   000D46  A017               	btfss	___fldiv@b^0,0,c
  3507   000D48  EFA8  F006         	goto	u2351
  3508   000D4C  EFAA  F006         	goto	u2350
  3509   000D50                     u2351:
  3510   000D50  EFAC  F006         	goto	l1185
  3511   000D54                     u2350:
  3512   000D54  EF9F  F006         	goto	l2977
  3513   000D58                     l1185:
  3514   000D58  502F               	movf	___fldiv@aexp^0,w,c
  3515   000D5A  B4D8               	btfsc	status,2,c
  3516   000D5C  EFB2  F006         	goto	u2361
  3517   000D60  EFB4  F006         	goto	u2360
  3518   000D64                     u2361:
  3519   000D64  EFD8  F006         	goto	l2989
  3520   000D68                     u2360:
  3521   000D68  0E01               	movlw	1
  3522   000D6A  2617               	addwf	___fldiv@b^0,f,c
  3523   000D6C  0E00               	movlw	0
  3524   000D6E  2218               	addwfc	(___fldiv@b+1)^0,f,c
  3525   000D70  2219               	addwfc	(___fldiv@b+2)^0,f,c
  3526   000D72  221A               	addwfc	(___fldiv@b+3)^0,f,c
  3527   000D74  A01A               	btfss	(___fldiv@b+3)^0,0,c
  3528   000D76  EFBF  F006         	goto	u2371
  3529   000D7A  EFC1  F006         	goto	u2370
  3530   000D7E                     u2371:
  3531   000D7E  EFD8  F006         	goto	l2989
  3532   000D82                     u2370:
  3533   000D82  C017  F01F         	movff	___fldiv@b,??___fldiv
  3534   000D86  C018  F020         	movff	___fldiv@b+1,??___fldiv+1
  3535   000D8A  C019  F021         	movff	___fldiv@b+2,??___fldiv+2
  3536   000D8E  C01A  F022         	movff	___fldiv@b+3,??___fldiv+3
  3537   000D92  3422               	rlcf	(??___fldiv+3)^0,w,c
  3538   000D94  3222               	rrcf	(??___fldiv+3)^0,f,c
  3539   000D96  3221               	rrcf	(??___fldiv+2)^0,f,c
  3540   000D98  3220               	rrcf	(??___fldiv+1)^0,f,c
  3541   000D9A  321F               	rrcf	??___fldiv^0,f,c
  3542   000D9C  C01F  F017         	movff	??___fldiv,___fldiv@b
  3543   000DA0  C020  F018         	movff	??___fldiv+1,___fldiv@b+1
  3544   000DA4  C021  F019         	movff	??___fldiv+2,___fldiv@b+2
  3545   000DA8  C022  F01A         	movff	??___fldiv+3,___fldiv@b+3
  3546   000DAC  4A28               	infsnz	___fldiv@new_exp^0,f,c
  3547   000DAE  2A29               	incf	(___fldiv@new_exp+1)^0,f,c
  3548   000DB0                     l2989:
  3549   000DB0  BE29               	btfsc	(___fldiv@new_exp+1)^0,7,c
  3550   000DB2  EFE3  F006         	goto	u2381
  3551   000DB6  5029               	movf	(___fldiv@new_exp+1)^0,w,c
  3552   000DB8  E108               	bnz	u2380
  3553   000DBA  2828               	incf	___fldiv@new_exp^0,w,c
  3554   000DBC  A0D8               	btfss	status,0,c
  3555   000DBE  EFE3  F006         	goto	u2381
  3556   000DC2  EFE5  F006         	goto	u2380
  3557   000DC6                     u2381:
  3558   000DC6  EFF0  F006         	goto	l2993
  3559   000DCA                     u2380:
  3560   000DCA  0E00               	movlw	0
  3561   000DCC  6E29               	movwf	(___fldiv@new_exp+1)^0,c
  3562   000DCE  6828               	setf	___fldiv@new_exp^0,c
  3563   000DD0  0E00               	movlw	0
  3564   000DD2  6E17               	movwf	___fldiv@b^0,c
  3565   000DD4  0E00               	movlw	0
  3566   000DD6  6E18               	movwf	(___fldiv@b+1)^0,c
  3567   000DD8  0E00               	movlw	0
  3568   000DDA  6E19               	movwf	(___fldiv@b+2)^0,c
  3569   000DDC  0E00               	movlw	0
  3570   000DDE  6E1A               	movwf	(___fldiv@b+3)^0,c
  3571   000DE0                     l2993:
  3572   000DE0  BE29               	btfsc	(___fldiv@new_exp+1)^0,7,c
  3573   000DE2  EFFD  F006         	goto	u2390
  3574   000DE6  5029               	movf	(___fldiv@new_exp+1)^0,w,c
  3575   000DE8  E106               	bnz	u2391
  3576   000DEA  0428               	decf	___fldiv@new_exp^0,w,c
  3577   000DEC  B0D8               	btfsc	status,0,c
  3578   000DEE  EFFB  F006         	goto	u2391
  3579   000DF2  EFFD  F006         	goto	u2390
  3580   000DF6                     u2391:
  3581   000DF6  EF0B  F007         	goto	l2997
  3582   000DFA                     u2390:
  3583   000DFA  0E00               	movlw	0
  3584   000DFC  6E29               	movwf	(___fldiv@new_exp+1)^0,c
  3585   000DFE  0E00               	movlw	0
  3586   000E00  6E28               	movwf	___fldiv@new_exp^0,c
  3587   000E02  0E00               	movlw	0
  3588   000E04  6E17               	movwf	___fldiv@b^0,c
  3589   000E06  0E00               	movlw	0
  3590   000E08  6E18               	movwf	(___fldiv@b+1)^0,c
  3591   000E0A  0E00               	movlw	0
  3592   000E0C  6E19               	movwf	(___fldiv@b+2)^0,c
  3593   000E0E  0E00               	movlw	0
  3594   000E10  6E1A               	movwf	(___fldiv@b+3)^0,c
  3595   000E12  0E00               	movlw	0
  3596   000E14  6E27               	movwf	___fldiv@sign^0,c
  3597   000E16                     l2997:
  3598   000E16  C028  F02E         	movff	___fldiv@new_exp,___fldiv@bexp
  3599   000E1A  A02E               	btfss	___fldiv@bexp^0,0,c
  3600   000E1C  EF12  F007         	goto	u2401
  3601   000E20  EF14  F007         	goto	u2400
  3602   000E24                     u2401:
  3603   000E24  EF17  F007         	goto	l3003
  3604   000E28                     u2400:
  3605   000E28  8E19               	bsf	(___fldiv@b+2)^0,7,c
  3606   000E2A  EF18  F007         	goto	l3005
  3607   000E2E                     l3003:
  3608   000E2E  9E19               	bcf	(___fldiv@b+2)^0,7,c
  3609   000E30                     l3005:
  3610   000E30  90D8               	bcf	status,0,c
  3611   000E32  302E               	rrcf	___fldiv@bexp^0,w,c
  3612   000E34  6E1A               	movwf	(___fldiv@b+3)^0,c
  3613   000E36  EFCE  F005         	goto	l2919
  3614   000E3A                     l1172:
  3615   000E3A  0012               	return		;funcret
  3616   000E3C                     __end_of___fldiv:
  3617                           	callstack 0
  3618                           
  3619 ;; *************** function _color_click_init *****************
  3620 ;; Defined at:
  3621 ;;		line 6 in file "color.c"
  3622 ;; Parameters:    Size  Location     Type
  3623 ;;		None
  3624 ;; Auto vars:     Size  Location     Type
  3625 ;;		None
  3626 ;; Return value:  Size  Location     Type
  3627 ;;                  1    wreg      void 
  3628 ;; Registers used:
  3629 ;;		wreg, status,2, status,0, cstack
  3630 ;; Tracked objects:
  3631 ;;		On entry : 0/0
  3632 ;;		On exit  : 0/0
  3633 ;;		Unchanged: 0/0
  3634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3637 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3638 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3639 ;;Total ram usage:        1 bytes
  3640 ;; Hardware stack levels used: 1
  3641 ;; Hardware stack levels required when called: 10
  3642 ;; This function calls:
  3643 ;;		_I2C_2_Master_Init
  3644 ;;		_color_writetoaddr
  3645 ;; This function is called by:
  3646 ;;		_main
  3647 ;; This function uses a non-reentrant model
  3648 ;;
  3649                           
  3650                           	psect	text8
  3651   002246                     __ptext8:
  3652                           	callstack 0
  3653   002246                     _color_click_init:
  3654                           	callstack 20
  3655   002246                     
  3656                           ;color.c: 9:     I2C_2_Master_Init();
  3657   002246  EC3D  F011         	call	_I2C_2_Master_Init	;wreg free
  3658   00224A                     
  3659                           ;color.c: 12:   color_writetoaddr(0x00, 0x01);
  3660   00224A  0E01               	movlw	1
  3661   00224C  6E0B               	movwf	color_writetoaddr@value^0,c
  3662   00224E  0E00               	movlw	0
  3663   002250  ECC1  F011         	call	_color_writetoaddr
  3664   002254                     
  3665                           ;color.c: 13:     _delay((unsigned long)((3)*(64000000/4000.0)));
  3666   002254  0E3F               	movlw	63
  3667   002256  6E0D               	movwf	??_color_click_init^0,c
  3668   002258  0E55               	movlw	85
  3669   00225A                     u4087:
  3670   00225A  2EE8               	decfsz	wreg,f,c
  3671   00225C  D7FE               	bra	u4087
  3672   00225E  2E0D               	decfsz	??_color_click_init^0,f,c
  3673   002260  D7FC               	bra	u4087
  3674   002262  F000               	nop	
  3675   002264                     
  3676                           ;color.c: 16:  color_writetoaddr(0x00, 0x03);
  3677   002264  0E03               	movlw	3
  3678   002266  6E0B               	movwf	color_writetoaddr@value^0,c
  3679   002268  0E00               	movlw	0
  3680   00226A  ECC1  F011         	call	_color_writetoaddr
  3681   00226E                     
  3682                           ;color.c: 19:  color_writetoaddr(0x01, 0xD5);
  3683   00226E  0ED5               	movlw	213
  3684   002270  6E0B               	movwf	color_writetoaddr@value^0,c
  3685   002272  0E01               	movlw	1
  3686   002274  ECC1  F011         	call	_color_writetoaddr
  3687   002278  0012               	return		;funcret
  3688   00227A                     __end_of_color_click_init:
  3689                           	callstack 0
  3690                           
  3691 ;; *************** function _I2C_2_Master_Init *****************
  3692 ;; Defined at:
  3693 ;;		line 4 in file "i2c.c"
  3694 ;; Parameters:    Size  Location     Type
  3695 ;;		None
  3696 ;; Auto vars:     Size  Location     Type
  3697 ;;		None
  3698 ;; Return value:  Size  Location     Type
  3699 ;;                  1    wreg      void 
  3700 ;; Registers used:
  3701 ;;		wreg, status,2
  3702 ;; Tracked objects:
  3703 ;;		On entry : 0/0
  3704 ;;		On exit  : 0/0
  3705 ;;		Unchanged: 0/0
  3706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3710 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3711 ;;Total ram usage:        0 bytes
  3712 ;; Hardware stack levels used: 1
  3713 ;; Hardware stack levels required when called: 7
  3714 ;; This function calls:
  3715 ;;		Nothing
  3716 ;; This function is called by:
  3717 ;;		_color_click_init
  3718 ;; This function uses a non-reentrant model
  3719 ;;
  3720                           
  3721                           	psect	text9
  3722   00227A                     __ptext9:
  3723                           	callstack 0
  3724   00227A                     _I2C_2_Master_Init:
  3725                           	callstack 22
  3726   00227A                     
  3727                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  3728   00227A  010E               	movlb	14	; () banked
  3729   00227C  51D9               	movf	217,w,b	;volatile
  3730   00227E  0BF0               	andlw	-16
  3731   002280  0908               	iorlw	8
  3732   002282  6FD9               	movwf	217,b	;volatile
  3733   002284                     
  3734                           ; BSR set to: 14
  3735                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  3736   002284  8BD9               	bsf	217,5,b	;volatile
  3737                           
  3738                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  3739   002286  0E9F               	movlw	159
  3740   002288  6FD6               	movwf	214,b	;volatile
  3741   00228A                     
  3742                           ; BSR set to: 14
  3743                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  3744   00228A  8A84               	bsf	132,5,c	;volatile
  3745   00228C                     
  3746                           ; BSR set to: 14
  3747                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  3748   00228C  8C84               	bsf	132,6,c	;volatile
  3749   00228E                     
  3750                           ; BSR set to: 14
  3751                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  3752   00228E  9BA7               	bcf	167,5,b	;volatile
  3753   002290                     
  3754                           ; BSR set to: 14
  3755                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  3756   002290  9DA7               	bcf	167,6,b	;volatile
  3757                           
  3758                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  3759   002292  0E1D               	movlw	29
  3760   002294  6F1D               	movwf	29,b	;volatile
  3761                           
  3762                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  3763   002296  0E1E               	movlw	30
  3764   002298  6F1C               	movwf	28,b	;volatile
  3765                           
  3766                           ;i2c.c: 18:   RD5PPS=0x1C;
  3767   00229A  0E1C               	movlw	28
  3768   00229C  6F6F               	movwf	111,b	;volatile
  3769                           
  3770                           ;i2c.c: 19:   RD6PPS=0x1B;
  3771   00229E  0E1B               	movlw	27
  3772   0022A0  6F70               	movwf	112,b	;volatile
  3773   0022A2                     
  3774                           ; BSR set to: 14
  3775   0022A2  0012               	return		;funcret
  3776   0022A4                     __end_of_I2C_2_Master_Init:
  3777                           	callstack 0
  3778                           
  3779 ;; *************** function _WhiteLight *****************
  3780 ;; Defined at:
  3781 ;;		line 17 in file "LED_Buttons.c"
  3782 ;; Parameters:    Size  Location     Type
  3783 ;;		None
  3784 ;; Auto vars:     Size  Location     Type
  3785 ;;		None
  3786 ;; Return value:  Size  Location     Type
  3787 ;;                  1    wreg      void 
  3788 ;; Registers used:
  3789 ;;		None
  3790 ;; Tracked objects:
  3791 ;;		On entry : 0/0
  3792 ;;		On exit  : 0/0
  3793 ;;		Unchanged: 0/0
  3794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3798 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3799 ;;Total ram usage:        0 bytes
  3800 ;; Hardware stack levels used: 1
  3801 ;; Hardware stack levels required when called: 7
  3802 ;; This function calls:
  3803 ;;		Nothing
  3804 ;; This function is called by:
  3805 ;;		_main
  3806 ;; This function uses a non-reentrant model
  3807 ;;
  3808                           
  3809                           	psect	text10
  3810   00244C                     __ptext10:
  3811                           	callstack 0
  3812   00244C                     _WhiteLight:
  3813                           	callstack 23
  3814   00244C                     
  3815                           ;LED_Buttons.c: 18:     LATGbits.LATG1 = 1;
  3816   00244C  827F               	bsf	127,1,c	;volatile
  3817                           
  3818                           ;LED_Buttons.c: 19:     LATAbits.LATA4 = 1;
  3819   00244E  8879               	bsf	121,4,c	;volatile
  3820                           
  3821                           ;LED_Buttons.c: 20:     LATFbits.LATF7 = 1;
  3822   002450  8E7E               	bsf	126,7,c	;volatile
  3823   002452  0012               	return		;funcret
  3824   002454                     __end_of_WhiteLight:
  3825                           	callstack 0
  3826                           
  3827 ;; *************** function _Update_RGBC *****************
  3828 ;; Defined at:
  3829 ;;		line 90 in file "color.c"
  3830 ;; Parameters:    Size  Location     Type
  3831 ;;  tempval         2   19[COMRAM] PTR struct RGB_val
  3832 ;;		 -> main@initial_color(8), 
  3833 ;; Auto vars:     Size  Location     Type
  3834 ;;		None
  3835 ;; Return value:  Size  Location     Type
  3836 ;;                  1    wreg      void 
  3837 ;; Registers used:
  3838 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3839 ;; Tracked objects:
  3840 ;;		On entry : 0/0
  3841 ;;		On exit  : 0/0
  3842 ;;		Unchanged: 0/0
  3843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3844 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3847 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3848 ;;Total ram usage:        2 bytes
  3849 ;; Hardware stack levels used: 1
  3850 ;; Hardware stack levels required when called: 10
  3851 ;; This function calls:
  3852 ;;		_color_read_Blue
  3853 ;;		_color_read_Clear
  3854 ;;		_color_read_Green
  3855 ;;		_color_read_Red
  3856 ;; This function is called by:
  3857 ;;		_main
  3858 ;; This function uses a non-reentrant model
  3859 ;;
  3860                           
  3861                           	psect	text11
  3862   001E28                     __ptext11:
  3863                           	callstack 0
  3864   001E28                     _Update_RGBC:
  3865                           	callstack 20
  3866   001E28                     
  3867                           ;color.c: 92:     tempval->R = color_read_Red();
  3868   001E28  ECF7  F00F         	call	_color_read_Red	;wreg free
  3869   001E2C  C014  FFD9         	movff	Update_RGBC@tempval,fsr2l
  3870   001E30  C015  FFDA         	movff	Update_RGBC@tempval+1,fsr2h
  3871   001E34  C00D  FFDE         	movff	?_color_read_Red,postinc2
  3872   001E38  C00E  FFDD         	movff	?_color_read_Red+1,postdec2
  3873                           
  3874                           ;color.c: 93:     tempval->G = color_read_Green();
  3875   001E3C  EC1F  F010         	call	_color_read_Green	;wreg free
  3876   001E40  EE20 F002          	lfsr	2,2
  3877   001E44  5014               	movf	Update_RGBC@tempval^0,w,c
  3878   001E46  26D9               	addwf	fsr2l,f,c
  3879   001E48  5015               	movf	(Update_RGBC@tempval+1)^0,w,c
  3880   001E4A  22DA               	addwfc	fsr2h,f,c
  3881   001E4C  C00D  FFDE         	movff	?_color_read_Green,postinc2
  3882   001E50  C00E  FFDD         	movff	?_color_read_Green+1,postdec2
  3883                           
  3884                           ;color.c: 94:     tempval->B = color_read_Blue();
  3885   001E54  EC6F  F010         	call	_color_read_Blue	;wreg free
  3886   001E58  EE20 F004          	lfsr	2,4
  3887   001E5C  5014               	movf	Update_RGBC@tempval^0,w,c
  3888   001E5E  26D9               	addwf	fsr2l,f,c
  3889   001E60  5015               	movf	(Update_RGBC@tempval+1)^0,w,c
  3890   001E62  22DA               	addwfc	fsr2h,f,c
  3891   001E64  C00D  FFDE         	movff	?_color_read_Blue,postinc2
  3892   001E68  C00E  FFDD         	movff	?_color_read_Blue+1,postdec2
  3893                           
  3894                           ;color.c: 95:     tempval->C = color_read_Clear();
  3895   001E6C  EC47  F010         	call	_color_read_Clear	;wreg free
  3896   001E70  EE20 F006          	lfsr	2,6
  3897   001E74  5014               	movf	Update_RGBC@tempval^0,w,c
  3898   001E76  26D9               	addwf	fsr2l,f,c
  3899   001E78  5015               	movf	(Update_RGBC@tempval+1)^0,w,c
  3900   001E7A  22DA               	addwfc	fsr2h,f,c
  3901   001E7C  C00D  FFDE         	movff	?_color_read_Clear,postinc2
  3902   001E80  C00E  FFDD         	movff	?_color_read_Clear+1,postdec2
  3903   001E84  0012               	return		;funcret
  3904   001E86                     __end_of_Update_RGBC:
  3905                           	callstack 0
  3906                           
  3907 ;; *************** function _color_read_Red *****************
  3908 ;; Defined at:
  3909 ;;		line 32 in file "color.c"
  3910 ;; Parameters:    Size  Location     Type
  3911 ;;		None
  3912 ;; Auto vars:     Size  Location     Type
  3913 ;;  tmp             2   17[COMRAM] unsigned int 
  3914 ;; Return value:  Size  Location     Type
  3915 ;;                  2   12[COMRAM] unsigned int 
  3916 ;; Registers used:
  3917 ;;		wreg, status,2, status,0, cstack
  3918 ;; Tracked objects:
  3919 ;;		On entry : 0/0
  3920 ;;		On exit  : 0/0
  3921 ;;		Unchanged: 0/0
  3922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3923 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3924 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3925 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3926 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3927 ;;Total ram usage:        7 bytes
  3928 ;; Hardware stack levels used: 1
  3929 ;; Hardware stack levels required when called: 9
  3930 ;; This function calls:
  3931 ;;		_I2C_2_Master_Read
  3932 ;;		_I2C_2_Master_RepStart
  3933 ;;		_I2C_2_Master_Start
  3934 ;;		_I2C_2_Master_Stop
  3935 ;;		_I2C_2_Master_Write
  3936 ;; This function is called by:
  3937 ;;		_Update_RGBC
  3938 ;; This function uses a non-reentrant model
  3939 ;;
  3940                           
  3941                           	psect	text12
  3942   001FEE                     __ptext12:
  3943                           	callstack 0
  3944   001FEE                     _color_read_Red:
  3945                           	callstack 20
  3946   001FEE                     
  3947                           ;color.c: 34:  unsigned int tmp;;color.c: 35:  I2C_2_Master_Start();
  3948   001FEE  EC17  F012         	call	_I2C_2_Master_Start	;wreg free
  3949                           
  3950                           ;color.c: 36:  I2C_2_Master_Write(0x52 | 0x00);
  3951   001FF2  0E52               	movlw	82
  3952   001FF4  EC01  F012         	call	_I2C_2_Master_Write
  3953                           
  3954                           ;color.c: 37:  I2C_2_Master_Write(0xA0 | 0x16);
  3955   001FF8  0EB6               	movlw	182
  3956   001FFA  EC01  F012         	call	_I2C_2_Master_Write
  3957                           
  3958                           ;color.c: 38:  I2C_2_Master_RepStart();
  3959   001FFE  EC0D  F012         	call	_I2C_2_Master_RepStart	;wreg free
  3960                           
  3961                           ;color.c: 39:  I2C_2_Master_Write(0x52 | 0x01);
  3962   002002  0E53               	movlw	83
  3963   002004  EC01  F012         	call	_I2C_2_Master_Write
  3964                           
  3965                           ;color.c: 40:  tmp=I2C_2_Master_Read(1);
  3966   002008  0E01               	movlw	1
  3967   00200A  ECE5  F010         	call	_I2C_2_Master_Read
  3968   00200E  6E0F               	movwf	??_color_read_Red^0,c
  3969   002010  500F               	movf	??_color_read_Red^0,w,c
  3970   002012  6E12               	movwf	color_read_Red@tmp^0,c
  3971   002014  6A13               	clrf	(color_read_Red@tmp+1)^0,c
  3972                           
  3973                           ;color.c: 41:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3974   002016  0E00               	movlw	0
  3975   002018  ECE5  F010         	call	_I2C_2_Master_Read
  3976   00201C  6E0F               	movwf	??_color_read_Red^0,c
  3977   00201E  500F               	movf	??_color_read_Red^0,w,c
  3978   002020  6E11               	movwf	(??_color_read_Red+2)^0,c
  3979   002022  6A10               	clrf	(??_color_read_Red+1)^0,c
  3980   002024  5012               	movf	color_read_Red@tmp^0,w,c
  3981   002026  1010               	iorwf	(??_color_read_Red+1)^0,w,c
  3982   002028  6E12               	movwf	color_read_Red@tmp^0,c
  3983   00202A  5013               	movf	(color_read_Red@tmp+1)^0,w,c
  3984   00202C  1011               	iorwf	(??_color_read_Red+2)^0,w,c
  3985   00202E  6E13               	movwf	(color_read_Red@tmp+1)^0,c
  3986                           
  3987                           ;color.c: 42:  I2C_2_Master_Stop();
  3988   002030  EC12  F012         	call	_I2C_2_Master_Stop	;wreg free
  3989   002034                     
  3990                           ;color.c: 43:  return tmp;
  3991   002034  C012  F00D         	movff	color_read_Red@tmp,?_color_read_Red
  3992   002038  C013  F00E         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  3993   00203C  0012               	return		;funcret
  3994   00203E                     __end_of_color_read_Red:
  3995                           	callstack 0
  3996                           
  3997 ;; *************** function _color_read_Green *****************
  3998 ;; Defined at:
  3999 ;;		line 46 in file "color.c"
  4000 ;; Parameters:    Size  Location     Type
  4001 ;;		None
  4002 ;; Auto vars:     Size  Location     Type
  4003 ;;  tmp             2   17[COMRAM] unsigned int 
  4004 ;; Return value:  Size  Location     Type
  4005 ;;                  2   12[COMRAM] unsigned int 
  4006 ;; Registers used:
  4007 ;;		wreg, status,2, status,0, cstack
  4008 ;; Tracked objects:
  4009 ;;		On entry : 0/0
  4010 ;;		On exit  : 0/0
  4011 ;;		Unchanged: 0/0
  4012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4013 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4014 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4015 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4016 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4017 ;;Total ram usage:        7 bytes
  4018 ;; Hardware stack levels used: 1
  4019 ;; Hardware stack levels required when called: 9
  4020 ;; This function calls:
  4021 ;;		_I2C_2_Master_Read
  4022 ;;		_I2C_2_Master_RepStart
  4023 ;;		_I2C_2_Master_Start
  4024 ;;		_I2C_2_Master_Stop
  4025 ;;		_I2C_2_Master_Write
  4026 ;; This function is called by:
  4027 ;;		_Update_RGBC
  4028 ;; This function uses a non-reentrant model
  4029 ;;
  4030                           
  4031                           	psect	text13
  4032   00203E                     __ptext13:
  4033                           	callstack 0
  4034   00203E                     _color_read_Green:
  4035                           	callstack 20
  4036   00203E                     
  4037                           ;color.c: 48:  unsigned int tmp;;color.c: 49:  I2C_2_Master_Start();
  4038   00203E  EC17  F012         	call	_I2C_2_Master_Start	;wreg free
  4039                           
  4040                           ;color.c: 50:  I2C_2_Master_Write(0x52 | 0x00);
  4041   002042  0E52               	movlw	82
  4042   002044  EC01  F012         	call	_I2C_2_Master_Write
  4043                           
  4044                           ;color.c: 51:  I2C_2_Master_Write(0xA0 | 0x18);
  4045   002048  0EB8               	movlw	184
  4046   00204A  EC01  F012         	call	_I2C_2_Master_Write
  4047                           
  4048                           ;color.c: 52:  I2C_2_Master_RepStart();
  4049   00204E  EC0D  F012         	call	_I2C_2_Master_RepStart	;wreg free
  4050                           
  4051                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x01);
  4052   002052  0E53               	movlw	83
  4053   002054  EC01  F012         	call	_I2C_2_Master_Write
  4054                           
  4055                           ;color.c: 54:  tmp=I2C_2_Master_Read(1);
  4056   002058  0E01               	movlw	1
  4057   00205A  ECE5  F010         	call	_I2C_2_Master_Read
  4058   00205E  6E0F               	movwf	??_color_read_Green^0,c
  4059   002060  500F               	movf	??_color_read_Green^0,w,c
  4060   002062  6E12               	movwf	color_read_Green@tmp^0,c
  4061   002064  6A13               	clrf	(color_read_Green@tmp+1)^0,c
  4062                           
  4063                           ;color.c: 55:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4064   002066  0E00               	movlw	0
  4065   002068  ECE5  F010         	call	_I2C_2_Master_Read
  4066   00206C  6E0F               	movwf	??_color_read_Green^0,c
  4067   00206E  500F               	movf	??_color_read_Green^0,w,c
  4068   002070  6E11               	movwf	(??_color_read_Green+2)^0,c
  4069   002072  6A10               	clrf	(??_color_read_Green+1)^0,c
  4070   002074  5012               	movf	color_read_Green@tmp^0,w,c
  4071   002076  1010               	iorwf	(??_color_read_Green+1)^0,w,c
  4072   002078  6E12               	movwf	color_read_Green@tmp^0,c
  4073   00207A  5013               	movf	(color_read_Green@tmp+1)^0,w,c
  4074   00207C  1011               	iorwf	(??_color_read_Green+2)^0,w,c
  4075   00207E  6E13               	movwf	(color_read_Green@tmp+1)^0,c
  4076                           
  4077                           ;color.c: 56:  I2C_2_Master_Stop();
  4078   002080  EC12  F012         	call	_I2C_2_Master_Stop	;wreg free
  4079   002084                     
  4080                           ;color.c: 57:  return tmp;
  4081   002084  C012  F00D         	movff	color_read_Green@tmp,?_color_read_Green
  4082   002088  C013  F00E         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  4083   00208C  0012               	return		;funcret
  4084   00208E                     __end_of_color_read_Green:
  4085                           	callstack 0
  4086                           
  4087 ;; *************** function _color_read_Clear *****************
  4088 ;; Defined at:
  4089 ;;		line 74 in file "color.c"
  4090 ;; Parameters:    Size  Location     Type
  4091 ;;		None
  4092 ;; Auto vars:     Size  Location     Type
  4093 ;;  tmp             2   17[COMRAM] unsigned int 
  4094 ;; Return value:  Size  Location     Type
  4095 ;;                  2   12[COMRAM] unsigned int 
  4096 ;; Registers used:
  4097 ;;		wreg, status,2, status,0, cstack
  4098 ;; Tracked objects:
  4099 ;;		On entry : 0/0
  4100 ;;		On exit  : 0/0
  4101 ;;		Unchanged: 0/0
  4102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4103 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4104 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4105 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4106 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4107 ;;Total ram usage:        7 bytes
  4108 ;; Hardware stack levels used: 1
  4109 ;; Hardware stack levels required when called: 9
  4110 ;; This function calls:
  4111 ;;		_I2C_2_Master_Read
  4112 ;;		_I2C_2_Master_RepStart
  4113 ;;		_I2C_2_Master_Start
  4114 ;;		_I2C_2_Master_Stop
  4115 ;;		_I2C_2_Master_Write
  4116 ;; This function is called by:
  4117 ;;		_Update_RGBC
  4118 ;; This function uses a non-reentrant model
  4119 ;;
  4120                           
  4121                           	psect	text14
  4122   00208E                     __ptext14:
  4123                           	callstack 0
  4124   00208E                     _color_read_Clear:
  4125                           	callstack 20
  4126   00208E                     
  4127                           ;color.c: 76:  unsigned int tmp;;color.c: 77:  I2C_2_Master_Start();
  4128   00208E  EC17  F012         	call	_I2C_2_Master_Start	;wreg free
  4129                           
  4130                           ;color.c: 78:  I2C_2_Master_Write(0x52 | 0x00);
  4131   002092  0E52               	movlw	82
  4132   002094  EC01  F012         	call	_I2C_2_Master_Write
  4133                           
  4134                           ;color.c: 79:  I2C_2_Master_Write(0xA0 | 0x14);
  4135   002098  0EB4               	movlw	180
  4136   00209A  EC01  F012         	call	_I2C_2_Master_Write
  4137                           
  4138                           ;color.c: 80:  I2C_2_Master_RepStart();
  4139   00209E  EC0D  F012         	call	_I2C_2_Master_RepStart	;wreg free
  4140                           
  4141                           ;color.c: 81:  I2C_2_Master_Write(0x52 | 0x01);
  4142   0020A2  0E53               	movlw	83
  4143   0020A4  EC01  F012         	call	_I2C_2_Master_Write
  4144                           
  4145                           ;color.c: 82:  tmp=I2C_2_Master_Read(1);
  4146   0020A8  0E01               	movlw	1
  4147   0020AA  ECE5  F010         	call	_I2C_2_Master_Read
  4148   0020AE  6E0F               	movwf	??_color_read_Clear^0,c
  4149   0020B0  500F               	movf	??_color_read_Clear^0,w,c
  4150   0020B2  6E12               	movwf	color_read_Clear@tmp^0,c
  4151   0020B4  6A13               	clrf	(color_read_Clear@tmp+1)^0,c
  4152                           
  4153                           ;color.c: 83:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4154   0020B6  0E00               	movlw	0
  4155   0020B8  ECE5  F010         	call	_I2C_2_Master_Read
  4156   0020BC  6E0F               	movwf	??_color_read_Clear^0,c
  4157   0020BE  500F               	movf	??_color_read_Clear^0,w,c
  4158   0020C0  6E11               	movwf	(??_color_read_Clear+2)^0,c
  4159   0020C2  6A10               	clrf	(??_color_read_Clear+1)^0,c
  4160   0020C4  5012               	movf	color_read_Clear@tmp^0,w,c
  4161   0020C6  1010               	iorwf	(??_color_read_Clear+1)^0,w,c
  4162   0020C8  6E12               	movwf	color_read_Clear@tmp^0,c
  4163   0020CA  5013               	movf	(color_read_Clear@tmp+1)^0,w,c
  4164   0020CC  1011               	iorwf	(??_color_read_Clear+2)^0,w,c
  4165   0020CE  6E13               	movwf	(color_read_Clear@tmp+1)^0,c
  4166                           
  4167                           ;color.c: 84:  I2C_2_Master_Stop();
  4168   0020D0  EC12  F012         	call	_I2C_2_Master_Stop	;wreg free
  4169   0020D4                     
  4170                           ;color.c: 85:  return tmp;
  4171   0020D4  C012  F00D         	movff	color_read_Clear@tmp,?_color_read_Clear
  4172   0020D8  C013  F00E         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  4173   0020DC  0012               	return		;funcret
  4174   0020DE                     __end_of_color_read_Clear:
  4175                           	callstack 0
  4176                           
  4177 ;; *************** function _color_read_Blue *****************
  4178 ;; Defined at:
  4179 ;;		line 60 in file "color.c"
  4180 ;; Parameters:    Size  Location     Type
  4181 ;;		None
  4182 ;; Auto vars:     Size  Location     Type
  4183 ;;  tmp             2   17[COMRAM] unsigned int 
  4184 ;; Return value:  Size  Location     Type
  4185 ;;                  2   12[COMRAM] unsigned int 
  4186 ;; Registers used:
  4187 ;;		wreg, status,2, status,0, cstack
  4188 ;; Tracked objects:
  4189 ;;		On entry : 0/0
  4190 ;;		On exit  : 0/0
  4191 ;;		Unchanged: 0/0
  4192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4193 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4194 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4195 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4196 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4197 ;;Total ram usage:        7 bytes
  4198 ;; Hardware stack levels used: 1
  4199 ;; Hardware stack levels required when called: 9
  4200 ;; This function calls:
  4201 ;;		_I2C_2_Master_Read
  4202 ;;		_I2C_2_Master_RepStart
  4203 ;;		_I2C_2_Master_Start
  4204 ;;		_I2C_2_Master_Stop
  4205 ;;		_I2C_2_Master_Write
  4206 ;; This function is called by:
  4207 ;;		_Update_RGBC
  4208 ;; This function uses a non-reentrant model
  4209 ;;
  4210                           
  4211                           	psect	text15
  4212   0020DE                     __ptext15:
  4213                           	callstack 0
  4214   0020DE                     _color_read_Blue:
  4215                           	callstack 20
  4216   0020DE                     
  4217                           ;color.c: 62:  unsigned int tmp;;color.c: 63:  I2C_2_Master_Start();
  4218   0020DE  EC17  F012         	call	_I2C_2_Master_Start	;wreg free
  4219                           
  4220                           ;color.c: 64:  I2C_2_Master_Write(0x52 | 0x00);
  4221   0020E2  0E52               	movlw	82
  4222   0020E4  EC01  F012         	call	_I2C_2_Master_Write
  4223                           
  4224                           ;color.c: 65:  I2C_2_Master_Write(0xA0 | 0x1A);
  4225   0020E8  0EBA               	movlw	186
  4226   0020EA  EC01  F012         	call	_I2C_2_Master_Write
  4227                           
  4228                           ;color.c: 66:  I2C_2_Master_RepStart();
  4229   0020EE  EC0D  F012         	call	_I2C_2_Master_RepStart	;wreg free
  4230                           
  4231                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x01);
  4232   0020F2  0E53               	movlw	83
  4233   0020F4  EC01  F012         	call	_I2C_2_Master_Write
  4234                           
  4235                           ;color.c: 68:  tmp=I2C_2_Master_Read(1);
  4236   0020F8  0E01               	movlw	1
  4237   0020FA  ECE5  F010         	call	_I2C_2_Master_Read
  4238   0020FE  6E0F               	movwf	??_color_read_Blue^0,c
  4239   002100  500F               	movf	??_color_read_Blue^0,w,c
  4240   002102  6E12               	movwf	color_read_Blue@tmp^0,c
  4241   002104  6A13               	clrf	(color_read_Blue@tmp+1)^0,c
  4242                           
  4243                           ;color.c: 69:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4244   002106  0E00               	movlw	0
  4245   002108  ECE5  F010         	call	_I2C_2_Master_Read
  4246   00210C  6E0F               	movwf	??_color_read_Blue^0,c
  4247   00210E  500F               	movf	??_color_read_Blue^0,w,c
  4248   002110  6E11               	movwf	(??_color_read_Blue+2)^0,c
  4249   002112  6A10               	clrf	(??_color_read_Blue+1)^0,c
  4250   002114  5012               	movf	color_read_Blue@tmp^0,w,c
  4251   002116  1010               	iorwf	(??_color_read_Blue+1)^0,w,c
  4252   002118  6E12               	movwf	color_read_Blue@tmp^0,c
  4253   00211A  5013               	movf	(color_read_Blue@tmp+1)^0,w,c
  4254   00211C  1011               	iorwf	(??_color_read_Blue+2)^0,w,c
  4255   00211E  6E13               	movwf	(color_read_Blue@tmp+1)^0,c
  4256                           
  4257                           ;color.c: 70:  I2C_2_Master_Stop();
  4258   002120  EC12  F012         	call	_I2C_2_Master_Stop	;wreg free
  4259   002124                     
  4260                           ;color.c: 71:  return tmp;
  4261   002124  C012  F00D         	movff	color_read_Blue@tmp,?_color_read_Blue
  4262   002128  C013  F00E         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  4263   00212C  0012               	return		;funcret
  4264   00212E                     __end_of_color_read_Blue:
  4265                           	callstack 0
  4266                           
  4267 ;; *************** function _I2C_2_Master_RepStart *****************
  4268 ;; Defined at:
  4269 ;;		line 33 in file "i2c.c"
  4270 ;; Parameters:    Size  Location     Type
  4271 ;;		None
  4272 ;; Auto vars:     Size  Location     Type
  4273 ;;		None
  4274 ;; Return value:  Size  Location     Type
  4275 ;;                  1    wreg      void 
  4276 ;; Registers used:
  4277 ;;		wreg, status,2, status,0, cstack
  4278 ;; Tracked objects:
  4279 ;;		On entry : 0/0
  4280 ;;		On exit  : 0/0
  4281 ;;		Unchanged: 0/0
  4282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4287 ;;Total ram usage:        0 bytes
  4288 ;; Hardware stack levels used: 1
  4289 ;; Hardware stack levels required when called: 8
  4290 ;; This function calls:
  4291 ;;		_I2C_2_Master_Idle
  4292 ;; This function is called by:
  4293 ;;		_color_read_Red
  4294 ;;		_color_read_Green
  4295 ;;		_color_read_Blue
  4296 ;;		_color_read_Clear
  4297 ;; This function uses a non-reentrant model
  4298 ;;
  4299                           
  4300                           	psect	text16
  4301   00241A                     __ptext16:
  4302                           	callstack 0
  4303   00241A                     _I2C_2_Master_RepStart:
  4304                           	callstack 20
  4305   00241A                     
  4306                           ;i2c.c: 35:   I2C_2_Master_Idle();
  4307   00241A  EC52  F011         	call	_I2C_2_Master_Idle	;wreg free
  4308   00241E                     
  4309                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  4310   00241E  010E               	movlb	14	; () banked
  4311   002420  83DA               	bsf	218,1,b	;volatile
  4312   002422                     
  4313                           ; BSR set to: 14
  4314   002422  0012               	return		;funcret
  4315   002424                     __end_of_I2C_2_Master_RepStart:
  4316                           	callstack 0
  4317                           
  4318 ;; *************** function _I2C_2_Master_Read *****************
  4319 ;; Defined at:
  4320 ;;		line 51 in file "i2c.c"
  4321 ;; Parameters:    Size  Location     Type
  4322 ;;  ack             1    wreg     unsigned char 
  4323 ;; Auto vars:     Size  Location     Type
  4324 ;;  ack             1   10[COMRAM] unsigned char 
  4325 ;;  tmp             1   11[COMRAM] unsigned char 
  4326 ;; Return value:  Size  Location     Type
  4327 ;;                  1    wreg      unsigned char 
  4328 ;; Registers used:
  4329 ;;		wreg, status,2, status,0, cstack
  4330 ;; Tracked objects:
  4331 ;;		On entry : 0/0
  4332 ;;		On exit  : 0/0
  4333 ;;		Unchanged: 0/0
  4334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4336 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4337 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4338 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4339 ;;Total ram usage:        3 bytes
  4340 ;; Hardware stack levels used: 1
  4341 ;; Hardware stack levels required when called: 8
  4342 ;; This function calls:
  4343 ;;		_I2C_2_Master_Idle
  4344 ;; This function is called by:
  4345 ;;		_color_read_Red
  4346 ;;		_color_read_Green
  4347 ;;		_color_read_Blue
  4348 ;;		_color_read_Clear
  4349 ;; This function uses a non-reentrant model
  4350 ;;
  4351                           
  4352                           	psect	text17
  4353   0021CA                     __ptext17:
  4354                           	callstack 0
  4355   0021CA                     _I2C_2_Master_Read:
  4356                           	callstack 20
  4357                           
  4358                           ; BSR set to: 14
  4359                           ;incstack = 0
  4360                           ;I2C_2_Master_Read@ack stored from wreg
  4361   0021CA  6E0B               	movwf	I2C_2_Master_Read@ack^0,c
  4362   0021CC                     
  4363                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  4364   0021CC  EC52  F011         	call	_I2C_2_Master_Idle	;wreg free
  4365   0021D0                     
  4366                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  4367   0021D0  010E               	movlb	14	; () banked
  4368   0021D2  87DA               	bsf	218,3,b	;volatile
  4369                           
  4370                           ;i2c.c: 56:   I2C_2_Master_Idle();
  4371   0021D4  EC52  F011         	call	_I2C_2_Master_Idle	;wreg free
  4372   0021D8                     
  4373                           ;i2c.c: 57:   tmp = SSP2BUF;
  4374   0021D8  CED5 F00C          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  4375                           
  4376                           ;i2c.c: 58:   I2C_2_Master_Idle();
  4377   0021DC  EC52  F011         	call	_I2C_2_Master_Idle	;wreg free
  4378   0021E0                     
  4379                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  4380   0021E0  500B               	movf	I2C_2_Master_Read@ack^0,w,c
  4381   0021E2  B4D8               	btfsc	status,2,c
  4382   0021E4  EFF6  F010         	goto	u1921
  4383   0021E8  EFFA  F010         	goto	u1920
  4384   0021EC                     u1921:
  4385   0021EC  6A0A               	clrf	??_I2C_2_Master_Read^0,c
  4386   0021EE  2A0A               	incf	??_I2C_2_Master_Read^0,f,c
  4387   0021F0  EFFB  F010         	goto	u1938
  4388   0021F4                     u1920:
  4389   0021F4  6A0A               	clrf	??_I2C_2_Master_Read^0,c
  4390   0021F6                     u1938:
  4391   0021F6  3A0A               	swapf	??_I2C_2_Master_Read^0,f,c
  4392   0021F8  460A               	rlncf	??_I2C_2_Master_Read^0,f,c
  4393   0021FA  010E               	movlb	14	; () banked
  4394   0021FC  51DA               	movf	218,w,b	;volatile
  4395   0021FE  180A               	xorwf	??_I2C_2_Master_Read^0,w,c
  4396   002200  0BDF               	andlw	-33
  4397   002202  180A               	xorwf	??_I2C_2_Master_Read^0,w,c
  4398   002204  6FDA               	movwf	218,b	;volatile
  4399   002206                     
  4400                           ; BSR set to: 14
  4401                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  4402   002206  89DA               	bsf	218,4,b	;volatile
  4403   002208                     
  4404                           ; BSR set to: 14
  4405                           ;i2c.c: 61:   return tmp;
  4406   002208  500C               	movf	I2C_2_Master_Read@tmp^0,w,c
  4407   00220A                     
  4408                           ; BSR set to: 14
  4409   00220A  0012               	return		;funcret
  4410   00220C                     __end_of_I2C_2_Master_Read:
  4411                           	callstack 0
  4412                           
  4413 ;; *************** function _Timer0_init *****************
  4414 ;; Defined at:
  4415 ;;		line 7 in file "timers.c"
  4416 ;; Parameters:    Size  Location     Type
  4417 ;;		None
  4418 ;; Auto vars:     Size  Location     Type
  4419 ;;		None
  4420 ;; Return value:  Size  Location     Type
  4421 ;;                  1    wreg      void 
  4422 ;; Registers used:
  4423 ;;		wreg, status,2
  4424 ;; Tracked objects:
  4425 ;;		On entry : 0/0
  4426 ;;		On exit  : 0/0
  4427 ;;		Unchanged: 0/0
  4428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4432 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4433 ;;Total ram usage:        0 bytes
  4434 ;; Hardware stack levels used: 1
  4435 ;; Hardware stack levels required when called: 7
  4436 ;; This function calls:
  4437 ;;		Nothing
  4438 ;; This function is called by:
  4439 ;;		_main
  4440 ;; This function uses a non-reentrant model
  4441 ;;
  4442                           
  4443                           	psect	text18
  4444   002362                     __ptext18:
  4445                           	callstack 0
  4446   002362                     _Timer0_init:
  4447                           	callstack 23
  4448   002362                     
  4449                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  4450   002362  50D6               	movf	214,w,c	;volatile
  4451   002364  0B1F               	andlw	-225
  4452   002366  0940               	iorlw	64
  4453   002368  6ED6               	movwf	214,c	;volatile
  4454   00236A                     
  4455                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  4456   00236A  88D6               	bsf	214,4,c	;volatile
  4457                           
  4458                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1000;
  4459   00236C  50D6               	movf	214,w,c	;volatile
  4460   00236E  0BF0               	andlw	-16
  4461   002370  0908               	iorlw	8
  4462   002372  6ED6               	movwf	214,c	;volatile
  4463   002374                     
  4464                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
  4465   002374  88D5               	bsf	213,4,c	;volatile
  4466                           
  4467                           ;timers.c: 15:     TMR0H = 0b11000010;
  4468   002376  0EC2               	movlw	194
  4469   002378  6ED4               	movwf	212,c	;volatile
  4470                           
  4471                           ;timers.c: 16:     TMR0L = 0b11110110;
  4472   00237A  0EF6               	movlw	246
  4473   00237C  6ED3               	movwf	211,c	;volatile
  4474   00237E                     
  4475                           ;timers.c: 17:     T0CON0bits.T0EN=1;
  4476   00237E  8ED5               	bsf	213,7,c	;volatile
  4477   002380  0012               	return		;funcret
  4478   002382                     __end_of_Timer0_init:
  4479                           	callstack 0
  4480                           
  4481 ;; *************** function _MoveBuggy *****************
  4482 ;; Defined at:
  4483 ;;		line 116 in file "color_instructions.c"
  4484 ;; Parameters:    Size  Location     Type
  4485 ;;  color_detect    2   45[COMRAM] PTR unsigned char 
  4486 ;;		 -> RAM(3561), 
  4487 ;;  mL              2   47[COMRAM] PTR struct DC_motor
  4488 ;;		 -> main@motorL(9), 
  4489 ;;  mR              2   49[COMRAM] PTR struct DC_motor
  4490 ;;		 -> main@motorR(9), 
  4491 ;; Auto vars:     Size  Location     Type
  4492 ;;		None
  4493 ;; Return value:  Size  Location     Type
  4494 ;;                  1    wreg      void 
  4495 ;; Registers used:
  4496 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4497 ;; Tracked objects:
  4498 ;;		On entry : 0/0
  4499 ;;		On exit  : 0/0
  4500 ;;		Unchanged: 0/0
  4501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4502 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4505 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4506 ;;Total ram usage:        6 bytes
  4507 ;; Hardware stack levels used: 1
  4508 ;; Hardware stack levels required when called: 12
  4509 ;; This function calls:
  4510 ;;		_BlueInstructions
  4511 ;;		_GreenInstructions
  4512 ;;		_LightBlueInstructions
  4513 ;;		_OrangeInstructions
  4514 ;;		_PinkInstructions
  4515 ;;		_RedInstructions
  4516 ;;		_YellowInstructions
  4517 ;; This function is called by:
  4518 ;;		_main
  4519 ;; This function uses a non-reentrant model
  4520 ;;
  4521                           
  4522                           	psect	text19
  4523   0012B6                     __ptext19:
  4524                           	callstack 0
  4525   0012B6                     _MoveBuggy:
  4526                           	callstack 18
  4527   0012B6                     
  4528                           ;color_instructions.c: 117:     if (color_detected==1){
  4529   0012B6  042E               	decf	MoveBuggy@color_detected^0,w,c
  4530   0012B8  102F               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4531   0012BA  A4D8               	btfss	status,2,c
  4532   0012BC  EF62  F009         	goto	u3291
  4533   0012C0  EF64  F009         	goto	u3290
  4534   0012C4                     u3291:
  4535   0012C4  EF70  F009         	goto	l3475
  4536   0012C8                     u3290:
  4537   0012C8                     
  4538                           ;color_instructions.c: 118:         RedInstructions(mL, mR);
  4539   0012C8  C030  F027         	movff	MoveBuggy@mL,RedInstructions@mL
  4540   0012CC  C031  F028         	movff	MoveBuggy@mL+1,RedInstructions@mL+1
  4541   0012D0  C032  F029         	movff	MoveBuggy@mR,RedInstructions@mR
  4542   0012D4  C033  F02A         	movff	MoveBuggy@mR+1,RedInstructions@mR+1
  4543   0012D8  EC8B  F00D         	call	_RedInstructions	;wreg free
  4544                           
  4545                           ;color_instructions.c: 119:     }
  4546   0012DC  EFF4  F009         	goto	l587
  4547   0012E0                     l3475:
  4548   0012E0  0E02               	movlw	2
  4549   0012E2  182E               	xorwf	MoveBuggy@color_detected^0,w,c
  4550   0012E4  102F               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4551   0012E6  A4D8               	btfss	status,2,c
  4552   0012E8  EF78  F009         	goto	u3301
  4553   0012EC  EF7A  F009         	goto	u3300
  4554   0012F0                     u3301:
  4555   0012F0  EF86  F009         	goto	l3479
  4556   0012F4                     u3300:
  4557   0012F4                     
  4558                           ;color_instructions.c: 121:         GreenInstructions(mL, mR);
  4559   0012F4  C030  F027         	movff	MoveBuggy@mL,GreenInstructions@mL
  4560   0012F8  C031  F028         	movff	MoveBuggy@mL+1,GreenInstructions@mL+1
  4561   0012FC  C032  F029         	movff	MoveBuggy@mR,GreenInstructions@mR
  4562   001300  C033  F02A         	movff	MoveBuggy@mR+1,GreenInstructions@mR+1
  4563   001304  EC97  F00E         	call	_GreenInstructions	;wreg free
  4564                           
  4565                           ;color_instructions.c: 122:     }
  4566   001308  EFF4  F009         	goto	l587
  4567   00130C                     l3479:
  4568   00130C  0E03               	movlw	3
  4569   00130E  182E               	xorwf	MoveBuggy@color_detected^0,w,c
  4570   001310  102F               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4571   001312  A4D8               	btfss	status,2,c
  4572   001314  EF8E  F009         	goto	u3311
  4573   001318  EF90  F009         	goto	u3310
  4574   00131C                     u3311:
  4575   00131C  EF9C  F009         	goto	l3483
  4576   001320                     u3310:
  4577   001320                     
  4578                           ;color_instructions.c: 124:         BlueInstructions(mL, mR);
  4579   001320  C030  F027         	movff	MoveBuggy@mL,BlueInstructions@mL
  4580   001324  C031  F028         	movff	MoveBuggy@mL+1,BlueInstructions@mL+1
  4581   001328  C032  F029         	movff	MoveBuggy@mR,BlueInstructions@mR
  4582   00132C  C033  F02A         	movff	MoveBuggy@mR+1,BlueInstructions@mR+1
  4583   001330  ECA7  F00C         	call	_BlueInstructions	;wreg free
  4584                           
  4585                           ;color_instructions.c: 125:     }
  4586   001334  EFF4  F009         	goto	l587
  4587   001338                     l3483:
  4588   001338  0E04               	movlw	4
  4589   00133A  182E               	xorwf	MoveBuggy@color_detected^0,w,c
  4590   00133C  102F               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4591   00133E  A4D8               	btfss	status,2,c
  4592   001340  EFA4  F009         	goto	u3321
  4593   001344  EFA6  F009         	goto	u3320
  4594   001348                     u3321:
  4595   001348  EFB2  F009         	goto	l3487
  4596   00134C                     u3320:
  4597   00134C                     
  4598                           ;color_instructions.c: 127:         YellowInstructions(mL, mR);
  4599   00134C  C030  F027         	movff	MoveBuggy@mL,YellowInstructions@mL
  4600   001350  C031  F028         	movff	MoveBuggy@mL+1,YellowInstructions@mL+1
  4601   001354  C032  F029         	movff	MoveBuggy@mR,YellowInstructions@mR
  4602   001358  C033  F02A         	movff	MoveBuggy@mR+1,YellowInstructions@mR+1
  4603   00135C  EC48  F00D         	call	_YellowInstructions	;wreg free
  4604                           
  4605                           ;color_instructions.c: 128:     }
  4606   001360  EFF4  F009         	goto	l587
  4607   001364                     l3487:
  4608   001364  0E05               	movlw	5
  4609   001366  182E               	xorwf	MoveBuggy@color_detected^0,w,c
  4610   001368  102F               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4611   00136A  A4D8               	btfss	status,2,c
  4612   00136C  EFBA  F009         	goto	u3331
  4613   001370  EFBC  F009         	goto	u3330
  4614   001374                     u3331:
  4615   001374  EFC8  F009         	goto	l3491
  4616   001378                     u3330:
  4617   001378                     
  4618                           ;color_instructions.c: 130:         PinkInstructions(mL, mR);
  4619   001378  C030  F027         	movff	MoveBuggy@mL,PinkInstructions@mL
  4620   00137C  C031  F028         	movff	MoveBuggy@mL+1,PinkInstructions@mL+1
  4621   001380  C032  F029         	movff	MoveBuggy@mR,PinkInstructions@mR
  4622   001384  C033  F02A         	movff	MoveBuggy@mR+1,PinkInstructions@mR+1
  4623   001388  ECCE  F00D         	call	_PinkInstructions	;wreg free
  4624                           
  4625                           ;color_instructions.c: 131:     }
  4626   00138C  EFF4  F009         	goto	l587
  4627   001390                     l3491:
  4628   001390  0E06               	movlw	6
  4629   001392  182E               	xorwf	MoveBuggy@color_detected^0,w,c
  4630   001394  102F               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4631   001396  A4D8               	btfss	status,2,c
  4632   001398  EFD0  F009         	goto	u3341
  4633   00139C  EFD2  F009         	goto	u3340
  4634   0013A0                     u3341:
  4635   0013A0  EFDE  F009         	goto	l3495
  4636   0013A4                     u3340:
  4637   0013A4                     
  4638                           ;color_instructions.c: 133:         OrangeInstructions(mL, mR);
  4639   0013A4  C030  F027         	movff	MoveBuggy@mL,OrangeInstructions@mL
  4640   0013A8  C031  F028         	movff	MoveBuggy@mL+1,OrangeInstructions@mL+1
  4641   0013AC  C032  F029         	movff	MoveBuggy@mR,OrangeInstructions@mR
  4642   0013B0  C033  F02A         	movff	MoveBuggy@mR+1,OrangeInstructions@mR+1
  4643   0013B4  EC11  F00E         	call	_OrangeInstructions	;wreg free
  4644                           
  4645                           ;color_instructions.c: 134:     }
  4646   0013B8  EFF4  F009         	goto	l587
  4647   0013BC                     l3495:
  4648   0013BC  0E07               	movlw	7
  4649   0013BE  182E               	xorwf	MoveBuggy@color_detected^0,w,c
  4650   0013C0  102F               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4651   0013C2  A4D8               	btfss	status,2,c
  4652   0013C4  EFE6  F009         	goto	u3351
  4653   0013C8  EFE8  F009         	goto	u3350
  4654   0013CC                     u3351:
  4655   0013CC  EFF4  F009         	goto	l581
  4656   0013D0                     u3350:
  4657   0013D0                     
  4658                           ;color_instructions.c: 136:         LightBlueInstructions(mL, mR);
  4659   0013D0  C030  F027         	movff	MoveBuggy@mL,LightBlueInstructions@mL
  4660   0013D4  C031  F028         	movff	MoveBuggy@mL+1,LightBlueInstructions@mL+1
  4661   0013D8  C032  F029         	movff	MoveBuggy@mR,LightBlueInstructions@mR
  4662   0013DC  C033  F02A         	movff	MoveBuggy@mR+1,LightBlueInstructions@mR+1
  4663   0013E0  EC54  F00E         	call	_LightBlueInstructions	;wreg free
  4664   0013E4  EFF4  F009         	goto	l587
  4665   0013E8                     l581:
  4666   0013E8                     l587:
  4667   0013E8  0012               	return		;funcret
  4668   0013EA                     __end_of_MoveBuggy:
  4669                           	callstack 0
  4670                           
  4671 ;; *************** function _YellowInstructions *****************
  4672 ;; Defined at:
  4673 ;;		line 55 in file "color_instructions.c"
  4674 ;; Parameters:    Size  Location     Type
  4675 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  4676 ;;		 -> main@motorL(9), 
  4677 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  4678 ;;		 -> main@motorR(9), 
  4679 ;; Auto vars:     Size  Location     Type
  4680 ;;  a               1   44[COMRAM] unsigned char 
  4681 ;; Return value:  Size  Location     Type
  4682 ;;                  1    wreg      void 
  4683 ;; Registers used:
  4684 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4685 ;; Tracked objects:
  4686 ;;		On entry : 0/0
  4687 ;;		On exit  : 0/0
  4688 ;;		Unchanged: 0/0
  4689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4690 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4691 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4692 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4693 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4694 ;;Total ram usage:        7 bytes
  4695 ;; Hardware stack levels used: 1
  4696 ;; Hardware stack levels required when called: 11
  4697 ;; This function calls:
  4698 ;;		_fullSpeedBackwards
  4699 ;;		_stop
  4700 ;;		_turnRight90
  4701 ;; This function is called by:
  4702 ;;		_MoveBuggy
  4703 ;; This function uses a non-reentrant model
  4704 ;;
  4705                           
  4706                           	psect	text20
  4707   001A90                     __ptext20:
  4708                           	callstack 0
  4709   001A90                     _YellowInstructions:
  4710                           	callstack 18
  4711   001A90                     
  4712                           ;color_instructions.c: 57:     unsigned char a=0;
  4713   001A90  0E00               	movlw	0
  4714   001A92  6E2D               	movwf	YellowInstructions@a^0,c
  4715                           
  4716                           ;color_instructions.c: 58:     while (a<20){
  4717   001A94  EF57  F00D         	goto	l2809
  4718   001A98                     l2805:
  4719                           
  4720                           ;color_instructions.c: 59:         fullSpeedBackwards(mL, mR);
  4721   001A98  C027  F01C         	movff	YellowInstructions@mL,fullSpeedBackwards@mL
  4722   001A9C  C028  F01D         	movff	YellowInstructions@mL+1,fullSpeedBackwards@mL+1
  4723   001AA0  C029  F01E         	movff	YellowInstructions@mR,fullSpeedBackwards@mR
  4724   001AA4  C02A  F01F         	movff	YellowInstructions@mR+1,fullSpeedBackwards@mR+1
  4725   001AA8  ECD2  F00B         	call	_fullSpeedBackwards	;wreg free
  4726   001AAC                     
  4727                           ;color_instructions.c: 60:         a++;
  4728   001AAC  2A2D               	incf	YellowInstructions@a^0,f,c
  4729   001AAE                     l2809:
  4730                           
  4731                           ;color_instructions.c: 58:     while (a<20){
  4732   001AAE  0E13               	movlw	19
  4733   001AB0  642D               	cpfsgt	YellowInstructions@a^0,c
  4734   001AB2  EF5D  F00D         	goto	u2101
  4735   001AB6  EF5F  F00D         	goto	u2100
  4736   001ABA                     u2101:
  4737   001ABA  EF4C  F00D         	goto	l2805
  4738   001ABE                     u2100:
  4739   001ABE  EF6C  F00D         	goto	l2815
  4740   001AC2                     l2811:
  4741                           
  4742                           ;color_instructions.c: 63:         stop(mL, mR);
  4743   001AC2  C027  F01C         	movff	YellowInstructions@mL,stop@mL
  4744   001AC6  C028  F01D         	movff	YellowInstructions@mL+1,stop@mL+1
  4745   001ACA  C029  F01E         	movff	YellowInstructions@mR,stop@mR
  4746   001ACE  C02A  F01F         	movff	YellowInstructions@mR+1,stop@mR+1
  4747   001AD2  EC3D  F00C         	call	_stop	;wreg free
  4748   001AD6                     
  4749                           ;color_instructions.c: 64:         a--;
  4750   001AD6  062D               	decf	YellowInstructions@a^0,f,c
  4751   001AD8                     l2815:
  4752                           
  4753                           ;color_instructions.c: 62:     while (a>0){
  4754   001AD8  502D               	movf	YellowInstructions@a^0,w,c
  4755   001ADA  A4D8               	btfss	status,2,c
  4756   001ADC  EF72  F00D         	goto	u2111
  4757   001AE0  EF74  F00D         	goto	u2110
  4758   001AE4                     u2111:
  4759   001AE4  EF61  F00D         	goto	l2811
  4760   001AE8                     u2110:
  4761   001AE8                     
  4762                           ;color_instructions.c: 66:     _delay((unsigned long)((500)*(64000000/4000.0)));
  4763   001AE8  0E29               	movlw	41
  4764   001AEA  6E2C               	movwf	(??_YellowInstructions+1)^0,c
  4765   001AEC  0E96               	movlw	150
  4766   001AEE  6E2B               	movwf	??_YellowInstructions^0,c
  4767   001AF0  0E7F               	movlw	127
  4768   001AF2                     u4097:
  4769   001AF2  2EE8               	decfsz	wreg,f,c
  4770   001AF4  D7FE               	bra	u4097
  4771   001AF6  2E2B               	decfsz	??_YellowInstructions^0,f,c
  4772   001AF8  D7FC               	bra	u4097
  4773   001AFA  2E2C               	decfsz	(??_YellowInstructions+1)^0,f,c
  4774   001AFC  D7FA               	bra	u4097
  4775   001AFE  F000               	nop	
  4776   001B00                     
  4777                           ;color_instructions.c: 67:     turnRight90(mL, mR);
  4778   001B00  C027  F022         	movff	YellowInstructions@mL,turnRight90@mL
  4779   001B04  C028  F023         	movff	YellowInstructions@mL+1,turnRight90@mL+1
  4780   001B08  C029  F024         	movff	YellowInstructions@mR,turnRight90@mR
  4781   001B0C  C02A  F025         	movff	YellowInstructions@mR+1,turnRight90@mR+1
  4782   001B10  EC43  F00F         	call	_turnRight90	;wreg free
  4783   001B14  0012               	return		;funcret
  4784   001B16                     __end_of_YellowInstructions:
  4785                           	callstack 0
  4786                           
  4787 ;; *************** function _RedInstructions *****************
  4788 ;; Defined at:
  4789 ;;		line 8 in file "color_instructions.c"
  4790 ;; Parameters:    Size  Location     Type
  4791 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  4792 ;;		 -> main@motorL(9), 
  4793 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  4794 ;;		 -> main@motorR(9), 
  4795 ;; Auto vars:     Size  Location     Type
  4796 ;;  a               1   44[COMRAM] unsigned char 
  4797 ;; Return value:  Size  Location     Type
  4798 ;;                  1    wreg      void 
  4799 ;; Registers used:
  4800 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4801 ;; Tracked objects:
  4802 ;;		On entry : 0/0
  4803 ;;		On exit  : 0/0
  4804 ;;		Unchanged: 0/0
  4805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4806 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4807 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4808 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4809 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4810 ;;Total ram usage:        7 bytes
  4811 ;; Hardware stack levels used: 1
  4812 ;; Hardware stack levels required when called: 11
  4813 ;; This function calls:
  4814 ;;		_fullSpeedBackwards
  4815 ;;		_stop
  4816 ;;		_turnRight90
  4817 ;; This function is called by:
  4818 ;;		_MoveBuggy
  4819 ;; This function uses a non-reentrant model
  4820 ;;
  4821                           
  4822                           	psect	text21
  4823   001B16                     __ptext21:
  4824                           	callstack 0
  4825   001B16                     _RedInstructions:
  4826                           	callstack 18
  4827   001B16                     
  4828                           ;color_instructions.c: 10:     unsigned char a=0;
  4829   001B16  0E00               	movlw	0
  4830   001B18  6E2D               	movwf	RedInstructions@a^0,c
  4831                           
  4832                           ;color_instructions.c: 11:     while (a<8){
  4833   001B1A  EF9A  F00D         	goto	l2753
  4834   001B1E                     l2749:
  4835                           
  4836                           ;color_instructions.c: 12:         fullSpeedBackwards(mL, mR);
  4837   001B1E  C027  F01C         	movff	RedInstructions@mL,fullSpeedBackwards@mL
  4838   001B22  C028  F01D         	movff	RedInstructions@mL+1,fullSpeedBackwards@mL+1
  4839   001B26  C029  F01E         	movff	RedInstructions@mR,fullSpeedBackwards@mR
  4840   001B2A  C02A  F01F         	movff	RedInstructions@mR+1,fullSpeedBackwards@mR+1
  4841   001B2E  ECD2  F00B         	call	_fullSpeedBackwards	;wreg free
  4842   001B32                     
  4843                           ;color_instructions.c: 13:         a++;
  4844   001B32  2A2D               	incf	RedInstructions@a^0,f,c
  4845   001B34                     l2753:
  4846                           
  4847                           ;color_instructions.c: 11:     while (a<8){
  4848   001B34  0E07               	movlw	7
  4849   001B36  642D               	cpfsgt	RedInstructions@a^0,c
  4850   001B38  EFA0  F00D         	goto	u2041
  4851   001B3C  EFA2  F00D         	goto	u2040
  4852   001B40                     u2041:
  4853   001B40  EF8F  F00D         	goto	l2749
  4854   001B44                     u2040:
  4855   001B44  EFAF  F00D         	goto	l2759
  4856   001B48                     l2755:
  4857                           
  4858                           ;color_instructions.c: 16:         stop(mL, mR);
  4859   001B48  C027  F01C         	movff	RedInstructions@mL,stop@mL
  4860   001B4C  C028  F01D         	movff	RedInstructions@mL+1,stop@mL+1
  4861   001B50  C029  F01E         	movff	RedInstructions@mR,stop@mR
  4862   001B54  C02A  F01F         	movff	RedInstructions@mR+1,stop@mR+1
  4863   001B58  EC3D  F00C         	call	_stop	;wreg free
  4864   001B5C                     
  4865                           ;color_instructions.c: 17:         a--;
  4866   001B5C  062D               	decf	RedInstructions@a^0,f,c
  4867   001B5E                     l2759:
  4868                           
  4869                           ;color_instructions.c: 15:     while (a>0){
  4870   001B5E  502D               	movf	RedInstructions@a^0,w,c
  4871   001B60  A4D8               	btfss	status,2,c
  4872   001B62  EFB5  F00D         	goto	u2051
  4873   001B66  EFB7  F00D         	goto	u2050
  4874   001B6A                     u2051:
  4875   001B6A  EFA4  F00D         	goto	l2755
  4876   001B6E                     u2050:
  4877   001B6E                     
  4878                           ;color_instructions.c: 19:     _delay((unsigned long)((250)*(64000000/4000.0)));
  4879   001B6E  0E15               	movlw	21
  4880   001B70  6E2C               	movwf	(??_RedInstructions+1)^0,c
  4881   001B72  0E4B               	movlw	75
  4882   001B74  6E2B               	movwf	??_RedInstructions^0,c
  4883   001B76  0EBE               	movlw	190
  4884   001B78                     u4107:
  4885   001B78  2EE8               	decfsz	wreg,f,c
  4886   001B7A  D7FE               	bra	u4107
  4887   001B7C  2E2B               	decfsz	??_RedInstructions^0,f,c
  4888   001B7E  D7FC               	bra	u4107
  4889   001B80  2E2C               	decfsz	(??_RedInstructions+1)^0,f,c
  4890   001B82  D7FA               	bra	u4107
  4891   001B84  D000               	nop2	
  4892   001B86                     
  4893                           ;color_instructions.c: 20:     turnRight90(mL, mR);
  4894   001B86  C027  F022         	movff	RedInstructions@mL,turnRight90@mL
  4895   001B8A  C028  F023         	movff	RedInstructions@mL+1,turnRight90@mL+1
  4896   001B8E  C029  F024         	movff	RedInstructions@mR,turnRight90@mR
  4897   001B92  C02A  F025         	movff	RedInstructions@mR+1,turnRight90@mR+1
  4898   001B96  EC43  F00F         	call	_turnRight90	;wreg free
  4899   001B9A  0012               	return		;funcret
  4900   001B9C                     __end_of_RedInstructions:
  4901                           	callstack 0
  4902                           
  4903 ;; *************** function _turnRight90 *****************
  4904 ;; Defined at:
  4905 ;;		line 277 in file "dc_motor.c"
  4906 ;; Parameters:    Size  Location     Type
  4907 ;;  mL              2   33[COMRAM] PTR struct DC_motor
  4908 ;;		 -> main@motorL(9), 
  4909 ;;  mR              2   35[COMRAM] PTR struct DC_motor
  4910 ;;		 -> main@motorR(9), 
  4911 ;; Auto vars:     Size  Location     Type
  4912 ;;  a               1   37[COMRAM] unsigned char 
  4913 ;; Return value:  Size  Location     Type
  4914 ;;                  1    wreg      void 
  4915 ;; Registers used:
  4916 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4917 ;; Tracked objects:
  4918 ;;		On entry : 0/0
  4919 ;;		On exit  : 0/0
  4920 ;;		Unchanged: 0/0
  4921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4922 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4923 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4925 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4926 ;;Total ram usage:        5 bytes
  4927 ;; Hardware stack levels used: 1
  4928 ;; Hardware stack levels required when called: 10
  4929 ;; This function calls:
  4930 ;;		_stop
  4931 ;;		_turnRight
  4932 ;; This function is called by:
  4933 ;;		_RedInstructions
  4934 ;;		_YellowInstructions
  4935 ;; This function uses a non-reentrant model
  4936 ;;
  4937                           
  4938                           	psect	text22
  4939   001E86                     __ptext22:
  4940                           	callstack 0
  4941   001E86                     _turnRight90:
  4942                           	callstack 18
  4943   001E86                     
  4944                           ;dc_motor.c: 279:     unsigned char a=0;
  4945   001E86  0E00               	movlw	0
  4946   001E88  6E26               	movwf	turnRight90@a^0,c
  4947                           
  4948                           ;dc_motor.c: 280:     while(a<19){
  4949   001E8A  EF52  F00F         	goto	l2657
  4950   001E8E                     l2653:
  4951                           
  4952                           ;dc_motor.c: 281:         turnRight(mL, mR);
  4953   001E8E  C022  F01C         	movff	turnRight90@mL,turnRight@mL
  4954   001E92  C023  F01D         	movff	turnRight90@mL+1,turnRight@mL+1
  4955   001E96  C024  F01E         	movff	turnRight90@mR,turnRight@mR
  4956   001E9A  C025  F01F         	movff	turnRight90@mR+1,turnRight@mR+1
  4957   001E9E  EC79  F00A         	call	_turnRight	;wreg free
  4958   001EA2                     
  4959                           ;dc_motor.c: 282:         a++;
  4960   001EA2  2A26               	incf	turnRight90@a^0,f,c
  4961   001EA4                     l2657:
  4962                           
  4963                           ;dc_motor.c: 280:     while(a<19){
  4964   001EA4  0E12               	movlw	18
  4965   001EA6  6426               	cpfsgt	turnRight90@a^0,c
  4966   001EA8  EF58  F00F         	goto	u1981
  4967   001EAC  EF5A  F00F         	goto	u1980
  4968   001EB0                     u1981:
  4969   001EB0  EF47  F00F         	goto	l2653
  4970   001EB4                     u1980:
  4971   001EB4  EF67  F00F         	goto	l2663
  4972   001EB8                     l2659:
  4973                           
  4974                           ;dc_motor.c: 285:         stop(mL, mR);
  4975   001EB8  C022  F01C         	movff	turnRight90@mL,stop@mL
  4976   001EBC  C023  F01D         	movff	turnRight90@mL+1,stop@mL+1
  4977   001EC0  C024  F01E         	movff	turnRight90@mR,stop@mR
  4978   001EC4  C025  F01F         	movff	turnRight90@mR+1,stop@mR+1
  4979   001EC8  EC3D  F00C         	call	_stop	;wreg free
  4980   001ECC                     
  4981                           ;dc_motor.c: 286:         a--;
  4982   001ECC  0626               	decf	turnRight90@a^0,f,c
  4983   001ECE                     l2663:
  4984                           
  4985                           ;dc_motor.c: 284:     while(a>0){
  4986   001ECE  5026               	movf	turnRight90@a^0,w,c
  4987   001ED0  A4D8               	btfss	status,2,c
  4988   001ED2  EF6D  F00F         	goto	u1991
  4989   001ED6  EF6F  F00F         	goto	u1990
  4990   001EDA                     u1991:
  4991   001EDA  EF5C  F00F         	goto	l2659
  4992   001EDE                     u1990:
  4993   001EDE  0012               	return		;funcret
  4994   001EE0                     __end_of_turnRight90:
  4995                           	callstack 0
  4996                           
  4997 ;; *************** function _PinkInstructions *****************
  4998 ;; Defined at:
  4999 ;;		line 70 in file "color_instructions.c"
  5000 ;; Parameters:    Size  Location     Type
  5001 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  5002 ;;		 -> main@motorL(9), 
  5003 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  5004 ;;		 -> main@motorR(9), 
  5005 ;; Auto vars:     Size  Location     Type
  5006 ;;  a               1   44[COMRAM] unsigned char 
  5007 ;; Return value:  Size  Location     Type
  5008 ;;                  1    wreg      void 
  5009 ;; Registers used:
  5010 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5011 ;; Tracked objects:
  5012 ;;		On entry : 0/0
  5013 ;;		On exit  : 0/0
  5014 ;;		Unchanged: 0/0
  5015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5016 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5017 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5018 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5019 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5020 ;;Total ram usage:        7 bytes
  5021 ;; Hardware stack levels used: 1
  5022 ;; Hardware stack levels required when called: 11
  5023 ;; This function calls:
  5024 ;;		_fullSpeedBackwards
  5025 ;;		_stop
  5026 ;;		_turnLeft90
  5027 ;; This function is called by:
  5028 ;;		_MoveBuggy
  5029 ;; This function uses a non-reentrant model
  5030 ;;
  5031                           
  5032                           	psect	text23
  5033   001B9C                     __ptext23:
  5034                           	callstack 0
  5035   001B9C                     _PinkInstructions:
  5036                           	callstack 18
  5037   001B9C                     
  5038                           ;color_instructions.c: 71:     unsigned char a=0;
  5039   001B9C  0E00               	movlw	0
  5040   001B9E  6E2D               	movwf	PinkInstructions@a^0,c
  5041                           
  5042                           ;color_instructions.c: 72:     while (a<20){
  5043   001BA0  EFDD  F00D         	goto	l2827
  5044   001BA4                     l2823:
  5045                           
  5046                           ;color_instructions.c: 73:         fullSpeedBackwards(mL, mR);
  5047   001BA4  C027  F01C         	movff	PinkInstructions@mL,fullSpeedBackwards@mL
  5048   001BA8  C028  F01D         	movff	PinkInstructions@mL+1,fullSpeedBackwards@mL+1
  5049   001BAC  C029  F01E         	movff	PinkInstructions@mR,fullSpeedBackwards@mR
  5050   001BB0  C02A  F01F         	movff	PinkInstructions@mR+1,fullSpeedBackwards@mR+1
  5051   001BB4  ECD2  F00B         	call	_fullSpeedBackwards	;wreg free
  5052   001BB8                     
  5053                           ;color_instructions.c: 74:         a++;
  5054   001BB8  2A2D               	incf	PinkInstructions@a^0,f,c
  5055   001BBA                     l2827:
  5056                           
  5057                           ;color_instructions.c: 72:     while (a<20){
  5058   001BBA  0E13               	movlw	19
  5059   001BBC  642D               	cpfsgt	PinkInstructions@a^0,c
  5060   001BBE  EFE3  F00D         	goto	u2121
  5061   001BC2  EFE5  F00D         	goto	u2120
  5062   001BC6                     u2121:
  5063   001BC6  EFD2  F00D         	goto	l2823
  5064   001BCA                     u2120:
  5065   001BCA  EFF2  F00D         	goto	l2833
  5066   001BCE                     l2829:
  5067                           
  5068                           ;color_instructions.c: 77:         stop(mL, mR);
  5069   001BCE  C027  F01C         	movff	PinkInstructions@mL,stop@mL
  5070   001BD2  C028  F01D         	movff	PinkInstructions@mL+1,stop@mL+1
  5071   001BD6  C029  F01E         	movff	PinkInstructions@mR,stop@mR
  5072   001BDA  C02A  F01F         	movff	PinkInstructions@mR+1,stop@mR+1
  5073   001BDE  EC3D  F00C         	call	_stop	;wreg free
  5074   001BE2                     
  5075                           ;color_instructions.c: 78:         a--;
  5076   001BE2  062D               	decf	PinkInstructions@a^0,f,c
  5077   001BE4                     l2833:
  5078                           
  5079                           ;color_instructions.c: 76:     while (a>0){
  5080   001BE4  502D               	movf	PinkInstructions@a^0,w,c
  5081   001BE6  A4D8               	btfss	status,2,c
  5082   001BE8  EFF8  F00D         	goto	u2131
  5083   001BEC  EFFA  F00D         	goto	u2130
  5084   001BF0                     u2131:
  5085   001BF0  EFE7  F00D         	goto	l2829
  5086   001BF4                     u2130:
  5087   001BF4                     
  5088                           ;color_instructions.c: 80:     _delay((unsigned long)((500)*(64000000/4000.0)));
  5089   001BF4  0E29               	movlw	41
  5090   001BF6  6E2C               	movwf	(??_PinkInstructions+1)^0,c
  5091   001BF8  0E96               	movlw	150
  5092   001BFA  6E2B               	movwf	??_PinkInstructions^0,c
  5093   001BFC  0E7F               	movlw	127
  5094   001BFE                     u4117:
  5095   001BFE  2EE8               	decfsz	wreg,f,c
  5096   001C00  D7FE               	bra	u4117
  5097   001C02  2E2B               	decfsz	??_PinkInstructions^0,f,c
  5098   001C04  D7FC               	bra	u4117
  5099   001C06  2E2C               	decfsz	(??_PinkInstructions+1)^0,f,c
  5100   001C08  D7FA               	bra	u4117
  5101   001C0A  F000               	nop	
  5102   001C0C                     
  5103                           ;color_instructions.c: 81:     turnLeft90(mL, mR);
  5104   001C0C  C027  F022         	movff	PinkInstructions@mL,turnLeft90@mL
  5105   001C10  C028  F023         	movff	PinkInstructions@mL+1,turnLeft90@mL+1
  5106   001C14  C029  F024         	movff	PinkInstructions@mR,turnLeft90@mR
  5107   001C18  C02A  F025         	movff	PinkInstructions@mR+1,turnLeft90@mR+1
  5108   001C1C  ECCA  F00F         	call	_turnLeft90	;wreg free
  5109   001C20  0012               	return		;funcret
  5110   001C22                     __end_of_PinkInstructions:
  5111                           	callstack 0
  5112                           
  5113 ;; *************** function _OrangeInstructions *****************
  5114 ;; Defined at:
  5115 ;;		line 85 in file "color_instructions.c"
  5116 ;; Parameters:    Size  Location     Type
  5117 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  5118 ;;		 -> main@motorL(9), 
  5119 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  5120 ;;		 -> main@motorR(9), 
  5121 ;; Auto vars:     Size  Location     Type
  5122 ;;  a               1   44[COMRAM] unsigned char 
  5123 ;; Return value:  Size  Location     Type
  5124 ;;                  1    wreg      void 
  5125 ;; Registers used:
  5126 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5127 ;; Tracked objects:
  5128 ;;		On entry : 0/0
  5129 ;;		On exit  : 0/0
  5130 ;;		Unchanged: 0/0
  5131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5132 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5133 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5134 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5135 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5136 ;;Total ram usage:        7 bytes
  5137 ;; Hardware stack levels used: 1
  5138 ;; Hardware stack levels required when called: 11
  5139 ;; This function calls:
  5140 ;;		_fullSpeedBackwards
  5141 ;;		_stop
  5142 ;;		_turnRight135
  5143 ;; This function is called by:
  5144 ;;		_MoveBuggy
  5145 ;; This function uses a non-reentrant model
  5146 ;;
  5147                           
  5148                           	psect	text24
  5149   001C22                     __ptext24:
  5150                           	callstack 0
  5151   001C22                     _OrangeInstructions:
  5152                           	callstack 18
  5153   001C22                     
  5154                           ;color_instructions.c: 86:     unsigned char a=0;
  5155   001C22  0E00               	movlw	0
  5156   001C24  6E2D               	movwf	OrangeInstructions@a^0,c
  5157                           
  5158                           ;color_instructions.c: 87:     while (a<30){
  5159   001C26  EF20  F00E         	goto	l2845
  5160   001C2A                     l2841:
  5161                           
  5162                           ;color_instructions.c: 88:         fullSpeedBackwards(mL, mR);
  5163   001C2A  C027  F01C         	movff	OrangeInstructions@mL,fullSpeedBackwards@mL
  5164   001C2E  C028  F01D         	movff	OrangeInstructions@mL+1,fullSpeedBackwards@mL+1
  5165   001C32  C029  F01E         	movff	OrangeInstructions@mR,fullSpeedBackwards@mR
  5166   001C36  C02A  F01F         	movff	OrangeInstructions@mR+1,fullSpeedBackwards@mR+1
  5167   001C3A  ECD2  F00B         	call	_fullSpeedBackwards	;wreg free
  5168   001C3E                     
  5169                           ;color_instructions.c: 89:         a++;
  5170   001C3E  2A2D               	incf	OrangeInstructions@a^0,f,c
  5171   001C40                     l2845:
  5172                           
  5173                           ;color_instructions.c: 87:     while (a<30){
  5174   001C40  0E1D               	movlw	29
  5175   001C42  642D               	cpfsgt	OrangeInstructions@a^0,c
  5176   001C44  EF26  F00E         	goto	u2141
  5177   001C48  EF28  F00E         	goto	u2140
  5178   001C4C                     u2141:
  5179   001C4C  EF15  F00E         	goto	l2841
  5180   001C50                     u2140:
  5181   001C50  EF35  F00E         	goto	l2851
  5182   001C54                     l2847:
  5183                           
  5184                           ;color_instructions.c: 92:         stop(mL, mR);
  5185   001C54  C027  F01C         	movff	OrangeInstructions@mL,stop@mL
  5186   001C58  C028  F01D         	movff	OrangeInstructions@mL+1,stop@mL+1
  5187   001C5C  C029  F01E         	movff	OrangeInstructions@mR,stop@mR
  5188   001C60  C02A  F01F         	movff	OrangeInstructions@mR+1,stop@mR+1
  5189   001C64  EC3D  F00C         	call	_stop	;wreg free
  5190   001C68                     
  5191                           ;color_instructions.c: 93:         a--;
  5192   001C68  062D               	decf	OrangeInstructions@a^0,f,c
  5193   001C6A                     l2851:
  5194                           
  5195                           ;color_instructions.c: 91:     while (a>0){
  5196   001C6A  502D               	movf	OrangeInstructions@a^0,w,c
  5197   001C6C  A4D8               	btfss	status,2,c
  5198   001C6E  EF3B  F00E         	goto	u2151
  5199   001C72  EF3D  F00E         	goto	u2150
  5200   001C76                     u2151:
  5201   001C76  EF2A  F00E         	goto	l2847
  5202   001C7A                     u2150:
  5203   001C7A                     
  5204                           ;color_instructions.c: 95:     _delay((unsigned long)((500)*(64000000/4000.0)));
  5205   001C7A  0E29               	movlw	41
  5206   001C7C  6E2C               	movwf	(??_OrangeInstructions+1)^0,c
  5207   001C7E  0E96               	movlw	150
  5208   001C80  6E2B               	movwf	??_OrangeInstructions^0,c
  5209   001C82  0E7F               	movlw	127
  5210   001C84                     u4127:
  5211   001C84  2EE8               	decfsz	wreg,f,c
  5212   001C86  D7FE               	bra	u4127
  5213   001C88  2E2B               	decfsz	??_OrangeInstructions^0,f,c
  5214   001C8A  D7FC               	bra	u4127
  5215   001C8C  2E2C               	decfsz	(??_OrangeInstructions+1)^0,f,c
  5216   001C8E  D7FA               	bra	u4127
  5217   001C90  F000               	nop	
  5218   001C92                     
  5219                           ;color_instructions.c: 97:     turnRight135(mL, mR);
  5220   001C92  C027  F022         	movff	OrangeInstructions@mL,turnRight135@mL
  5221   001C96  C028  F023         	movff	OrangeInstructions@mL+1,turnRight135@mL+1
  5222   001C9A  C029  F024         	movff	OrangeInstructions@mR,turnRight135@mR
  5223   001C9E  C02A  F025         	movff	OrangeInstructions@mR+1,turnRight135@mR+1
  5224   001CA2  EC70  F00F         	call	_turnRight135	;wreg free
  5225   001CA6  0012               	return		;funcret
  5226   001CA8                     __end_of_OrangeInstructions:
  5227                           	callstack 0
  5228                           
  5229 ;; *************** function _turnRight135 *****************
  5230 ;; Defined at:
  5231 ;;		line 303 in file "dc_motor.c"
  5232 ;; Parameters:    Size  Location     Type
  5233 ;;  mL              2   33[COMRAM] PTR struct DC_motor
  5234 ;;		 -> main@motorL(9), 
  5235 ;;  mR              2   35[COMRAM] PTR struct DC_motor
  5236 ;;		 -> main@motorR(9), 
  5237 ;; Auto vars:     Size  Location     Type
  5238 ;;  a               1   37[COMRAM] unsigned char 
  5239 ;; Return value:  Size  Location     Type
  5240 ;;                  1    wreg      void 
  5241 ;; Registers used:
  5242 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5243 ;; Tracked objects:
  5244 ;;		On entry : 0/0
  5245 ;;		On exit  : 0/0
  5246 ;;		Unchanged: 0/0
  5247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5248 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5249 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5251 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5252 ;;Total ram usage:        5 bytes
  5253 ;; Hardware stack levels used: 1
  5254 ;; Hardware stack levels required when called: 10
  5255 ;; This function calls:
  5256 ;;		_stop
  5257 ;;		_turnRight
  5258 ;; This function is called by:
  5259 ;;		_OrangeInstructions
  5260 ;; This function uses a non-reentrant model
  5261 ;;
  5262                           
  5263                           	psect	text25
  5264   001EE0                     __ptext25:
  5265                           	callstack 0
  5266   001EE0                     _turnRight135:
  5267                           	callstack 18
  5268   001EE0                     
  5269                           ;dc_motor.c: 305:     unsigned char a=0;
  5270   001EE0  0E00               	movlw	0
  5271   001EE2  6E26               	movwf	turnRight135@a^0,c
  5272                           
  5273                           ;dc_motor.c: 306:     while(a<69){
  5274   001EE4  EF7F  F00F         	goto	l2671
  5275   001EE8                     l2667:
  5276                           
  5277                           ;dc_motor.c: 307:         turnRight(mL, mR);
  5278   001EE8  C022  F01C         	movff	turnRight135@mL,turnRight@mL
  5279   001EEC  C023  F01D         	movff	turnRight135@mL+1,turnRight@mL+1
  5280   001EF0  C024  F01E         	movff	turnRight135@mR,turnRight@mR
  5281   001EF4  C025  F01F         	movff	turnRight135@mR+1,turnRight@mR+1
  5282   001EF8  EC79  F00A         	call	_turnRight	;wreg free
  5283   001EFC                     
  5284                           ;dc_motor.c: 308:         a++;
  5285   001EFC  2A26               	incf	turnRight135@a^0,f,c
  5286   001EFE                     l2671:
  5287                           
  5288                           ;dc_motor.c: 306:     while(a<69){
  5289   001EFE  0E44               	movlw	68
  5290   001F00  6426               	cpfsgt	turnRight135@a^0,c
  5291   001F02  EF85  F00F         	goto	u2001
  5292   001F06  EF87  F00F         	goto	u2000
  5293   001F0A                     u2001:
  5294   001F0A  EF74  F00F         	goto	l2667
  5295   001F0E                     u2000:
  5296   001F0E  EF94  F00F         	goto	l2677
  5297   001F12                     l2673:
  5298                           
  5299                           ;dc_motor.c: 311:         stop(mL, mR);
  5300   001F12  C022  F01C         	movff	turnRight135@mL,stop@mL
  5301   001F16  C023  F01D         	movff	turnRight135@mL+1,stop@mL+1
  5302   001F1A  C024  F01E         	movff	turnRight135@mR,stop@mR
  5303   001F1E  C025  F01F         	movff	turnRight135@mR+1,stop@mR+1
  5304   001F22  EC3D  F00C         	call	_stop	;wreg free
  5305   001F26                     
  5306                           ;dc_motor.c: 312:         a--;
  5307   001F26  0626               	decf	turnRight135@a^0,f,c
  5308   001F28                     l2677:
  5309                           
  5310                           ;dc_motor.c: 310:     while(a>0){
  5311   001F28  5026               	movf	turnRight135@a^0,w,c
  5312   001F2A  A4D8               	btfss	status,2,c
  5313   001F2C  EF9A  F00F         	goto	u2011
  5314   001F30  EF9C  F00F         	goto	u2010
  5315   001F34                     u2011:
  5316   001F34  EF89  F00F         	goto	l2673
  5317   001F38                     u2010:
  5318   001F38  0012               	return		;funcret
  5319   001F3A                     __end_of_turnRight135:
  5320                           	callstack 0
  5321                           
  5322 ;; *************** function _turnRight *****************
  5323 ;; Defined at:
  5324 ;;		line 193 in file "dc_motor.c"
  5325 ;; Parameters:    Size  Location     Type
  5326 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  5327 ;;		 -> main@motorL(9), 
  5328 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  5329 ;;		 -> main@motorR(9), 
  5330 ;; Auto vars:     Size  Location     Type
  5331 ;;		None
  5332 ;; Return value:  Size  Location     Type
  5333 ;;                  1    wreg      void 
  5334 ;; Registers used:
  5335 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5336 ;; Tracked objects:
  5337 ;;		On entry : 0/0
  5338 ;;		On exit  : 0/0
  5339 ;;		Unchanged: 0/0
  5340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5341 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5343 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5344 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5345 ;;Total ram usage:        6 bytes
  5346 ;; Hardware stack levels used: 1
  5347 ;; Hardware stack levels required when called: 9
  5348 ;; This function calls:
  5349 ;;		_setMotorPWM
  5350 ;; This function is called by:
  5351 ;;		_turnRight90
  5352 ;;		_turnRight135
  5353 ;;		_turn180
  5354 ;; This function uses a non-reentrant model
  5355 ;;
  5356                           
  5357                           	psect	text26
  5358   0014F2                     __ptext26:
  5359                           	callstack 0
  5360   0014F2                     _turnRight:
  5361                           	callstack 18
  5362   0014F2                     
  5363                           ;dc_motor.c: 193: void turnRight(DC_motor *mL, DC_motor *mR);dc_motor.c: 194: {;dc_motor
      +                          .c: 196:     mL->direction = 1;
  5364   0014F2  EE20 F001          	lfsr	2,1
  5365   0014F6  501C               	movf	turnRight@mL^0,w,c
  5366   0014F8  26D9               	addwf	fsr2l,f,c
  5367   0014FA  501D               	movf	(turnRight@mL+1)^0,w,c
  5368   0014FC  22DA               	addwfc	fsr2h,f,c
  5369   0014FE  0E01               	movlw	1
  5370   001500  6EDF               	movwf	indf2,c
  5371                           
  5372                           ;dc_motor.c: 197:     mL->brakemode = 0;
  5373   001502  EE20 F002          	lfsr	2,2
  5374   001506  501C               	movf	turnRight@mL^0,w,c
  5375   001508  26D9               	addwf	fsr2l,f,c
  5376   00150A  501D               	movf	(turnRight@mL+1)^0,w,c
  5377   00150C  22DA               	addwfc	fsr2h,f,c
  5378   00150E  0E00               	movlw	0
  5379   001510  6EDF               	movwf	indf2,c
  5380                           
  5381                           ;dc_motor.c: 199:     mR->direction = 0;
  5382   001512  EE20 F001          	lfsr	2,1
  5383   001516  501E               	movf	turnRight@mR^0,w,c
  5384   001518  26D9               	addwf	fsr2l,f,c
  5385   00151A  501F               	movf	(turnRight@mR+1)^0,w,c
  5386   00151C  22DA               	addwfc	fsr2h,f,c
  5387   00151E  0E00               	movlw	0
  5388   001520  6EDF               	movwf	indf2,c
  5389                           
  5390                           ;dc_motor.c: 200:     mR->brakemode = 0;
  5391   001522  EE20 F002          	lfsr	2,2
  5392   001526  501E               	movf	turnRight@mR^0,w,c
  5393   001528  26D9               	addwf	fsr2l,f,c
  5394   00152A  501F               	movf	(turnRight@mR+1)^0,w,c
  5395   00152C  22DA               	addwfc	fsr2h,f,c
  5396   00152E  0E00               	movlw	0
  5397   001530  6EDF               	movwf	indf2,c
  5398                           
  5399                           ;dc_motor.c: 203:     if(mL->power>75){mL->power=75;}
  5400   001532  C01C  FFD9         	movff	turnRight@mL,fsr2l
  5401   001536  C01D  FFDA         	movff	turnRight@mL+1,fsr2h
  5402   00153A  50DF               	movf	indf2,w,c
  5403   00153C  0A80               	xorlw	128
  5404   00153E  0F34               	addlw	-204
  5405   001540  A0D8               	btfss	status,0,c
  5406   001542  EFA5  F00A         	goto	u1901
  5407   001546  EFA7  F00A         	goto	u1900
  5408   00154A                     u1901:
  5409   00154A  EFAD  F00A         	goto	l2575
  5410   00154E                     u1900:
  5411   00154E  C01C  FFD9         	movff	turnRight@mL,fsr2l
  5412   001552  C01D  FFDA         	movff	turnRight@mL+1,fsr2h
  5413   001556  0E4B               	movlw	75
  5414   001558  6EDF               	movwf	indf2,c
  5415   00155A                     l2575:
  5416                           
  5417                           ;dc_motor.c: 204:     if(mR->power>75){mR->power=75;}
  5418   00155A  C01E  FFD9         	movff	turnRight@mR,fsr2l
  5419   00155E  C01F  FFDA         	movff	turnRight@mR+1,fsr2h
  5420   001562  50DF               	movf	indf2,w,c
  5421   001564  0A80               	xorlw	128
  5422   001566  0F34               	addlw	-204
  5423   001568  A0D8               	btfss	status,0,c
  5424   00156A  EFB9  F00A         	goto	u1911
  5425   00156E  EFBB  F00A         	goto	u1910
  5426   001572                     u1911:
  5427   001572  EFC1  F00A         	goto	l2579
  5428   001576                     u1910:
  5429   001576  C01E  FFD9         	movff	turnRight@mR,fsr2l
  5430   00157A  C01F  FFDA         	movff	turnRight@mR+1,fsr2h
  5431   00157E  0E4B               	movlw	75
  5432   001580  6EDF               	movwf	indf2,c
  5433   001582                     l2579:
  5434                           
  5435                           ;dc_motor.c: 206:     mL->power = mL->power + 5 ;
  5436   001582  C01C  FFD9         	movff	turnRight@mL,fsr2l
  5437   001586  C01D  FFDA         	movff	turnRight@mL+1,fsr2h
  5438   00158A  50DF               	movf	indf2,w,c
  5439   00158C  0F05               	addlw	5
  5440   00158E  C01C  FFD9         	movff	turnRight@mL,fsr2l
  5441   001592  C01D  FFDA         	movff	turnRight@mL+1,fsr2h
  5442   001596  6EDF               	movwf	indf2,c
  5443   001598                     
  5444                           ;dc_motor.c: 207:     mR->power = mR->power + 5;
  5445   001598  C01E  FFD9         	movff	turnRight@mR,fsr2l
  5446   00159C  C01F  FFDA         	movff	turnRight@mR+1,fsr2h
  5447   0015A0  50DF               	movf	indf2,w,c
  5448   0015A2  0F05               	addlw	5
  5449   0015A4  C01E  FFD9         	movff	turnRight@mR,fsr2l
  5450   0015A8  C01F  FFDA         	movff	turnRight@mR+1,fsr2h
  5451   0015AC  6EDF               	movwf	indf2,c
  5452   0015AE                     
  5453                           ;dc_motor.c: 209:     setMotorPWM(mL);
  5454   0015AE  C01C  F016         	movff	turnRight@mL,setMotorPWM@m
  5455   0015B2  C01D  F017         	movff	turnRight@mL+1,setMotorPWM@m+1
  5456   0015B6  ECF8  F007         	call	_setMotorPWM	;wreg free
  5457   0015BA                     
  5458                           ;dc_motor.c: 210:     setMotorPWM(mR);
  5459   0015BA  C01E  F016         	movff	turnRight@mR,setMotorPWM@m
  5460   0015BE  C01F  F017         	movff	turnRight@mR+1,setMotorPWM@m+1
  5461   0015C2  ECF8  F007         	call	_setMotorPWM	;wreg free
  5462   0015C6                     
  5463                           ;dc_motor.c: 211:     _delay((unsigned long)((50)*(64000000/4000.0)));
  5464   0015C6  0E05               	movlw	5
  5465   0015C8  6E21               	movwf	(??_turnRight+1)^0,c
  5466   0015CA  0E0F               	movlw	15
  5467   0015CC  6E20               	movwf	??_turnRight^0,c
  5468   0015CE  0EF1               	movlw	241
  5469   0015D0                     u4137:
  5470   0015D0  2EE8               	decfsz	wreg,f,c
  5471   0015D2  D7FE               	bra	u4137
  5472   0015D4  2E20               	decfsz	??_turnRight^0,f,c
  5473   0015D6  D7FC               	bra	u4137
  5474   0015D8  2E21               	decfsz	(??_turnRight+1)^0,f,c
  5475   0015DA  D7FA               	bra	u4137
  5476   0015DC  F000               	nop	
  5477   0015DE  0012               	return		;funcret
  5478   0015E0                     __end_of_turnRight:
  5479                           	callstack 0
  5480                           
  5481 ;; *************** function _LightBlueInstructions *****************
  5482 ;; Defined at:
  5483 ;;		line 100 in file "color_instructions.c"
  5484 ;; Parameters:    Size  Location     Type
  5485 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  5486 ;;		 -> main@motorL(9), 
  5487 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  5488 ;;		 -> main@motorR(9), 
  5489 ;; Auto vars:     Size  Location     Type
  5490 ;;  a               1   44[COMRAM] unsigned char 
  5491 ;; Return value:  Size  Location     Type
  5492 ;;                  1    wreg      void 
  5493 ;; Registers used:
  5494 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5495 ;; Tracked objects:
  5496 ;;		On entry : 0/0
  5497 ;;		On exit  : 0/0
  5498 ;;		Unchanged: 0/0
  5499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5500 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5501 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5502 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5503 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5504 ;;Total ram usage:        7 bytes
  5505 ;; Hardware stack levels used: 1
  5506 ;; Hardware stack levels required when called: 11
  5507 ;; This function calls:
  5508 ;;		_fullSpeedBackwards
  5509 ;;		_stop
  5510 ;;		_turnLeft135
  5511 ;; This function is called by:
  5512 ;;		_MoveBuggy
  5513 ;; This function uses a non-reentrant model
  5514 ;;
  5515                           
  5516                           	psect	text27
  5517   001CA8                     __ptext27:
  5518                           	callstack 0
  5519   001CA8                     _LightBlueInstructions:
  5520                           	callstack 18
  5521   001CA8                     
  5522                           ;color_instructions.c: 101:     unsigned char a=0;
  5523   001CA8  0E00               	movlw	0
  5524   001CAA  6E2D               	movwf	LightBlueInstructions@a^0,c
  5525                           
  5526                           ;color_instructions.c: 102:     while (a<30){
  5527   001CAC  EF63  F00E         	goto	l2863
  5528   001CB0                     l2859:
  5529                           
  5530                           ;color_instructions.c: 103:         fullSpeedBackwards(mL, mR);
  5531   001CB0  C027  F01C         	movff	LightBlueInstructions@mL,fullSpeedBackwards@mL
  5532   001CB4  C028  F01D         	movff	LightBlueInstructions@mL+1,fullSpeedBackwards@mL+1
  5533   001CB8  C029  F01E         	movff	LightBlueInstructions@mR,fullSpeedBackwards@mR
  5534   001CBC  C02A  F01F         	movff	LightBlueInstructions@mR+1,fullSpeedBackwards@mR+1
  5535   001CC0  ECD2  F00B         	call	_fullSpeedBackwards	;wreg free
  5536   001CC4                     
  5537                           ;color_instructions.c: 104:         a++;
  5538   001CC4  2A2D               	incf	LightBlueInstructions@a^0,f,c
  5539   001CC6                     l2863:
  5540                           
  5541                           ;color_instructions.c: 102:     while (a<30){
  5542   001CC6  0E1D               	movlw	29
  5543   001CC8  642D               	cpfsgt	LightBlueInstructions@a^0,c
  5544   001CCA  EF69  F00E         	goto	u2161
  5545   001CCE  EF6B  F00E         	goto	u2160
  5546   001CD2                     u2161:
  5547   001CD2  EF58  F00E         	goto	l2859
  5548   001CD6                     u2160:
  5549   001CD6  EF78  F00E         	goto	l2869
  5550   001CDA                     l2865:
  5551                           
  5552                           ;color_instructions.c: 107:         stop(mL, mR);
  5553   001CDA  C027  F01C         	movff	LightBlueInstructions@mL,stop@mL
  5554   001CDE  C028  F01D         	movff	LightBlueInstructions@mL+1,stop@mL+1
  5555   001CE2  C029  F01E         	movff	LightBlueInstructions@mR,stop@mR
  5556   001CE6  C02A  F01F         	movff	LightBlueInstructions@mR+1,stop@mR+1
  5557   001CEA  EC3D  F00C         	call	_stop	;wreg free
  5558   001CEE                     
  5559                           ;color_instructions.c: 108:         a--;
  5560   001CEE  062D               	decf	LightBlueInstructions@a^0,f,c
  5561   001CF0                     l2869:
  5562                           
  5563                           ;color_instructions.c: 106:     while (a>0){
  5564   001CF0  502D               	movf	LightBlueInstructions@a^0,w,c
  5565   001CF2  A4D8               	btfss	status,2,c
  5566   001CF4  EF7E  F00E         	goto	u2171
  5567   001CF8  EF80  F00E         	goto	u2170
  5568   001CFC                     u2171:
  5569   001CFC  EF6D  F00E         	goto	l2865
  5570   001D00                     u2170:
  5571   001D00                     
  5572                           ;color_instructions.c: 110:     _delay((unsigned long)((500)*(64000000/4000.0)));
  5573   001D00  0E29               	movlw	41
  5574   001D02  6E2C               	movwf	(??_LightBlueInstructions+1)^0,c
  5575   001D04  0E96               	movlw	150
  5576   001D06  6E2B               	movwf	??_LightBlueInstructions^0,c
  5577   001D08  0E7F               	movlw	127
  5578   001D0A                     u4147:
  5579   001D0A  2EE8               	decfsz	wreg,f,c
  5580   001D0C  D7FE               	bra	u4147
  5581   001D0E  2E2B               	decfsz	??_LightBlueInstructions^0,f,c
  5582   001D10  D7FC               	bra	u4147
  5583   001D12  2E2C               	decfsz	(??_LightBlueInstructions+1)^0,f,c
  5584   001D14  D7FA               	bra	u4147
  5585   001D16  F000               	nop	
  5586   001D18                     
  5587                           ;color_instructions.c: 112:     turnLeft135(mL, mR);
  5588   001D18  C027  F022         	movff	LightBlueInstructions@mL,turnLeft135@mL
  5589   001D1C  C028  F023         	movff	LightBlueInstructions@mL+1,turnLeft135@mL+1
  5590   001D20  C029  F024         	movff	LightBlueInstructions@mR,turnLeft135@mR
  5591   001D24  C02A  F025         	movff	LightBlueInstructions@mR+1,turnLeft135@mR+1
  5592   001D28  EC9D  F00F         	call	_turnLeft135	;wreg free
  5593   001D2C  0012               	return		;funcret
  5594   001D2E                     __end_of_LightBlueInstructions:
  5595                           	callstack 0
  5596                           
  5597 ;; *************** function _turnLeft135 *****************
  5598 ;; Defined at:
  5599 ;;		line 316 in file "dc_motor.c"
  5600 ;; Parameters:    Size  Location     Type
  5601 ;;  mL              2   33[COMRAM] PTR struct DC_motor
  5602 ;;		 -> main@motorL(9), 
  5603 ;;  mR              2   35[COMRAM] PTR struct DC_motor
  5604 ;;		 -> main@motorR(9), 
  5605 ;; Auto vars:     Size  Location     Type
  5606 ;;  a               1   37[COMRAM] unsigned char 
  5607 ;; Return value:  Size  Location     Type
  5608 ;;                  1    wreg      void 
  5609 ;; Registers used:
  5610 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5611 ;; Tracked objects:
  5612 ;;		On entry : 0/0
  5613 ;;		On exit  : 0/0
  5614 ;;		Unchanged: 0/0
  5615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5616 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5617 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5619 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5620 ;;Total ram usage:        5 bytes
  5621 ;; Hardware stack levels used: 1
  5622 ;; Hardware stack levels required when called: 10
  5623 ;; This function calls:
  5624 ;;		_stop
  5625 ;;		_turnLeft
  5626 ;; This function is called by:
  5627 ;;		_LightBlueInstructions
  5628 ;; This function uses a non-reentrant model
  5629 ;;
  5630                           
  5631                           	psect	text28
  5632   001F3A                     __ptext28:
  5633                           	callstack 0
  5634   001F3A                     _turnLeft135:
  5635                           	callstack 18
  5636   001F3A                     
  5637                           ;dc_motor.c: 318:     unsigned char a=0;
  5638   001F3A  0E00               	movlw	0
  5639   001F3C  6E26               	movwf	turnLeft135@a^0,c
  5640                           
  5641                           ;dc_motor.c: 319:     while(a<69){
  5642   001F3E  EFAC  F00F         	goto	l2685
  5643   001F42                     l2681:
  5644                           
  5645                           ;dc_motor.c: 320:         turnLeft(mL, mR);
  5646   001F42  C022  F01C         	movff	turnLeft135@mL,turnLeft@mL
  5647   001F46  C023  F01D         	movff	turnLeft135@mL+1,turnLeft@mL+1
  5648   001F4A  C024  F01E         	movff	turnLeft135@mR,turnLeft@mR
  5649   001F4E  C025  F01F         	movff	turnLeft135@mR+1,turnLeft@mR+1
  5650   001F52  ECF0  F00A         	call	_turnLeft	;wreg free
  5651   001F56                     
  5652                           ;dc_motor.c: 321:         a++;
  5653   001F56  2A26               	incf	turnLeft135@a^0,f,c
  5654   001F58                     l2685:
  5655                           
  5656                           ;dc_motor.c: 319:     while(a<69){
  5657   001F58  0E44               	movlw	68
  5658   001F5A  6426               	cpfsgt	turnLeft135@a^0,c
  5659   001F5C  EFB2  F00F         	goto	u2021
  5660   001F60  EFB4  F00F         	goto	u2020
  5661   001F64                     u2021:
  5662   001F64  EFA1  F00F         	goto	l2681
  5663   001F68                     u2020:
  5664   001F68  EFC1  F00F         	goto	l2691
  5665   001F6C                     l2687:
  5666                           
  5667                           ;dc_motor.c: 324:         stop(mL, mR);
  5668   001F6C  C022  F01C         	movff	turnLeft135@mL,stop@mL
  5669   001F70  C023  F01D         	movff	turnLeft135@mL+1,stop@mL+1
  5670   001F74  C024  F01E         	movff	turnLeft135@mR,stop@mR
  5671   001F78  C025  F01F         	movff	turnLeft135@mR+1,stop@mR+1
  5672   001F7C  EC3D  F00C         	call	_stop	;wreg free
  5673   001F80                     
  5674                           ;dc_motor.c: 325:         a--;
  5675   001F80  0626               	decf	turnLeft135@a^0,f,c
  5676   001F82                     l2691:
  5677                           
  5678                           ;dc_motor.c: 323:     while(a>0){
  5679   001F82  5026               	movf	turnLeft135@a^0,w,c
  5680   001F84  A4D8               	btfss	status,2,c
  5681   001F86  EFC7  F00F         	goto	u2031
  5682   001F8A  EFC9  F00F         	goto	u2030
  5683   001F8E                     u2031:
  5684   001F8E  EFB6  F00F         	goto	l2687
  5685   001F92                     u2030:
  5686   001F92  0012               	return		;funcret
  5687   001F94                     __end_of_turnLeft135:
  5688                           	callstack 0
  5689                           
  5690 ;; *************** function _GreenInstructions *****************
  5691 ;; Defined at:
  5692 ;;		line 23 in file "color_instructions.c"
  5693 ;; Parameters:    Size  Location     Type
  5694 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  5695 ;;		 -> main@motorL(9), 
  5696 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  5697 ;;		 -> main@motorR(9), 
  5698 ;; Auto vars:     Size  Location     Type
  5699 ;;  a               1   44[COMRAM] unsigned char 
  5700 ;; Return value:  Size  Location     Type
  5701 ;;                  1    wreg      void 
  5702 ;; Registers used:
  5703 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5704 ;; Tracked objects:
  5705 ;;		On entry : 0/0
  5706 ;;		On exit  : 0/0
  5707 ;;		Unchanged: 0/0
  5708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5709 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5710 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5711 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5712 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5713 ;;Total ram usage:        7 bytes
  5714 ;; Hardware stack levels used: 1
  5715 ;; Hardware stack levels required when called: 11
  5716 ;; This function calls:
  5717 ;;		_fullSpeedBackwards
  5718 ;;		_stop
  5719 ;;		_turnLeft90
  5720 ;; This function is called by:
  5721 ;;		_MoveBuggy
  5722 ;; This function uses a non-reentrant model
  5723 ;;
  5724                           
  5725                           	psect	text29
  5726   001D2E                     __ptext29:
  5727                           	callstack 0
  5728   001D2E                     _GreenInstructions:
  5729                           	callstack 18
  5730   001D2E                     
  5731                           ;color_instructions.c: 24:     unsigned char a=0;
  5732   001D2E  0E00               	movlw	0
  5733   001D30  6E2D               	movwf	GreenInstructions@a^0,c
  5734                           
  5735                           ;color_instructions.c: 25:     while (a<8){
  5736   001D32  EFA6  F00E         	goto	l2771
  5737   001D36                     l2767:
  5738                           
  5739                           ;color_instructions.c: 26:         fullSpeedBackwards(mL, mR);
  5740   001D36  C027  F01C         	movff	GreenInstructions@mL,fullSpeedBackwards@mL
  5741   001D3A  C028  F01D         	movff	GreenInstructions@mL+1,fullSpeedBackwards@mL+1
  5742   001D3E  C029  F01E         	movff	GreenInstructions@mR,fullSpeedBackwards@mR
  5743   001D42  C02A  F01F         	movff	GreenInstructions@mR+1,fullSpeedBackwards@mR+1
  5744   001D46  ECD2  F00B         	call	_fullSpeedBackwards	;wreg free
  5745   001D4A                     
  5746                           ;color_instructions.c: 27:         a++;
  5747   001D4A  2A2D               	incf	GreenInstructions@a^0,f,c
  5748   001D4C                     l2771:
  5749                           
  5750                           ;color_instructions.c: 25:     while (a<8){
  5751   001D4C  0E07               	movlw	7
  5752   001D4E  642D               	cpfsgt	GreenInstructions@a^0,c
  5753   001D50  EFAC  F00E         	goto	u2061
  5754   001D54  EFAE  F00E         	goto	u2060
  5755   001D58                     u2061:
  5756   001D58  EF9B  F00E         	goto	l2767
  5757   001D5C                     u2060:
  5758   001D5C  EFBB  F00E         	goto	l2777
  5759   001D60                     l2773:
  5760                           
  5761                           ;color_instructions.c: 30:         stop(mL, mR);
  5762   001D60  C027  F01C         	movff	GreenInstructions@mL,stop@mL
  5763   001D64  C028  F01D         	movff	GreenInstructions@mL+1,stop@mL+1
  5764   001D68  C029  F01E         	movff	GreenInstructions@mR,stop@mR
  5765   001D6C  C02A  F01F         	movff	GreenInstructions@mR+1,stop@mR+1
  5766   001D70  EC3D  F00C         	call	_stop	;wreg free
  5767   001D74                     
  5768                           ;color_instructions.c: 31:         a--;
  5769   001D74  062D               	decf	GreenInstructions@a^0,f,c
  5770   001D76                     l2777:
  5771                           
  5772                           ;color_instructions.c: 29:     while (a>0){
  5773   001D76  502D               	movf	GreenInstructions@a^0,w,c
  5774   001D78  A4D8               	btfss	status,2,c
  5775   001D7A  EFC1  F00E         	goto	u2071
  5776   001D7E  EFC3  F00E         	goto	u2070
  5777   001D82                     u2071:
  5778   001D82  EFB0  F00E         	goto	l2773
  5779   001D86                     u2070:
  5780   001D86                     
  5781                           ;color_instructions.c: 33:     _delay((unsigned long)((250)*(64000000/4000.0)));
  5782   001D86  0E15               	movlw	21
  5783   001D88  6E2C               	movwf	(??_GreenInstructions+1)^0,c
  5784   001D8A  0E4B               	movlw	75
  5785   001D8C  6E2B               	movwf	??_GreenInstructions^0,c
  5786   001D8E  0EBE               	movlw	190
  5787   001D90                     u4157:
  5788   001D90  2EE8               	decfsz	wreg,f,c
  5789   001D92  D7FE               	bra	u4157
  5790   001D94  2E2B               	decfsz	??_GreenInstructions^0,f,c
  5791   001D96  D7FC               	bra	u4157
  5792   001D98  2E2C               	decfsz	(??_GreenInstructions+1)^0,f,c
  5793   001D9A  D7FA               	bra	u4157
  5794   001D9C  D000               	nop2	
  5795   001D9E                     
  5796                           ;color_instructions.c: 34:     turnLeft90(mL, mR);
  5797   001D9E  C027  F022         	movff	GreenInstructions@mL,turnLeft90@mL
  5798   001DA2  C028  F023         	movff	GreenInstructions@mL+1,turnLeft90@mL+1
  5799   001DA6  C029  F024         	movff	GreenInstructions@mR,turnLeft90@mR
  5800   001DAA  C02A  F025         	movff	GreenInstructions@mR+1,turnLeft90@mR+1
  5801   001DAE  ECCA  F00F         	call	_turnLeft90	;wreg free
  5802   001DB2  0012               	return		;funcret
  5803   001DB4                     __end_of_GreenInstructions:
  5804                           	callstack 0
  5805                           
  5806 ;; *************** function _BlueInstructions *****************
  5807 ;; Defined at:
  5808 ;;		line 37 in file "color_instructions.c"
  5809 ;; Parameters:    Size  Location     Type
  5810 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  5811 ;;		 -> main@motorL(9), 
  5812 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  5813 ;;		 -> main@motorR(9), 
  5814 ;; Auto vars:     Size  Location     Type
  5815 ;;  a               1   44[COMRAM] unsigned char 
  5816 ;; Return value:  Size  Location     Type
  5817 ;;                  1    wreg      void 
  5818 ;; Registers used:
  5819 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5820 ;; Tracked objects:
  5821 ;;		On entry : 0/0
  5822 ;;		On exit  : 0/0
  5823 ;;		Unchanged: 0/0
  5824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5825 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5826 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5827 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5828 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5829 ;;Total ram usage:        7 bytes
  5830 ;; Hardware stack levels used: 1
  5831 ;; Hardware stack levels required when called: 11
  5832 ;; This function calls:
  5833 ;;		_fullSpeedBackwards
  5834 ;;		_stop
  5835 ;;		_turnLeft90
  5836 ;; This function is called by:
  5837 ;;		_MoveBuggy
  5838 ;; This function uses a non-reentrant model
  5839 ;;
  5840                           
  5841                           	psect	text30
  5842   00194E                     __ptext30:
  5843                           	callstack 0
  5844   00194E                     _BlueInstructions:
  5845                           	callstack 18
  5846   00194E                     
  5847                           ;color_instructions.c: 38:     unsigned char a=0;
  5848   00194E  0E00               	movlw	0
  5849   001950  6E2D               	movwf	BlueInstructions@a^0,c
  5850                           
  5851                           ;color_instructions.c: 39:     while (a<8){
  5852   001952  EFB6  F00C         	goto	l2789
  5853   001956                     l2785:
  5854                           
  5855                           ;color_instructions.c: 40:         fullSpeedBackwards(mL, mR);
  5856   001956  C027  F01C         	movff	BlueInstructions@mL,fullSpeedBackwards@mL
  5857   00195A  C028  F01D         	movff	BlueInstructions@mL+1,fullSpeedBackwards@mL+1
  5858   00195E  C029  F01E         	movff	BlueInstructions@mR,fullSpeedBackwards@mR
  5859   001962  C02A  F01F         	movff	BlueInstructions@mR+1,fullSpeedBackwards@mR+1
  5860   001966  ECD2  F00B         	call	_fullSpeedBackwards	;wreg free
  5861   00196A                     
  5862                           ;color_instructions.c: 41:         a++;
  5863   00196A  2A2D               	incf	BlueInstructions@a^0,f,c
  5864   00196C                     l2789:
  5865                           
  5866                           ;color_instructions.c: 39:     while (a<8){
  5867   00196C  0E07               	movlw	7
  5868   00196E  642D               	cpfsgt	BlueInstructions@a^0,c
  5869   001970  EFBC  F00C         	goto	u2081
  5870   001974  EFBE  F00C         	goto	u2080
  5871   001978                     u2081:
  5872   001978  EFAB  F00C         	goto	l2785
  5873   00197C                     u2080:
  5874   00197C  EFCB  F00C         	goto	l2795
  5875   001980                     l2791:
  5876                           
  5877                           ;color_instructions.c: 44:         stop(mL, mR);
  5878   001980  C027  F01C         	movff	BlueInstructions@mL,stop@mL
  5879   001984  C028  F01D         	movff	BlueInstructions@mL+1,stop@mL+1
  5880   001988  C029  F01E         	movff	BlueInstructions@mR,stop@mR
  5881   00198C  C02A  F01F         	movff	BlueInstructions@mR+1,stop@mR+1
  5882   001990  EC3D  F00C         	call	_stop	;wreg free
  5883   001994                     
  5884                           ;color_instructions.c: 45:         a--;
  5885   001994  062D               	decf	BlueInstructions@a^0,f,c
  5886   001996                     l2795:
  5887                           
  5888                           ;color_instructions.c: 43:     while (a>0){
  5889   001996  502D               	movf	BlueInstructions@a^0,w,c
  5890   001998  A4D8               	btfss	status,2,c
  5891   00199A  EFD1  F00C         	goto	u2091
  5892   00199E  EFD3  F00C         	goto	u2090
  5893   0019A2                     u2091:
  5894   0019A2  EFC0  F00C         	goto	l2791
  5895   0019A6                     u2090:
  5896   0019A6                     
  5897                           ;color_instructions.c: 47:     _delay((unsigned long)((500)*(64000000/4000.0)));
  5898   0019A6  0E29               	movlw	41
  5899   0019A8  6E2C               	movwf	(??_BlueInstructions+1)^0,c
  5900   0019AA  0E96               	movlw	150
  5901   0019AC  6E2B               	movwf	??_BlueInstructions^0,c
  5902   0019AE  0E7F               	movlw	127
  5903   0019B0                     u4167:
  5904   0019B0  2EE8               	decfsz	wreg,f,c
  5905   0019B2  D7FE               	bra	u4167
  5906   0019B4  2E2B               	decfsz	??_BlueInstructions^0,f,c
  5907   0019B6  D7FC               	bra	u4167
  5908   0019B8  2E2C               	decfsz	(??_BlueInstructions+1)^0,f,c
  5909   0019BA  D7FA               	bra	u4167
  5910   0019BC  F000               	nop	
  5911   0019BE                     
  5912                           ;color_instructions.c: 49:     turnLeft90(mL, mR);
  5913   0019BE  C027  F022         	movff	BlueInstructions@mL,turnLeft90@mL
  5914   0019C2  C028  F023         	movff	BlueInstructions@mL+1,turnLeft90@mL+1
  5915   0019C6  C029  F024         	movff	BlueInstructions@mR,turnLeft90@mR
  5916   0019CA  C02A  F025         	movff	BlueInstructions@mR+1,turnLeft90@mR+1
  5917   0019CE  ECCA  F00F         	call	_turnLeft90	;wreg free
  5918   0019D2                     
  5919                           ;color_instructions.c: 50:     _delay((unsigned long)((50)*(64000000/4000.0)));
  5920   0019D2  0E05               	movlw	5
  5921   0019D4  6E2C               	movwf	(??_BlueInstructions+1)^0,c
  5922   0019D6  0E0F               	movlw	15
  5923   0019D8  6E2B               	movwf	??_BlueInstructions^0,c
  5924   0019DA  0EF1               	movlw	241
  5925   0019DC                     u4177:
  5926   0019DC  2EE8               	decfsz	wreg,f,c
  5927   0019DE  D7FE               	bra	u4177
  5928   0019E0  2E2B               	decfsz	??_BlueInstructions^0,f,c
  5929   0019E2  D7FC               	bra	u4177
  5930   0019E4  2E2C               	decfsz	(??_BlueInstructions+1)^0,f,c
  5931   0019E6  D7FA               	bra	u4177
  5932   0019E8  F000               	nop	
  5933                           
  5934                           ;color_instructions.c: 51:     turnLeft90(mL, mR);
  5935   0019EA  C027  F022         	movff	BlueInstructions@mL,turnLeft90@mL
  5936   0019EE  C028  F023         	movff	BlueInstructions@mL+1,turnLeft90@mL+1
  5937   0019F2  C029  F024         	movff	BlueInstructions@mR,turnLeft90@mR
  5938   0019F6  C02A  F025         	movff	BlueInstructions@mR+1,turnLeft90@mR+1
  5939   0019FA  ECCA  F00F         	call	_turnLeft90	;wreg free
  5940   0019FE  0012               	return		;funcret
  5941   001A00                     __end_of_BlueInstructions:
  5942                           	callstack 0
  5943                           
  5944 ;; *************** function _turnLeft90 *****************
  5945 ;; Defined at:
  5946 ;;		line 264 in file "dc_motor.c"
  5947 ;; Parameters:    Size  Location     Type
  5948 ;;  mL              2   33[COMRAM] PTR struct DC_motor
  5949 ;;		 -> main@motorL(9), 
  5950 ;;  mR              2   35[COMRAM] PTR struct DC_motor
  5951 ;;		 -> main@motorR(9), 
  5952 ;; Auto vars:     Size  Location     Type
  5953 ;;  a               1   37[COMRAM] unsigned char 
  5954 ;; Return value:  Size  Location     Type
  5955 ;;                  1    wreg      void 
  5956 ;; Registers used:
  5957 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5958 ;; Tracked objects:
  5959 ;;		On entry : 0/0
  5960 ;;		On exit  : 0/0
  5961 ;;		Unchanged: 0/0
  5962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5963 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5964 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5966 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5967 ;;Total ram usage:        5 bytes
  5968 ;; Hardware stack levels used: 1
  5969 ;; Hardware stack levels required when called: 10
  5970 ;; This function calls:
  5971 ;;		_stop
  5972 ;;		_turnLeft
  5973 ;; This function is called by:
  5974 ;;		_GreenInstructions
  5975 ;;		_BlueInstructions
  5976 ;;		_PinkInstructions
  5977 ;; This function uses a non-reentrant model
  5978 ;;
  5979                           
  5980                           	psect	text31
  5981   001F94                     __ptext31:
  5982                           	callstack 0
  5983   001F94                     _turnLeft90:
  5984                           	callstack 18
  5985   001F94                     
  5986                           ;dc_motor.c: 266:     unsigned char a=0;
  5987   001F94  0E00               	movlw	0
  5988   001F96  6E26               	movwf	turnLeft90@a^0,c
  5989                           
  5990                           ;dc_motor.c: 267:     while(a<19){
  5991   001F98  EFD9  F00F         	goto	l2643
  5992   001F9C                     l2639:
  5993                           
  5994                           ;dc_motor.c: 268:         turnLeft(mL, mR);
  5995   001F9C  C022  F01C         	movff	turnLeft90@mL,turnLeft@mL
  5996   001FA0  C023  F01D         	movff	turnLeft90@mL+1,turnLeft@mL+1
  5997   001FA4  C024  F01E         	movff	turnLeft90@mR,turnLeft@mR
  5998   001FA8  C025  F01F         	movff	turnLeft90@mR+1,turnLeft@mR+1
  5999   001FAC  ECF0  F00A         	call	_turnLeft	;wreg free
  6000   001FB0                     
  6001                           ;dc_motor.c: 269:         a++;
  6002   001FB0  2A26               	incf	turnLeft90@a^0,f,c
  6003   001FB2                     l2643:
  6004                           
  6005                           ;dc_motor.c: 267:     while(a<19){
  6006   001FB2  0E12               	movlw	18
  6007   001FB4  6426               	cpfsgt	turnLeft90@a^0,c
  6008   001FB6  EFDF  F00F         	goto	u1961
  6009   001FBA  EFE1  F00F         	goto	u1960
  6010   001FBE                     u1961:
  6011   001FBE  EFCE  F00F         	goto	l2639
  6012   001FC2                     u1960:
  6013   001FC2  EFEE  F00F         	goto	l2649
  6014   001FC6                     l2645:
  6015                           
  6016                           ;dc_motor.c: 272:         stop(mL, mR);
  6017   001FC6  C022  F01C         	movff	turnLeft90@mL,stop@mL
  6018   001FCA  C023  F01D         	movff	turnLeft90@mL+1,stop@mL+1
  6019   001FCE  C024  F01E         	movff	turnLeft90@mR,stop@mR
  6020   001FD2  C025  F01F         	movff	turnLeft90@mR+1,stop@mR+1
  6021   001FD6  EC3D  F00C         	call	_stop	;wreg free
  6022   001FDA                     
  6023                           ;dc_motor.c: 273:         a--;
  6024   001FDA  0626               	decf	turnLeft90@a^0,f,c
  6025   001FDC                     l2649:
  6026                           
  6027                           ;dc_motor.c: 271:     while(a>0){
  6028   001FDC  5026               	movf	turnLeft90@a^0,w,c
  6029   001FDE  A4D8               	btfss	status,2,c
  6030   001FE0  EFF4  F00F         	goto	u1971
  6031   001FE4  EFF6  F00F         	goto	u1970
  6032   001FE8                     u1971:
  6033   001FE8  EFE3  F00F         	goto	l2645
  6034   001FEC                     u1970:
  6035   001FEC  0012               	return		;funcret
  6036   001FEE                     __end_of_turnLeft90:
  6037                           	callstack 0
  6038                           
  6039 ;; *************** function _turnLeft *****************
  6040 ;; Defined at:
  6041 ;;		line 171 in file "dc_motor.c"
  6042 ;; Parameters:    Size  Location     Type
  6043 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  6044 ;;		 -> main@motorL(9), 
  6045 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  6046 ;;		 -> main@motorR(9), 
  6047 ;; Auto vars:     Size  Location     Type
  6048 ;;		None
  6049 ;; Return value:  Size  Location     Type
  6050 ;;                  1    wreg      void 
  6051 ;; Registers used:
  6052 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6053 ;; Tracked objects:
  6054 ;;		On entry : 0/0
  6055 ;;		On exit  : 0/0
  6056 ;;		Unchanged: 0/0
  6057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6058 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6060 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6061 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6062 ;;Total ram usage:        6 bytes
  6063 ;; Hardware stack levels used: 1
  6064 ;; Hardware stack levels required when called: 9
  6065 ;; This function calls:
  6066 ;;		_setMotorPWM
  6067 ;; This function is called by:
  6068 ;;		_turnLeft90
  6069 ;;		_turnLeft135
  6070 ;; This function uses a non-reentrant model
  6071 ;;
  6072                           
  6073                           	psect	text32
  6074   0015E0                     __ptext32:
  6075                           	callstack 0
  6076   0015E0                     _turnLeft:
  6077                           	callstack 18
  6078   0015E0                     
  6079                           ;dc_motor.c: 171: void turnLeft(DC_motor *mL, DC_motor *mR);dc_motor.c: 172: {;dc_motor.
      +                          c: 174:     mL->direction = 0;
  6080   0015E0  EE20 F001          	lfsr	2,1
  6081   0015E4  501C               	movf	turnLeft@mL^0,w,c
  6082   0015E6  26D9               	addwf	fsr2l,f,c
  6083   0015E8  501D               	movf	(turnLeft@mL+1)^0,w,c
  6084   0015EA  22DA               	addwfc	fsr2h,f,c
  6085   0015EC  0E00               	movlw	0
  6086   0015EE  6EDF               	movwf	indf2,c
  6087                           
  6088                           ;dc_motor.c: 175:     mL->brakemode = 0;
  6089   0015F0  EE20 F002          	lfsr	2,2
  6090   0015F4  501C               	movf	turnLeft@mL^0,w,c
  6091   0015F6  26D9               	addwf	fsr2l,f,c
  6092   0015F8  501D               	movf	(turnLeft@mL+1)^0,w,c
  6093   0015FA  22DA               	addwfc	fsr2h,f,c
  6094   0015FC  0E00               	movlw	0
  6095   0015FE  6EDF               	movwf	indf2,c
  6096                           
  6097                           ;dc_motor.c: 177:     mR->direction = 1;
  6098   001600  EE20 F001          	lfsr	2,1
  6099   001604  501E               	movf	turnLeft@mR^0,w,c
  6100   001606  26D9               	addwf	fsr2l,f,c
  6101   001608  501F               	movf	(turnLeft@mR+1)^0,w,c
  6102   00160A  22DA               	addwfc	fsr2h,f,c
  6103   00160C  0E01               	movlw	1
  6104   00160E  6EDF               	movwf	indf2,c
  6105                           
  6106                           ;dc_motor.c: 178:     mR->brakemode = 0;
  6107   001610  EE20 F002          	lfsr	2,2
  6108   001614  501E               	movf	turnLeft@mR^0,w,c
  6109   001616  26D9               	addwf	fsr2l,f,c
  6110   001618  501F               	movf	(turnLeft@mR+1)^0,w,c
  6111   00161A  22DA               	addwfc	fsr2h,f,c
  6112   00161C  0E00               	movlw	0
  6113   00161E  6EDF               	movwf	indf2,c
  6114                           
  6115                           ;dc_motor.c: 181:     if(mL->power>75){mL->power=75;}
  6116   001620  C01C  FFD9         	movff	turnLeft@mL,fsr2l
  6117   001624  C01D  FFDA         	movff	turnLeft@mL+1,fsr2h
  6118   001628  50DF               	movf	indf2,w,c
  6119   00162A  0A80               	xorlw	128
  6120   00162C  0F34               	addlw	-204
  6121   00162E  A0D8               	btfss	status,0,c
  6122   001630  EF1C  F00B         	goto	u1881
  6123   001634  EF1E  F00B         	goto	u1880
  6124   001638                     u1881:
  6125   001638  EF24  F00B         	goto	l2557
  6126   00163C                     u1880:
  6127   00163C  C01C  FFD9         	movff	turnLeft@mL,fsr2l
  6128   001640  C01D  FFDA         	movff	turnLeft@mL+1,fsr2h
  6129   001644  0E4B               	movlw	75
  6130   001646  6EDF               	movwf	indf2,c
  6131   001648                     l2557:
  6132                           
  6133                           ;dc_motor.c: 182:     if(mR->power>75){mR->power=75;}
  6134   001648  C01E  FFD9         	movff	turnLeft@mR,fsr2l
  6135   00164C  C01F  FFDA         	movff	turnLeft@mR+1,fsr2h
  6136   001650  50DF               	movf	indf2,w,c
  6137   001652  0A80               	xorlw	128
  6138   001654  0F34               	addlw	-204
  6139   001656  A0D8               	btfss	status,0,c
  6140   001658  EF30  F00B         	goto	u1891
  6141   00165C  EF32  F00B         	goto	u1890
  6142   001660                     u1891:
  6143   001660  EF38  F00B         	goto	l2561
  6144   001664                     u1890:
  6145   001664  C01E  FFD9         	movff	turnLeft@mR,fsr2l
  6146   001668  C01F  FFDA         	movff	turnLeft@mR+1,fsr2h
  6147   00166C  0E4B               	movlw	75
  6148   00166E  6EDF               	movwf	indf2,c
  6149   001670                     l2561:
  6150                           
  6151                           ;dc_motor.c: 184:     mL->power = mL->power + 5 ;
  6152   001670  C01C  FFD9         	movff	turnLeft@mL,fsr2l
  6153   001674  C01D  FFDA         	movff	turnLeft@mL+1,fsr2h
  6154   001678  50DF               	movf	indf2,w,c
  6155   00167A  0F05               	addlw	5
  6156   00167C  C01C  FFD9         	movff	turnLeft@mL,fsr2l
  6157   001680  C01D  FFDA         	movff	turnLeft@mL+1,fsr2h
  6158   001684  6EDF               	movwf	indf2,c
  6159   001686                     
  6160                           ;dc_motor.c: 185:     mR->power = mR->power + 5;
  6161   001686  C01E  FFD9         	movff	turnLeft@mR,fsr2l
  6162   00168A  C01F  FFDA         	movff	turnLeft@mR+1,fsr2h
  6163   00168E  50DF               	movf	indf2,w,c
  6164   001690  0F05               	addlw	5
  6165   001692  C01E  FFD9         	movff	turnLeft@mR,fsr2l
  6166   001696  C01F  FFDA         	movff	turnLeft@mR+1,fsr2h
  6167   00169A  6EDF               	movwf	indf2,c
  6168   00169C                     
  6169                           ;dc_motor.c: 187:     setMotorPWM(mL);
  6170   00169C  C01C  F016         	movff	turnLeft@mL,setMotorPWM@m
  6171   0016A0  C01D  F017         	movff	turnLeft@mL+1,setMotorPWM@m+1
  6172   0016A4  ECF8  F007         	call	_setMotorPWM	;wreg free
  6173   0016A8                     
  6174                           ;dc_motor.c: 188:     setMotorPWM(mR);
  6175   0016A8  C01E  F016         	movff	turnLeft@mR,setMotorPWM@m
  6176   0016AC  C01F  F017         	movff	turnLeft@mR+1,setMotorPWM@m+1
  6177   0016B0  ECF8  F007         	call	_setMotorPWM	;wreg free
  6178   0016B4                     
  6179                           ;dc_motor.c: 189:     _delay((unsigned long)((50)*(64000000/4000.0)));
  6180   0016B4  0E05               	movlw	5
  6181   0016B6  6E21               	movwf	(??_turnLeft+1)^0,c
  6182   0016B8  0E0F               	movlw	15
  6183   0016BA  6E20               	movwf	??_turnLeft^0,c
  6184   0016BC  0EF1               	movlw	241
  6185   0016BE                     u4187:
  6186   0016BE  2EE8               	decfsz	wreg,f,c
  6187   0016C0  D7FE               	bra	u4187
  6188   0016C2  2E20               	decfsz	??_turnLeft^0,f,c
  6189   0016C4  D7FC               	bra	u4187
  6190   0016C6  2E21               	decfsz	(??_turnLeft+1)^0,f,c
  6191   0016C8  D7FA               	bra	u4187
  6192   0016CA  F000               	nop	
  6193   0016CC  0012               	return		;funcret
  6194   0016CE                     __end_of_turnLeft:
  6195                           	callstack 0
  6196                           
  6197 ;; *************** function _stop *****************
  6198 ;; Defined at:
  6199 ;;		line 87 in file "dc_motor.c"
  6200 ;; Parameters:    Size  Location     Type
  6201 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  6202 ;;		 -> main@motorL(9), 
  6203 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  6204 ;;		 -> main@motorR(9), 
  6205 ;; Auto vars:     Size  Location     Type
  6206 ;;		None
  6207 ;; Return value:  Size  Location     Type
  6208 ;;                  1    wreg      void 
  6209 ;; Registers used:
  6210 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6211 ;; Tracked objects:
  6212 ;;		On entry : 0/0
  6213 ;;		On exit  : 0/0
  6214 ;;		Unchanged: 0/0
  6215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6216 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6218 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6219 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6220 ;;Total ram usage:        5 bytes
  6221 ;; Hardware stack levels used: 1
  6222 ;; Hardware stack levels required when called: 9
  6223 ;; This function calls:
  6224 ;;		_setMotorPWM
  6225 ;; This function is called by:
  6226 ;;		_turnLeft90
  6227 ;;		_turnRight90
  6228 ;;		_turnRight135
  6229 ;;		_turnLeft135
  6230 ;;		_main
  6231 ;;		_RedInstructions
  6232 ;;		_GreenInstructions
  6233 ;;		_BlueInstructions
  6234 ;;		_YellowInstructions
  6235 ;;		_PinkInstructions
  6236 ;;		_OrangeInstructions
  6237 ;;		_LightBlueInstructions
  6238 ;;		_turn180
  6239 ;; This function uses a non-reentrant model
  6240 ;;
  6241                           
  6242                           	psect	text33
  6243   00187A                     __ptext33:
  6244                           	callstack 0
  6245   00187A                     _stop:
  6246                           	callstack 21
  6247   00187A                     
  6248                           ;dc_motor.c: 87: void stop(DC_motor *mL, DC_motor *mR);dc_motor.c: 88: {;dc_motor.c: 154
      +                          :     mL->brakemode = 1;
  6249   00187A  EE20 F002          	lfsr	2,2
  6250   00187E  501C               	movf	stop@mL^0,w,c
  6251   001880  26D9               	addwf	fsr2l,f,c
  6252   001882  501D               	movf	(stop@mL+1)^0,w,c
  6253   001884  22DA               	addwfc	fsr2h,f,c
  6254   001886  0E01               	movlw	1
  6255   001888  6EDF               	movwf	indf2,c
  6256                           
  6257                           ;dc_motor.c: 155:     mR->brakemode = 1;
  6258   00188A  EE20 F002          	lfsr	2,2
  6259   00188E  501E               	movf	stop@mR^0,w,c
  6260   001890  26D9               	addwf	fsr2l,f,c
  6261   001892  501F               	movf	(stop@mR+1)^0,w,c
  6262   001894  22DA               	addwfc	fsr2h,f,c
  6263   001896  0E01               	movlw	1
  6264   001898  6EDF               	movwf	indf2,c
  6265                           
  6266                           ;dc_motor.c: 157:     if(mL->power<0){mL->power=0;}
  6267   00189A  C01C  FFD9         	movff	stop@mL,fsr2l
  6268   00189E  C01D  FFDA         	movff	stop@mL+1,fsr2h
  6269   0018A2  0E00               	movlw	0
  6270   0018A4  BEDB               	btfsc	plusw2,7,c
  6271   0018A6  EF59  F00C         	goto	u1860
  6272   0018AA  EF57  F00C         	goto	u1861
  6273   0018AE                     u1861:
  6274   0018AE  EF5F  F00C         	goto	l2539
  6275   0018B2                     u1860:
  6276   0018B2  C01C  FFD9         	movff	stop@mL,fsr2l
  6277   0018B6  C01D  FFDA         	movff	stop@mL+1,fsr2h
  6278   0018BA  0E00               	movlw	0
  6279   0018BC  6EDF               	movwf	indf2,c
  6280   0018BE                     l2539:
  6281                           
  6282                           ;dc_motor.c: 158:     if(mR->power<0){mR->power=0;}
  6283   0018BE  C01E  FFD9         	movff	stop@mR,fsr2l
  6284   0018C2  C01F  FFDA         	movff	stop@mR+1,fsr2h
  6285   0018C6  0E00               	movlw	0
  6286   0018C8  BEDB               	btfsc	plusw2,7,c
  6287   0018CA  EF6B  F00C         	goto	u1870
  6288   0018CE  EF69  F00C         	goto	u1871
  6289   0018D2                     u1871:
  6290   0018D2  EF71  F00C         	goto	l2543
  6291   0018D6                     u1870:
  6292   0018D6  C01E  FFD9         	movff	stop@mR,fsr2l
  6293   0018DA  C01F  FFDA         	movff	stop@mR+1,fsr2h
  6294   0018DE  0E00               	movlw	0
  6295   0018E0  6EDF               	movwf	indf2,c
  6296   0018E2                     l2543:
  6297                           
  6298                           ;dc_motor.c: 160:     mL->power = mL->power - 5 ;
  6299   0018E2  C01C  FFD9         	movff	stop@mL,fsr2l
  6300   0018E6  C01D  FFDA         	movff	stop@mL+1,fsr2h
  6301   0018EA  50DF               	movf	indf2,w,c
  6302   0018EC  0FFB               	addlw	251
  6303   0018EE  C01C  FFD9         	movff	stop@mL,fsr2l
  6304   0018F2  C01D  FFDA         	movff	stop@mL+1,fsr2h
  6305   0018F6  6EDF               	movwf	indf2,c
  6306   0018F8                     
  6307                           ;dc_motor.c: 161:     mR->power = mR->power - 5;
  6308   0018F8  C01E  FFD9         	movff	stop@mR,fsr2l
  6309   0018FC  C01F  FFDA         	movff	stop@mR+1,fsr2h
  6310   001900  50DF               	movf	indf2,w,c
  6311   001902  0FFB               	addlw	251
  6312   001904  C01E  FFD9         	movff	stop@mR,fsr2l
  6313   001908  C01F  FFDA         	movff	stop@mR+1,fsr2h
  6314   00190C  6EDF               	movwf	indf2,c
  6315                           
  6316                           ;dc_motor.c: 163:     mL->power = 0;
  6317   00190E  C01C  FFD9         	movff	stop@mL,fsr2l
  6318   001912  C01D  FFDA         	movff	stop@mL+1,fsr2h
  6319   001916  0E00               	movlw	0
  6320   001918  6EDF               	movwf	indf2,c
  6321                           
  6322                           ;dc_motor.c: 164:     mR->power = 0;
  6323   00191A  C01E  FFD9         	movff	stop@mR,fsr2l
  6324   00191E  C01F  FFDA         	movff	stop@mR+1,fsr2h
  6325   001922  0E00               	movlw	0
  6326   001924  6EDF               	movwf	indf2,c
  6327   001926                     
  6328                           ;dc_motor.c: 165:     setMotorPWM(mL);
  6329   001926  C01C  F016         	movff	stop@mL,setMotorPWM@m
  6330   00192A  C01D  F017         	movff	stop@mL+1,setMotorPWM@m+1
  6331   00192E  ECF8  F007         	call	_setMotorPWM	;wreg free
  6332   001932                     
  6333                           ;dc_motor.c: 166:     setMotorPWM(mR);
  6334   001932  C01E  F016         	movff	stop@mR,setMotorPWM@m
  6335   001936  C01F  F017         	movff	stop@mR+1,setMotorPWM@m+1
  6336   00193A  ECF8  F007         	call	_setMotorPWM	;wreg free
  6337   00193E                     
  6338                           ;dc_motor.c: 167:     _delay((unsigned long)((10)*(64000000/4000.0)));
  6339   00193E  0ED0               	movlw	208
  6340   001940  6E20               	movwf	??_stop^0,c
  6341   001942  0ECA               	movlw	202
  6342   001944                     u4197:
  6343   001944  2EE8               	decfsz	wreg,f,c
  6344   001946  D7FE               	bra	u4197
  6345   001948  2E20               	decfsz	??_stop^0,f,c
  6346   00194A  D7FC               	bra	u4197
  6347   00194C  0012               	return		;funcret
  6348   00194E                     __end_of_stop:
  6349                           	callstack 0
  6350                           
  6351 ;; *************** function _fullSpeedBackwards *****************
  6352 ;; Defined at:
  6353 ;;		line 238 in file "dc_motor.c"
  6354 ;; Parameters:    Size  Location     Type
  6355 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  6356 ;;		 -> main@motorL(9), 
  6357 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  6358 ;;		 -> main@motorR(9), 
  6359 ;; Auto vars:     Size  Location     Type
  6360 ;;		None
  6361 ;; Return value:  Size  Location     Type
  6362 ;;                  1    wreg      void 
  6363 ;; Registers used:
  6364 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6365 ;; Tracked objects:
  6366 ;;		On entry : 0/0
  6367 ;;		On exit  : 0/0
  6368 ;;		Unchanged: 0/0
  6369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6370 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6372 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6373 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6374 ;;Total ram usage:        6 bytes
  6375 ;; Hardware stack levels used: 1
  6376 ;; Hardware stack levels required when called: 9
  6377 ;; This function calls:
  6378 ;;		_setMotorPWM
  6379 ;; This function is called by:
  6380 ;;		_RedInstructions
  6381 ;;		_GreenInstructions
  6382 ;;		_BlueInstructions
  6383 ;;		_YellowInstructions
  6384 ;;		_PinkInstructions
  6385 ;;		_OrangeInstructions
  6386 ;;		_LightBlueInstructions
  6387 ;; This function uses a non-reentrant model
  6388 ;;
  6389                           
  6390                           	psect	text34
  6391   0017A4                     __ptext34:
  6392                           	callstack 0
  6393   0017A4                     _fullSpeedBackwards:
  6394                           	callstack 19
  6395   0017A4                     
  6396                           ;dc_motor.c: 241:     mL->direction = 0;
  6397   0017A4  EE20 F001          	lfsr	2,1
  6398   0017A8  501C               	movf	fullSpeedBackwards@mL^0,w,c
  6399   0017AA  26D9               	addwf	fsr2l,f,c
  6400   0017AC  501D               	movf	(fullSpeedBackwards@mL+1)^0,w,c
  6401   0017AE  22DA               	addwfc	fsr2h,f,c
  6402   0017B0  0E00               	movlw	0
  6403   0017B2  6EDF               	movwf	indf2,c
  6404                           
  6405                           ;dc_motor.c: 242:     mL->brakemode = 0;
  6406   0017B4  EE20 F002          	lfsr	2,2
  6407   0017B8  501C               	movf	fullSpeedBackwards@mL^0,w,c
  6408   0017BA  26D9               	addwf	fsr2l,f,c
  6409   0017BC  501D               	movf	(fullSpeedBackwards@mL+1)^0,w,c
  6410   0017BE  22DA               	addwfc	fsr2h,f,c
  6411   0017C0  0E00               	movlw	0
  6412   0017C2  6EDF               	movwf	indf2,c
  6413                           
  6414                           ;dc_motor.c: 244:     mR->direction = 0;
  6415   0017C4  EE20 F001          	lfsr	2,1
  6416   0017C8  501E               	movf	fullSpeedBackwards@mR^0,w,c
  6417   0017CA  26D9               	addwf	fsr2l,f,c
  6418   0017CC  501F               	movf	(fullSpeedBackwards@mR+1)^0,w,c
  6419   0017CE  22DA               	addwfc	fsr2h,f,c
  6420   0017D0  0E00               	movlw	0
  6421   0017D2  6EDF               	movwf	indf2,c
  6422                           
  6423                           ;dc_motor.c: 245:     mR->brakemode = 0;
  6424   0017D4  EE20 F002          	lfsr	2,2
  6425   0017D8  501E               	movf	fullSpeedBackwards@mR^0,w,c
  6426   0017DA  26D9               	addwf	fsr2l,f,c
  6427   0017DC  501F               	movf	(fullSpeedBackwards@mR+1)^0,w,c
  6428   0017DE  22DA               	addwfc	fsr2h,f,c
  6429   0017E0  0E00               	movlw	0
  6430   0017E2  6EDF               	movwf	indf2,c
  6431                           
  6432                           ;dc_motor.c: 248:     if(mL->power>50){mL->power=50;}
  6433   0017E4  C01C  FFD9         	movff	fullSpeedBackwards@mL,fsr2l
  6434   0017E8  C01D  FFDA         	movff	fullSpeedBackwards@mL+1,fsr2h
  6435   0017EC  50DF               	movf	indf2,w,c
  6436   0017EE  0A80               	xorlw	128
  6437   0017F0  0F4D               	addlw	-179
  6438   0017F2  A0D8               	btfss	status,0,c
  6439   0017F4  EFFE  F00B         	goto	u1941
  6440   0017F8  EF00  F00C         	goto	u1940
  6441   0017FC                     u1941:
  6442   0017FC  EF06  F00C         	goto	l2623
  6443   001800                     u1940:
  6444   001800  C01C  FFD9         	movff	fullSpeedBackwards@mL,fsr2l
  6445   001804  C01D  FFDA         	movff	fullSpeedBackwards@mL+1,fsr2h
  6446   001808  0E32               	movlw	50
  6447   00180A  6EDF               	movwf	indf2,c
  6448   00180C                     l2623:
  6449                           
  6450                           ;dc_motor.c: 249:     if(mR->power>50){mR->power=50;}
  6451   00180C  C01E  FFD9         	movff	fullSpeedBackwards@mR,fsr2l
  6452   001810  C01F  FFDA         	movff	fullSpeedBackwards@mR+1,fsr2h
  6453   001814  50DF               	movf	indf2,w,c
  6454   001816  0A80               	xorlw	128
  6455   001818  0F4D               	addlw	-179
  6456   00181A  A0D8               	btfss	status,0,c
  6457   00181C  EF12  F00C         	goto	u1951
  6458   001820  EF14  F00C         	goto	u1950
  6459   001824                     u1951:
  6460   001824  EF1A  F00C         	goto	l2627
  6461   001828                     u1950:
  6462   001828  C01E  FFD9         	movff	fullSpeedBackwards@mR,fsr2l
  6463   00182C  C01F  FFDA         	movff	fullSpeedBackwards@mR+1,fsr2h
  6464   001830  0E32               	movlw	50
  6465   001832  6EDF               	movwf	indf2,c
  6466   001834                     l2627:
  6467                           
  6468                           ;dc_motor.c: 251:     ++mL->power;
  6469   001834  C01C  FFD9         	movff	fullSpeedBackwards@mL,fsr2l
  6470   001838  C01D  FFDA         	movff	fullSpeedBackwards@mL+1,fsr2h
  6471   00183C  2ADF               	incf	indf2,f,c
  6472   00183E                     
  6473                           ;dc_motor.c: 252:     ++mR->power;
  6474   00183E  C01E  FFD9         	movff	fullSpeedBackwards@mR,fsr2l
  6475   001842  C01F  FFDA         	movff	fullSpeedBackwards@mR+1,fsr2h
  6476   001846  2ADF               	incf	indf2,f,c
  6477   001848                     
  6478                           ;dc_motor.c: 254:     setMotorPWM(mL);
  6479   001848  C01C  F016         	movff	fullSpeedBackwards@mL,setMotorPWM@m
  6480   00184C  C01D  F017         	movff	fullSpeedBackwards@mL+1,setMotorPWM@m+1
  6481   001850  ECF8  F007         	call	_setMotorPWM	;wreg free
  6482   001854                     
  6483                           ;dc_motor.c: 255:     setMotorPWM(mR);
  6484   001854  C01E  F016         	movff	fullSpeedBackwards@mR,setMotorPWM@m
  6485   001858  C01F  F017         	movff	fullSpeedBackwards@mR+1,setMotorPWM@m+1
  6486   00185C  ECF8  F007         	call	_setMotorPWM	;wreg free
  6487   001860                     
  6488                           ;dc_motor.c: 256:     _delay((unsigned long)((50)*(64000000/4000.0)));
  6489   001860  0E05               	movlw	5
  6490   001862  6E21               	movwf	(??_fullSpeedBackwards+1)^0,c
  6491   001864  0E0F               	movlw	15
  6492   001866  6E20               	movwf	??_fullSpeedBackwards^0,c
  6493   001868  0EF1               	movlw	241
  6494   00186A                     u4207:
  6495   00186A  2EE8               	decfsz	wreg,f,c
  6496   00186C  D7FE               	bra	u4207
  6497   00186E  2E20               	decfsz	??_fullSpeedBackwards^0,f,c
  6498   001870  D7FC               	bra	u4207
  6499   001872  2E21               	decfsz	(??_fullSpeedBackwards+1)^0,f,c
  6500   001874  D7FA               	bra	u4207
  6501   001876  F000               	nop	
  6502   001878  0012               	return		;funcret
  6503   00187A                     __end_of_fullSpeedBackwards:
  6504                           	callstack 0
  6505                           
  6506 ;; *************** function _setMotorPWM *****************
  6507 ;; Defined at:
  6508 ;;		line 64 in file "dc_motor.c"
  6509 ;; Parameters:    Size  Location     Type
  6510 ;;  m               2   21[COMRAM] PTR struct DC_motor
  6511 ;;		 -> main@motorR(9), main@motorL(9), 
  6512 ;; Auto vars:     Size  Location     Type
  6513 ;;  negDuty         1   26[COMRAM] unsigned char 
  6514 ;;  posDuty         1   25[COMRAM] unsigned char 
  6515 ;; Return value:  Size  Location     Type
  6516 ;;                  1    wreg      void 
  6517 ;; Registers used:
  6518 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6519 ;; Tracked objects:
  6520 ;;		On entry : 0/0
  6521 ;;		On exit  : 0/0
  6522 ;;		Unchanged: 0/0
  6523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6524 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6525 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6526 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6527 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6528 ;;Total ram usage:        6 bytes
  6529 ;; Hardware stack levels used: 1
  6530 ;; Hardware stack levels required when called: 8
  6531 ;; This function calls:
  6532 ;;		___lwdiv
  6533 ;;		___wmul
  6534 ;; This function is called by:
  6535 ;;		_stop
  6536 ;;		_turnLeft
  6537 ;;		_turnRight
  6538 ;;		_fullSpeedAhead
  6539 ;;		_fullSpeedBackwards
  6540 ;; This function uses a non-reentrant model
  6541 ;;
  6542                           
  6543                           	psect	text35
  6544   000FF0                     __ptext35:
  6545                           	callstack 0
  6546   000FF0                     _setMotorPWM:
  6547                           	callstack 21
  6548   000FF0                     
  6549                           ;dc_motor.c: 64: void setMotorPWM(DC_motor *m);dc_motor.c: 65: {;dc_motor.c: 66:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 68:     if(m->brakemode) {
  6550   000FF0  EE20 F002          	lfsr	2,2
  6551   000FF4  5016               	movf	setMotorPWM@m^0,w,c
  6552   000FF6  26D9               	addwf	fsr2l,f,c
  6553   000FF8  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6554   000FFA  22DA               	addwfc	fsr2h,f,c
  6555   000FFC  50DF               	movf	indf2,w,c
  6556   000FFE  B4D8               	btfsc	status,2,c
  6557   001000  EF04  F008         	goto	u1821
  6558   001004  EF06  F008         	goto	u1820
  6559   001008                     u1821:
  6560   001008  EF3A  F008         	goto	l2519
  6561   00100C                     u1820:
  6562   00100C                     
  6563                           ;dc_motor.c: 69:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  6564   00100C  C016  FFD9         	movff	setMotorPWM@m,fsr2l
  6565   001010  C017  FFDA         	movff	setMotorPWM@m+1,fsr2h
  6566   001014  50DF               	movf	indf2,w,c
  6567   001016  6E09               	movwf	___wmul@multiplier^0,c
  6568   001018  6A0A               	clrf	(___wmul@multiplier+1)^0,c
  6569   00101A  BE09               	btfsc	___wmul@multiplier^0,7,c
  6570   00101C  060A               	decf	(___wmul@multiplier+1)^0,f,c
  6571   00101E  EE20 F003          	lfsr	2,3
  6572   001022  5016               	movf	setMotorPWM@m^0,w,c
  6573   001024  26D9               	addwf	fsr2l,f,c
  6574   001026  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6575   001028  22DA               	addwfc	fsr2h,f,c
  6576   00102A  CFDE F00B          	movff	postinc2,___wmul@multiplicand
  6577   00102E  CFDD F00C          	movff	postdec2,___wmul@multiplicand+1
  6578   001032  EC7A  F011         	call	___wmul	;wreg free
  6579   001036  C009  F00F         	movff	?___wmul,___lwdiv@dividend
  6580   00103A  C00A  F010         	movff	?___wmul+1,___lwdiv@dividend+1
  6581   00103E  0E00               	movlw	0
  6582   001040  6E12               	movwf	(___lwdiv@divisor+1)^0,c
  6583   001042  0E64               	movlw	100
  6584   001044  6E11               	movwf	___lwdiv@divisor^0,c
  6585   001046  ECDA  F00E         	call	___lwdiv	;wreg free
  6586   00104A  EE20 F003          	lfsr	2,3
  6587   00104E  5016               	movf	setMotorPWM@m^0,w,c
  6588   001050  26D9               	addwf	fsr2l,f,c
  6589   001052  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6590   001054  22DA               	addwfc	fsr2h,f,c
  6591   001056  50DF               	movf	indf2,w,c
  6592   001058  6E18               	movwf	??_setMotorPWM^0,c
  6593   00105A  500F               	movf	?___lwdiv^0,w,c
  6594   00105C  5C18               	subwf	??_setMotorPWM^0,w,c
  6595   00105E  6E1A               	movwf	setMotorPWM@posDuty^0,c
  6596   001060                     
  6597                           ;dc_motor.c: 70:         negDuty=m->PWMperiod;
  6598   001060  EE20 F003          	lfsr	2,3
  6599   001064  5016               	movf	setMotorPWM@m^0,w,c
  6600   001066  26D9               	addwf	fsr2l,f,c
  6601   001068  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6602   00106A  22DA               	addwfc	fsr2h,f,c
  6603   00106C  50DF               	movf	indf2,w,c
  6604   00106E  6E1B               	movwf	setMotorPWM@negDuty^0,c
  6605                           
  6606                           ;dc_motor.c: 71:     }
  6607   001070  EF5D  F008         	goto	l2523
  6608   001074                     l2519:
  6609                           
  6610                           ;dc_motor.c: 73:         posDuty=0;
  6611   001074  0E00               	movlw	0
  6612   001076  6E1A               	movwf	setMotorPWM@posDuty^0,c
  6613   001078                     
  6614                           ;dc_motor.c: 74:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  6615   001078  C016  FFD9         	movff	setMotorPWM@m,fsr2l
  6616   00107C  C017  FFDA         	movff	setMotorPWM@m+1,fsr2h
  6617   001080  50DF               	movf	indf2,w,c
  6618   001082  6E09               	movwf	___wmul@multiplier^0,c
  6619   001084  6A0A               	clrf	(___wmul@multiplier+1)^0,c
  6620   001086  BE09               	btfsc	___wmul@multiplier^0,7,c
  6621   001088  060A               	decf	(___wmul@multiplier+1)^0,f,c
  6622   00108A  EE20 F003          	lfsr	2,3
  6623   00108E  5016               	movf	setMotorPWM@m^0,w,c
  6624   001090  26D9               	addwf	fsr2l,f,c
  6625   001092  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6626   001094  22DA               	addwfc	fsr2h,f,c
  6627   001096  CFDE F00B          	movff	postinc2,___wmul@multiplicand
  6628   00109A  CFDD F00C          	movff	postdec2,___wmul@multiplicand+1
  6629   00109E  EC7A  F011         	call	___wmul	;wreg free
  6630   0010A2  C009  F00F         	movff	?___wmul,___lwdiv@dividend
  6631   0010A6  C00A  F010         	movff	?___wmul+1,___lwdiv@dividend+1
  6632   0010AA  0E00               	movlw	0
  6633   0010AC  6E12               	movwf	(___lwdiv@divisor+1)^0,c
  6634   0010AE  0E64               	movlw	100
  6635   0010B0  6E11               	movwf	___lwdiv@divisor^0,c
  6636   0010B2  ECDA  F00E         	call	___lwdiv	;wreg free
  6637   0010B6  500F               	movf	?___lwdiv^0,w,c
  6638   0010B8  6E1B               	movwf	setMotorPWM@negDuty^0,c
  6639   0010BA                     l2523:
  6640                           
  6641                           ;dc_motor.c: 77:     if (m->direction) {
  6642   0010BA  EE20 F001          	lfsr	2,1
  6643   0010BE  5016               	movf	setMotorPWM@m^0,w,c
  6644   0010C0  26D9               	addwf	fsr2l,f,c
  6645   0010C2  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6646   0010C4  22DA               	addwfc	fsr2h,f,c
  6647   0010C6  50DF               	movf	indf2,w,c
  6648   0010C8  B4D8               	btfsc	status,2,c
  6649   0010CA  EF69  F008         	goto	u1831
  6650   0010CE  EF6B  F008         	goto	u1830
  6651   0010D2                     u1831:
  6652   0010D2  EF8D  F008         	goto	l2527
  6653   0010D6                     u1830:
  6654   0010D6                     
  6655                           ;dc_motor.c: 78:         *(m->posDutyHighByte)=posDuty;
  6656   0010D6  EE20 F005          	lfsr	2,5
  6657   0010DA  5016               	movf	setMotorPWM@m^0,w,c
  6658   0010DC  26D9               	addwf	fsr2l,f,c
  6659   0010DE  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6660   0010E0  22DA               	addwfc	fsr2h,f,c
  6661   0010E2  CFDE F018          	movff	postinc2,??_setMotorPWM
  6662   0010E6  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  6663   0010EA  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  6664   0010EE  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  6665   0010F2  C01A  FFDF         	movff	setMotorPWM@posDuty,indf2
  6666                           
  6667                           ;dc_motor.c: 79:         *(m->negDutyHighByte)=negDuty;
  6668   0010F6  EE20 F007          	lfsr	2,7
  6669   0010FA  5016               	movf	setMotorPWM@m^0,w,c
  6670   0010FC  26D9               	addwf	fsr2l,f,c
  6671   0010FE  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6672   001100  22DA               	addwfc	fsr2h,f,c
  6673   001102  CFDE F018          	movff	postinc2,??_setMotorPWM
  6674   001106  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  6675   00110A  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  6676   00110E  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  6677   001112  C01B  FFDF         	movff	setMotorPWM@negDuty,indf2
  6678                           
  6679                           ;dc_motor.c: 80:     } else {
  6680   001116  EFAD  F008         	goto	l188
  6681   00111A                     l2527:
  6682                           
  6683                           ;dc_motor.c: 81:         *(m->posDutyHighByte)=negDuty;
  6684   00111A  EE20 F005          	lfsr	2,5
  6685   00111E  5016               	movf	setMotorPWM@m^0,w,c
  6686   001120  26D9               	addwf	fsr2l,f,c
  6687   001122  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6688   001124  22DA               	addwfc	fsr2h,f,c
  6689   001126  CFDE F018          	movff	postinc2,??_setMotorPWM
  6690   00112A  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  6691   00112E  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  6692   001132  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  6693   001136  C01B  FFDF         	movff	setMotorPWM@negDuty,indf2
  6694                           
  6695                           ;dc_motor.c: 82:         *(m->negDutyHighByte)=posDuty;
  6696   00113A  EE20 F007          	lfsr	2,7
  6697   00113E  5016               	movf	setMotorPWM@m^0,w,c
  6698   001140  26D9               	addwf	fsr2l,f,c
  6699   001142  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6700   001144  22DA               	addwfc	fsr2h,f,c
  6701   001146  CFDE F018          	movff	postinc2,??_setMotorPWM
  6702   00114A  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  6703   00114E  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  6704   001152  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  6705   001156  C01A  FFDF         	movff	setMotorPWM@posDuty,indf2
  6706   00115A                     l188:
  6707   00115A  0012               	return		;funcret
  6708   00115C                     __end_of_setMotorPWM:
  6709                           	callstack 0
  6710                           
  6711 ;; *************** function ___wmul *****************
  6712 ;; Defined at:
  6713 ;;		line 15 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\Umul16.c"
  6714 ;; Parameters:    Size  Location     Type
  6715 ;;  multiplier      2    8[COMRAM] unsigned int 
  6716 ;;  multiplicand    2   10[COMRAM] unsigned int 
  6717 ;; Auto vars:     Size  Location     Type
  6718 ;;  product         2   12[COMRAM] unsigned int 
  6719 ;; Return value:  Size  Location     Type
  6720 ;;                  2    8[COMRAM] unsigned int 
  6721 ;; Registers used:
  6722 ;;		wreg, status,2, status,0, prodl, prodh
  6723 ;; Tracked objects:
  6724 ;;		On entry : 0/0
  6725 ;;		On exit  : 0/0
  6726 ;;		Unchanged: 0/0
  6727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6728 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6729 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6731 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6732 ;;Total ram usage:        6 bytes
  6733 ;; Hardware stack levels used: 1
  6734 ;; Hardware stack levels required when called: 7
  6735 ;; This function calls:
  6736 ;;		Nothing
  6737 ;; This function is called by:
  6738 ;;		_setMotorPWM
  6739 ;; This function uses a non-reentrant model
  6740 ;;
  6741                           
  6742                           	psect	text36
  6743   0022F4                     __ptext36:
  6744                           	callstack 0
  6745   0022F4                     ___wmul:
  6746                           	callstack 21
  6747   0022F4  5009               	movf	___wmul@multiplier^0,w,c
  6748   0022F6  020B               	mulwf	___wmul@multiplicand^0,c
  6749   0022F8  CFF3 F00D          	movff	prodl,___wmul@product
  6750   0022FC  CFF4 F00E          	movff	prodh,___wmul@product+1
  6751   002300  5009               	movf	___wmul@multiplier^0,w,c
  6752   002302  020C               	mulwf	(___wmul@multiplicand+1)^0,c
  6753   002304  50F3               	movf	243,w,c
  6754   002306  260E               	addwf	(___wmul@product+1)^0,f,c
  6755   002308  500A               	movf	(___wmul@multiplier+1)^0,w,c
  6756   00230A  020B               	mulwf	___wmul@multiplicand^0,c
  6757   00230C  50F3               	movf	243,w,c
  6758   00230E  260E               	addwf	(___wmul@product+1)^0,f,c
  6759   002310  C00D  F009         	movff	___wmul@product,?___wmul
  6760   002314  C00E  F00A         	movff	___wmul@product+1,?___wmul+1
  6761   002318  0012               	return		;funcret
  6762   00231A                     __end_of___wmul:
  6763                           	callstack 0
  6764                           
  6765 ;; *************** function ___lwdiv *****************
  6766 ;; Defined at:
  6767 ;;		line 7 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\lwdiv.c"
  6768 ;; Parameters:    Size  Location     Type
  6769 ;;  dividend        2   14[COMRAM] unsigned int 
  6770 ;;  divisor         2   16[COMRAM] unsigned int 
  6771 ;; Auto vars:     Size  Location     Type
  6772 ;;  quotient        2   18[COMRAM] unsigned int 
  6773 ;;  counter         1   20[COMRAM] unsigned char 
  6774 ;; Return value:  Size  Location     Type
  6775 ;;                  2   14[COMRAM] unsigned int 
  6776 ;; Registers used:
  6777 ;;		wreg, status,2, status,0
  6778 ;; Tracked objects:
  6779 ;;		On entry : 0/0
  6780 ;;		On exit  : 0/0
  6781 ;;		Unchanged: 0/0
  6782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6783 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6784 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6786 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6787 ;;Total ram usage:        7 bytes
  6788 ;; Hardware stack levels used: 1
  6789 ;; Hardware stack levels required when called: 7
  6790 ;; This function calls:
  6791 ;;		Nothing
  6792 ;; This function is called by:
  6793 ;;		_setMotorPWM
  6794 ;; This function uses a non-reentrant model
  6795 ;;
  6796                           
  6797                           	psect	text37
  6798   001DB4                     __ptext37:
  6799                           	callstack 0
  6800   001DB4                     ___lwdiv:
  6801                           	callstack 21
  6802   001DB4  0E00               	movlw	0
  6803   001DB6  6E14               	movwf	(___lwdiv@quotient+1)^0,c
  6804   001DB8  0E00               	movlw	0
  6805   001DBA  6E13               	movwf	___lwdiv@quotient^0,c
  6806   001DBC  5011               	movf	___lwdiv@divisor^0,w,c
  6807   001DBE  1012               	iorwf	(___lwdiv@divisor+1)^0,w,c
  6808   001DC0  B4D8               	btfsc	status,2,c
  6809   001DC2  EFE5  F00E         	goto	u1791
  6810   001DC6  EFE7  F00E         	goto	u1790
  6811   001DCA                     u1791:
  6812   001DCA  EF0F  F00F         	goto	l1081
  6813   001DCE                     u1790:
  6814   001DCE  0E01               	movlw	1
  6815   001DD0  6E15               	movwf	___lwdiv@counter^0,c
  6816   001DD2  EFEF  F00E         	goto	l2487
  6817   001DD6                     l2485:
  6818   001DD6  90D8               	bcf	status,0,c
  6819   001DD8  3611               	rlcf	___lwdiv@divisor^0,f,c
  6820   001DDA  3612               	rlcf	(___lwdiv@divisor+1)^0,f,c
  6821   001DDC  2A15               	incf	___lwdiv@counter^0,f,c
  6822   001DDE                     l2487:
  6823   001DDE  AE12               	btfss	(___lwdiv@divisor+1)^0,7,c
  6824   001DE0  EFF4  F00E         	goto	u1801
  6825   001DE4  EFF6  F00E         	goto	u1800
  6826   001DE8                     u1801:
  6827   001DE8  EFEB  F00E         	goto	l2485
  6828   001DEC                     u1800:
  6829   001DEC                     l2489:
  6830   001DEC  90D8               	bcf	status,0,c
  6831   001DEE  3613               	rlcf	___lwdiv@quotient^0,f,c
  6832   001DF0  3614               	rlcf	(___lwdiv@quotient+1)^0,f,c
  6833   001DF2  5011               	movf	___lwdiv@divisor^0,w,c
  6834   001DF4  5C0F               	subwf	___lwdiv@dividend^0,w,c
  6835   001DF6  5012               	movf	(___lwdiv@divisor+1)^0,w,c
  6836   001DF8  5810               	subwfb	(___lwdiv@dividend+1)^0,w,c
  6837   001DFA  A0D8               	btfss	status,0,c
  6838   001DFC  EF02  F00F         	goto	u1811
  6839   001E00  EF04  F00F         	goto	u1810
  6840   001E04                     u1811:
  6841   001E04  EF09  F00F         	goto	l2497
  6842   001E08                     u1810:
  6843   001E08  5011               	movf	___lwdiv@divisor^0,w,c
  6844   001E0A  5E0F               	subwf	___lwdiv@dividend^0,f,c
  6845   001E0C  5012               	movf	(___lwdiv@divisor+1)^0,w,c
  6846   001E0E  5A10               	subwfb	(___lwdiv@dividend+1)^0,f,c
  6847   001E10  8013               	bsf	___lwdiv@quotient^0,0,c
  6848   001E12                     l2497:
  6849   001E12  90D8               	bcf	status,0,c
  6850   001E14  3212               	rrcf	(___lwdiv@divisor+1)^0,f,c
  6851   001E16  3211               	rrcf	___lwdiv@divisor^0,f,c
  6852   001E18  2E15               	decfsz	___lwdiv@counter^0,f,c
  6853   001E1A  EFF6  F00E         	goto	l2489
  6854   001E1E                     l1081:
  6855   001E1E  C013  F00F         	movff	___lwdiv@quotient,?___lwdiv
  6856   001E22  C014  F010         	movff	___lwdiv@quotient+1,?___lwdiv+1
  6857   001E26  0012               	return		;funcret
  6858   001E28                     __end_of___lwdiv:
  6859                           	callstack 0
  6860                           
  6861 ;; *************** function _LED_init *****************
  6862 ;; Defined at:
  6863 ;;		line 7 in file "LED_Buttons.c"
  6864 ;; Parameters:    Size  Location     Type
  6865 ;;		None
  6866 ;; Auto vars:     Size  Location     Type
  6867 ;;		None
  6868 ;; Return value:  Size  Location     Type
  6869 ;;                  1    wreg      void 
  6870 ;; Registers used:
  6871 ;;		None
  6872 ;; Tracked objects:
  6873 ;;		On entry : 0/0
  6874 ;;		On exit  : 0/0
  6875 ;;		Unchanged: 0/0
  6876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6880 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6881 ;;Total ram usage:        0 bytes
  6882 ;; Hardware stack levels used: 1
  6883 ;; Hardware stack levels required when called: 7
  6884 ;; This function calls:
  6885 ;;		Nothing
  6886 ;; This function is called by:
  6887 ;;		_main
  6888 ;; This function uses a non-reentrant model
  6889 ;;
  6890                           
  6891                           	psect	text38
  6892   0023F6                     __ptext38:
  6893                           	callstack 0
  6894   0023F6                     _LED_init:
  6895                           	callstack 23
  6896   0023F6                     
  6897                           ;LED_Buttons.c: 8:     TRISGbits.TRISG1 = 0;
  6898   0023F6  9287               	bcf	135,1,c	;volatile
  6899                           
  6900                           ;LED_Buttons.c: 9:     TRISAbits.TRISA4 = 0;
  6901   0023F8  9881               	bcf	129,4,c	;volatile
  6902                           
  6903                           ;LED_Buttons.c: 10:     TRISFbits.TRISF7 = 0;
  6904   0023FA  9E86               	bcf	134,7,c	;volatile
  6905                           
  6906                           ;LED_Buttons.c: 12:     LATHbits.LATH3 = 0;
  6907   0023FC  9680               	bcf	128,3,c	;volatile
  6908                           
  6909                           ;LED_Buttons.c: 13:     TRISHbits.TRISH3 = 0;
  6910   0023FE  9688               	bcf	136,3,c	;volatile
  6911   002400  0012               	return		;funcret
  6912   002402                     __end_of_LED_init:
  6913                           	callstack 0
  6914                           
  6915 ;; *************** function _Interrupts_init *****************
  6916 ;; Defined at:
  6917 ;;		line 12 in file "interrupts.c"
  6918 ;; Parameters:    Size  Location     Type
  6919 ;;		None
  6920 ;; Auto vars:     Size  Location     Type
  6921 ;;		None
  6922 ;; Return value:  Size  Location     Type
  6923 ;;                  1    wreg      void 
  6924 ;; Registers used:
  6925 ;;		wreg, status,2, status,0, cstack
  6926 ;; Tracked objects:
  6927 ;;		On entry : 0/0
  6928 ;;		On exit  : 0/0
  6929 ;;		Unchanged: 0/0
  6930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6935 ;;Total ram usage:        0 bytes
  6936 ;; Hardware stack levels used: 1
  6937 ;; Hardware stack levels required when called: 12
  6938 ;; This function calls:
  6939 ;;		_interrupts_clear_colorclick
  6940 ;; This function is called by:
  6941 ;;		_main
  6942 ;; This function uses a non-reentrant model
  6943 ;;
  6944                           
  6945                           	psect	text39
  6946   00231A                     __ptext39:
  6947                           	callstack 0
  6948   00231A                     _Interrupts_init:
  6949                           	callstack 18
  6950   00231A                     
  6951                           ;interrupts.c: 18:     TRISBbits.TRISB1 = 1;
  6952   00231A  8282               	bsf	130,1,c	;volatile
  6953                           
  6954                           ;interrupts.c: 19:     ANSELBbits.ANSELB1 = 0;
  6955   00231C  010E               	movlb	14	; () banked
  6956   00231E  939A               	bcf	154,1,b	;volatile
  6957   002320                     
  6958                           ; BSR set to: 14
  6959                           ;interrupts.c: 20:     INT1PPS = 0x09;
  6960   002320  0E09               	movlw	9
  6961   002322  010D               	movlb	13	; () banked
  6962   002324  6FF1               	movwf	241,b	;volatile
  6963   002326                     
  6964                           ; BSR set to: 13
  6965                           ;interrupts.c: 21:     PIE0bits.INT1IE = 1;
  6966   002326  010E               	movlb	14	; () banked
  6967   002328  8329               	bsf	41,1,b	;volatile
  6968   00232A                     
  6969                           ; BSR set to: 14
  6970                           ;interrupts.c: 22:     IPR0bits.INT1IP = 1;
  6971   00232A  831F               	bsf	31,1,b	;volatile
  6972   00232C                     
  6973                           ; BSR set to: 14
  6974                           ;interrupts.c: 23:     INTCONbits.INT1EDG = 0;
  6975   00232C  92F2               	bcf	242,1,c	;volatile
  6976   00232E                     
  6977                           ; BSR set to: 14
  6978                           ;interrupts.c: 26:     PIE0bits.TMR0IE=1;
  6979   00232E  8B29               	bsf	41,5,b	;volatile
  6980   002330                     
  6981                           ; BSR set to: 14
  6982                           ;interrupts.c: 27:     IPR0bits.TMR0IP = 0;
  6983   002330  9B1F               	bcf	31,5,b	;volatile
  6984   002332                     
  6985                           ; BSR set to: 14
  6986                           ;interrupts.c: 30:     PIE4bits.RC4IE=1;
  6987   002332  872D               	bsf	45,3,b	;volatile
  6988   002334                     
  6989                           ; BSR set to: 14
  6990                           ;interrupts.c: 32:     interrupts_clear_colorclick();
  6991   002334  ECE1  F011         	call	_interrupts_clear_colorclick	;wreg free
  6992   002338                     
  6993                           ;interrupts.c: 34:     INTCONbits.IPEN = 1;
  6994   002338  8AF2               	bsf	242,5,c	;volatile
  6995   00233A                     
  6996                           ;interrupts.c: 35:     INTCONbits.PEIE = 1;
  6997   00233A  8CF2               	bsf	242,6,c	;volatile
  6998   00233C                     
  6999                           ;interrupts.c: 36:     INTCONbits.GIE=1;
  7000   00233C  8EF2               	bsf	242,7,c	;volatile
  7001   00233E  0012               	return		;funcret
  7002   002340                     __end_of_Interrupts_init:
  7003                           	callstack 0
  7004                           
  7005 ;; *************** function _interrupts_clear_colorclick *****************
  7006 ;; Defined at:
  7007 ;;		line 57 in file "interrupts.c"
  7008 ;; Parameters:    Size  Location     Type
  7009 ;;		None
  7010 ;; Auto vars:     Size  Location     Type
  7011 ;;		None
  7012 ;; Return value:  Size  Location     Type
  7013 ;;                  1    wreg      void 
  7014 ;; Registers used:
  7015 ;;		wreg, status,2, status,0, cstack
  7016 ;; Tracked objects:
  7017 ;;		On entry : 0/0
  7018 ;;		On exit  : 0/0
  7019 ;;		Unchanged: 0/0
  7020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7024 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7025 ;;Total ram usage:        0 bytes
  7026 ;; Hardware stack levels used: 1
  7027 ;; Hardware stack levels required when called: 11
  7028 ;; This function calls:
  7029 ;;		_I2C_2_Master_Start
  7030 ;;		_I2C_2_Master_Stop
  7031 ;;		_I2C_2_Master_Write
  7032 ;;		_init_colorclick_interrupts
  7033 ;; This function is called by:
  7034 ;;		_Interrupts_init
  7035 ;; This function uses a non-reentrant model
  7036 ;;
  7037                           
  7038                           	psect	text40
  7039   0023C2                     __ptext40:
  7040                           	callstack 0
  7041   0023C2                     _interrupts_clear_colorclick:
  7042                           	callstack 18
  7043   0023C2                     
  7044                           ;interrupts.c: 59:     I2C_2_Master_Start();
  7045   0023C2  EC17  F012         	call	_I2C_2_Master_Start	;wreg free
  7046                           
  7047                           ;interrupts.c: 60:     I2C_2_Master_Write(0x52 | 0x00);
  7048   0023C6  0E52               	movlw	82
  7049   0023C8  EC01  F012         	call	_I2C_2_Master_Write
  7050                           
  7051                           ;interrupts.c: 61:     I2C_2_Master_Write(0b11100110);
  7052   0023CC  0EE6               	movlw	230
  7053   0023CE  EC01  F012         	call	_I2C_2_Master_Write
  7054                           
  7055                           ;interrupts.c: 62:     I2C_2_Master_Stop();
  7056   0023D2  EC12  F012         	call	_I2C_2_Master_Stop	;wreg free
  7057                           
  7058                           ;interrupts.c: 64:     init_colorclick_interrupts();
  7059   0023D6  EC97  F010         	call	_init_colorclick_interrupts	;wreg free
  7060   0023DA  0012               	return		;funcret
  7061   0023DC                     __end_of_interrupts_clear_colorclick:
  7062                           	callstack 0
  7063                           
  7064 ;; *************** function _init_colorclick_interrupts *****************
  7065 ;; Defined at:
  7066 ;;		line 43 in file "interrupts.c"
  7067 ;; Parameters:    Size  Location     Type
  7068 ;;		None
  7069 ;; Auto vars:     Size  Location     Type
  7070 ;;		None
  7071 ;; Return value:  Size  Location     Type
  7072 ;;                  1    wreg      void 
  7073 ;; Registers used:
  7074 ;;		wreg, status,2, status,0, cstack
  7075 ;; Tracked objects:
  7076 ;;		On entry : 0/0
  7077 ;;		On exit  : 0/0
  7078 ;;		Unchanged: 0/0
  7079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7082 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7083 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7084 ;;Total ram usage:        1 bytes
  7085 ;; Hardware stack levels used: 1
  7086 ;; Hardware stack levels required when called: 10
  7087 ;; This function calls:
  7088 ;;		_color_writetoaddr
  7089 ;; This function is called by:
  7090 ;;		_interrupts_clear_colorclick
  7091 ;; This function uses a non-reentrant model
  7092 ;;
  7093                           
  7094                           	psect	text41
  7095   00212E                     __ptext41:
  7096                           	callstack 0
  7097   00212E                     _init_colorclick_interrupts:
  7098                           	callstack 18
  7099   00212E                     
  7100                           ;interrupts.c: 45:     color_writetoaddr(0x00,0b10011);
  7101   00212E  0E13               	movlw	19
  7102   002130  6E0B               	movwf	color_writetoaddr@value^0,c
  7103   002132  0E00               	movlw	0
  7104   002134  ECC1  F011         	call	_color_writetoaddr
  7105   002138                     
  7106                           ;interrupts.c: 46:     _delay((unsigned long)((3)*(64000000/4000.0)));
  7107   002138  0E3F               	movlw	63
  7108   00213A  6E0D               	movwf	??_init_colorclick_interrupts^0,c
  7109   00213C  0E55               	movlw	85
  7110   00213E                     u4217:
  7111   00213E  2EE8               	decfsz	wreg,f,c
  7112   002140  D7FE               	bra	u4217
  7113   002142  2E0D               	decfsz	??_init_colorclick_interrupts^0,f,c
  7114   002144  D7FC               	bra	u4217
  7115   002146  F000               	nop	
  7116   002148                     
  7117                           ;interrupts.c: 48:     color_writetoaddr(0x0C,0b0100);
  7118   002148  0E04               	movlw	4
  7119   00214A  6E0B               	movwf	color_writetoaddr@value^0,c
  7120   00214C  0E0C               	movlw	12
  7121   00214E  ECC1  F011         	call	_color_writetoaddr
  7122   002152                     
  7123                           ;interrupts.c: 49:     color_writetoaddr(0x04,(int_threshold_low & 0xFF));
  7124   002152  C04F  F00B         	movff	_int_threshold_low,color_writetoaddr@value
  7125   002156  0E04               	movlw	4
  7126   002158  ECC1  F011         	call	_color_writetoaddr
  7127   00215C                     
  7128                           ;interrupts.c: 50:     color_writetoaddr(0x05,(int_threshold_low >> 8));
  7129   00215C  5050               	movf	(_int_threshold_low+1)^0,w,c
  7130   00215E  6E0B               	movwf	color_writetoaddr@value^0,c
  7131   002160  0E05               	movlw	5
  7132   002162  ECC1  F011         	call	_color_writetoaddr
  7133   002166                     
  7134                           ;interrupts.c: 51:     color_writetoaddr(0x06,(int_threshold_high & 0xFF));
  7135   002166  C055  F00B         	movff	_int_threshold_high,color_writetoaddr@value
  7136   00216A  0E06               	movlw	6
  7137   00216C  ECC1  F011         	call	_color_writetoaddr
  7138   002170                     
  7139                           ;interrupts.c: 52:     color_writetoaddr(0x07,(int_threshold_high >> 8));
  7140   002170  5056               	movf	(_int_threshold_high+1)^0,w,c
  7141   002172  6E0B               	movwf	color_writetoaddr@value^0,c
  7142   002174  0E07               	movlw	7
  7143   002176  ECC1  F011         	call	_color_writetoaddr
  7144   00217A  0012               	return		;funcret
  7145   00217C                     __end_of_init_colorclick_interrupts:
  7146                           	callstack 0
  7147                           
  7148 ;; *************** function _color_writetoaddr *****************
  7149 ;; Defined at:
  7150 ;;		line 22 in file "color.c"
  7151 ;; Parameters:    Size  Location     Type
  7152 ;;  address         1    wreg     unsigned char 
  7153 ;;  value           1   10[COMRAM] unsigned char 
  7154 ;; Auto vars:     Size  Location     Type
  7155 ;;  address         1   11[COMRAM] unsigned char 
  7156 ;; Return value:  Size  Location     Type
  7157 ;;                  1    wreg      void 
  7158 ;; Registers used:
  7159 ;;		wreg, status,2, status,0, cstack
  7160 ;; Tracked objects:
  7161 ;;		On entry : 0/0
  7162 ;;		On exit  : 0/0
  7163 ;;		Unchanged: 0/0
  7164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7165 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7166 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7168 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7169 ;;Total ram usage:        2 bytes
  7170 ;; Hardware stack levels used: 1
  7171 ;; Hardware stack levels required when called: 9
  7172 ;; This function calls:
  7173 ;;		_I2C_2_Master_Start
  7174 ;;		_I2C_2_Master_Stop
  7175 ;;		_I2C_2_Master_Write
  7176 ;; This function is called by:
  7177 ;;		_color_click_init
  7178 ;;		_init_colorclick_interrupts
  7179 ;; This function uses a non-reentrant model
  7180 ;;
  7181                           
  7182                           	psect	text42
  7183   002382                     __ptext42:
  7184                           	callstack 0
  7185   002382                     _color_writetoaddr:
  7186                           	callstack 20
  7187                           
  7188                           ;incstack = 0
  7189                           ;color_writetoaddr@address stored from wreg
  7190   002382  6E0C               	movwf	color_writetoaddr@address^0,c
  7191   002384                     
  7192                           ;color.c: 23:     I2C_2_Master_Start();
  7193   002384  EC17  F012         	call	_I2C_2_Master_Start	;wreg free
  7194                           
  7195                           ;color.c: 24:     I2C_2_Master_Write(0x52 | 0x00);
  7196   002388  0E52               	movlw	82
  7197   00238A  EC01  F012         	call	_I2C_2_Master_Write
  7198                           
  7199                           ;color.c: 25:     I2C_2_Master_Write(0x80 | address);
  7200   00238E  500C               	movf	color_writetoaddr@address^0,w,c
  7201   002390  0980               	iorlw	128
  7202   002392  EC01  F012         	call	_I2C_2_Master_Write
  7203                           
  7204                           ;color.c: 26:     I2C_2_Master_Write(value);
  7205   002396  500B               	movf	color_writetoaddr@value^0,w,c
  7206   002398  EC01  F012         	call	_I2C_2_Master_Write
  7207                           
  7208                           ;color.c: 27:     I2C_2_Master_Stop();
  7209   00239C  EC12  F012         	call	_I2C_2_Master_Stop	;wreg free
  7210   0023A0  0012               	return		;funcret
  7211   0023A2                     __end_of_color_writetoaddr:
  7212                           	callstack 0
  7213                           
  7214 ;; *************** function _I2C_2_Master_Write *****************
  7215 ;; Defined at:
  7216 ;;		line 45 in file "i2c.c"
  7217 ;; Parameters:    Size  Location     Type
  7218 ;;  data_byte       1    wreg     unsigned char 
  7219 ;; Auto vars:     Size  Location     Type
  7220 ;;  data_byte       1    9[COMRAM] unsigned char 
  7221 ;; Return value:  Size  Location     Type
  7222 ;;                  1    wreg      void 
  7223 ;; Registers used:
  7224 ;;		wreg, status,2, status,0, cstack
  7225 ;; Tracked objects:
  7226 ;;		On entry : 0/0
  7227 ;;		On exit  : 0/0
  7228 ;;		Unchanged: 0/0
  7229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7231 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7233 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7234 ;;Total ram usage:        1 bytes
  7235 ;; Hardware stack levels used: 1
  7236 ;; Hardware stack levels required when called: 8
  7237 ;; This function calls:
  7238 ;;		_I2C_2_Master_Idle
  7239 ;; This function is called by:
  7240 ;;		_color_writetoaddr
  7241 ;;		_color_read_Red
  7242 ;;		_color_read_Green
  7243 ;;		_color_read_Blue
  7244 ;;		_color_read_Clear
  7245 ;;		_interrupts_clear_colorclick
  7246 ;; This function uses a non-reentrant model
  7247 ;;
  7248                           
  7249                           	psect	text43
  7250   002402                     __ptext43:
  7251                           	callstack 0
  7252   002402                     _I2C_2_Master_Write:
  7253                           	callstack 20
  7254                           
  7255                           ;incstack = 0
  7256                           ;I2C_2_Master_Write@data_byte stored from wreg
  7257   002402  6E0A               	movwf	I2C_2_Master_Write@data_byte^0,c
  7258   002404                     
  7259                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  7260   002404  EC52  F011         	call	_I2C_2_Master_Idle	;wreg free
  7261   002408                     
  7262                           ;i2c.c: 48:   SSP2BUF = data_byte;
  7263   002408  C00A  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  7264   00240C  0012               	return		;funcret
  7265   00240E                     __end_of_I2C_2_Master_Write:
  7266                           	callstack 0
  7267                           
  7268 ;; *************** function _I2C_2_Master_Stop *****************
  7269 ;; Defined at:
  7270 ;;		line 39 in file "i2c.c"
  7271 ;; Parameters:    Size  Location     Type
  7272 ;;		None
  7273 ;; Auto vars:     Size  Location     Type
  7274 ;;		None
  7275 ;; Return value:  Size  Location     Type
  7276 ;;                  1    wreg      void 
  7277 ;; Registers used:
  7278 ;;		wreg, status,2, status,0, cstack
  7279 ;; Tracked objects:
  7280 ;;		On entry : 0/0
  7281 ;;		On exit  : 0/0
  7282 ;;		Unchanged: 0/0
  7283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7287 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7288 ;;Total ram usage:        0 bytes
  7289 ;; Hardware stack levels used: 1
  7290 ;; Hardware stack levels required when called: 8
  7291 ;; This function calls:
  7292 ;;		_I2C_2_Master_Idle
  7293 ;; This function is called by:
  7294 ;;		_color_writetoaddr
  7295 ;;		_color_read_Red
  7296 ;;		_color_read_Green
  7297 ;;		_color_read_Blue
  7298 ;;		_color_read_Clear
  7299 ;;		_interrupts_clear_colorclick
  7300 ;; This function uses a non-reentrant model
  7301 ;;
  7302                           
  7303                           	psect	text44
  7304   002424                     __ptext44:
  7305                           	callstack 0
  7306   002424                     _I2C_2_Master_Stop:
  7307                           	callstack 20
  7308   002424                     
  7309                           ;i2c.c: 41:   I2C_2_Master_Idle();
  7310   002424  EC52  F011         	call	_I2C_2_Master_Idle	;wreg free
  7311   002428                     
  7312                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  7313   002428  010E               	movlb	14	; () banked
  7314   00242A  85DA               	bsf	218,2,b	;volatile
  7315   00242C                     
  7316                           ; BSR set to: 14
  7317   00242C  0012               	return		;funcret
  7318   00242E                     __end_of_I2C_2_Master_Stop:
  7319                           	callstack 0
  7320                           
  7321 ;; *************** function _I2C_2_Master_Start *****************
  7322 ;; Defined at:
  7323 ;;		line 27 in file "i2c.c"
  7324 ;; Parameters:    Size  Location     Type
  7325 ;;		None
  7326 ;; Auto vars:     Size  Location     Type
  7327 ;;		None
  7328 ;; Return value:  Size  Location     Type
  7329 ;;                  1    wreg      void 
  7330 ;; Registers used:
  7331 ;;		wreg, status,2, status,0, cstack
  7332 ;; Tracked objects:
  7333 ;;		On entry : 0/0
  7334 ;;		On exit  : 0/0
  7335 ;;		Unchanged: 0/0
  7336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7340 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7341 ;;Total ram usage:        0 bytes
  7342 ;; Hardware stack levels used: 1
  7343 ;; Hardware stack levels required when called: 8
  7344 ;; This function calls:
  7345 ;;		_I2C_2_Master_Idle
  7346 ;; This function is called by:
  7347 ;;		_color_writetoaddr
  7348 ;;		_color_read_Red
  7349 ;;		_color_read_Green
  7350 ;;		_color_read_Blue
  7351 ;;		_color_read_Clear
  7352 ;;		_interrupts_clear_colorclick
  7353 ;; This function uses a non-reentrant model
  7354 ;;
  7355                           
  7356                           	psect	text45
  7357   00242E                     __ptext45:
  7358                           	callstack 0
  7359   00242E                     _I2C_2_Master_Start:
  7360                           	callstack 20
  7361   00242E                     
  7362                           ;i2c.c: 29:   I2C_2_Master_Idle();
  7363   00242E  EC52  F011         	call	_I2C_2_Master_Idle	;wreg free
  7364   002432                     
  7365                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  7366   002432  010E               	movlb	14	; () banked
  7367   002434  81DA               	bsf	218,0,b	;volatile
  7368   002436                     
  7369                           ; BSR set to: 14
  7370   002436  0012               	return		;funcret
  7371   002438                     __end_of_I2C_2_Master_Start:
  7372                           	callstack 0
  7373                           
  7374 ;; *************** function _I2C_2_Master_Idle *****************
  7375 ;; Defined at:
  7376 ;;		line 22 in file "i2c.c"
  7377 ;; Parameters:    Size  Location     Type
  7378 ;;		None
  7379 ;; Auto vars:     Size  Location     Type
  7380 ;;		None
  7381 ;; Return value:  Size  Location     Type
  7382 ;;                  1    wreg      void 
  7383 ;; Registers used:
  7384 ;;		wreg, status,2, status,0
  7385 ;; Tracked objects:
  7386 ;;		On entry : 0/0
  7387 ;;		On exit  : 0/0
  7388 ;;		Unchanged: 0/0
  7389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7392 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7393 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7394 ;;Total ram usage:        1 bytes
  7395 ;; Hardware stack levels used: 1
  7396 ;; Hardware stack levels required when called: 7
  7397 ;; This function calls:
  7398 ;;		Nothing
  7399 ;; This function is called by:
  7400 ;;		_I2C_2_Master_Start
  7401 ;;		_I2C_2_Master_RepStart
  7402 ;;		_I2C_2_Master_Stop
  7403 ;;		_I2C_2_Master_Write
  7404 ;;		_I2C_2_Master_Read
  7405 ;; This function uses a non-reentrant model
  7406 ;;
  7407                           
  7408                           	psect	text46
  7409   0022A4                     __ptext46:
  7410                           	callstack 0
  7411   0022A4                     _I2C_2_Master_Idle:
  7412                           	callstack 20
  7413   0022A4                     l90:
  7414   0022A4  010E               	movlb	14	; () banked
  7415   0022A6  B5D8               	btfsc	216,2,b	;volatile
  7416   0022A8  EF58  F011         	goto	u1771
  7417   0022AC  EF5A  F011         	goto	u1770
  7418   0022B0                     u1771:
  7419   0022B0  EF52  F011         	goto	l90
  7420   0022B4                     u1770:
  7421   0022B4                     
  7422                           ; BSR set to: 14
  7423   0022B4  CEDA F009          	movff	3802,??_I2C_2_Master_Idle	;volatile
  7424   0022B8  0E1F               	movlw	31
  7425   0022BA  1609               	andwf	??_I2C_2_Master_Idle^0,f,c
  7426   0022BC  A4D8               	btfss	status,2,c
  7427   0022BE  EF63  F011         	goto	u1781
  7428   0022C2  EF65  F011         	goto	u1780
  7429   0022C6                     u1781:
  7430   0022C6  EF52  F011         	goto	l90
  7431   0022CA                     u1780:
  7432   0022CA                     
  7433                           ; BSR set to: 14
  7434   0022CA  0012               	return		;funcret
  7435   0022CC                     __end_of_I2C_2_Master_Idle:
  7436                           	callstack 0
  7437                           
  7438 ;; *************** function _LowISR *****************
  7439 ;; Defined at:
  7440 ;;		line 74 in file "interrupts.c"
  7441 ;; Parameters:    Size  Location     Type
  7442 ;;		None
  7443 ;; Auto vars:     Size  Location     Type
  7444 ;;		None
  7445 ;; Return value:  Size  Location     Type
  7446 ;;                  1    wreg      void 
  7447 ;; Registers used:
  7448 ;;		wreg, status,2
  7449 ;; Tracked objects:
  7450 ;;		On entry : 0/0
  7451 ;;		On exit  : 0/0
  7452 ;;		Unchanged: 0/0
  7453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7456 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7457 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7458 ;;Total ram usage:        3 bytes
  7459 ;; Hardware stack levels used: 1
  7460 ;; Hardware stack levels required when called: 6
  7461 ;; This function calls:
  7462 ;;		Nothing
  7463 ;; This function is called by:
  7464 ;;		Interrupt level 1
  7465 ;; This function uses a non-reentrant model
  7466 ;;
  7467                           
  7468                           	psect	intcodelo
  7469   000018                     __pintcodelo:
  7470                           	callstack 0
  7471   000018                     _LowISR:
  7472                           	callstack 18
  7473                           
  7474                           ; BSR set to: 14
  7475                           ;incstack = 0
  7476   000018  8057               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  7477   00001A  CFD8 F006          	movff	status,??_LowISR
  7478   00001E  CFE8 F007          	movff	wreg,??_LowISR+1
  7479   000022  CFE0 F008          	movff	bsr,??_LowISR+2
  7480   000026                     
  7481                           ;interrupts.c: 77:     if(PIR0bits.TMR0IF){
  7482   000026  010E               	movlb	14	; () banked
  7483   000028  AB33               	btfss	51,5,b	;volatile
  7484   00002A  EF19  F000         	goto	i1u338_21
  7485   00002E  EF1B  F000         	goto	i1u338_20
  7486   000032                     i1u338_21:
  7487   000032  EF24  F000         	goto	i1l323
  7488   000036                     i1u338_20:
  7489   000036                     
  7490                           ; BSR set to: 14
  7491                           ;interrupts.c: 78:         TMR0H = 0b11000010;
  7492   000036  0EC2               	movlw	194
  7493   000038  6ED4               	movwf	212,c	;volatile
  7494                           
  7495                           ;interrupts.c: 79:         TMR0L = 0b11110110;
  7496   00003A  0EF6               	movlw	246
  7497   00003C  6ED3               	movwf	211,c	;volatile
  7498                           
  7499                           ;interrupts.c: 80:         tmr_ovf = 1;
  7500   00003E  0E01               	movlw	1
  7501   000040  0100               	movlb	0	; () banked
  7502   000042  6FB0               	movwf	_tmr_ovf& (0+255),b
  7503   000044                     
  7504                           ; BSR set to: 0
  7505                           ;interrupts.c: 81:         PIR0bits.TMR0IF=0;
  7506   000044  010E               	movlb	14	; () banked
  7507   000046  9B33               	bcf	51,5,b	;volatile
  7508   000048                     i1l323:
  7509                           
  7510                           ; BSR set to: 14
  7511   000048  C008  FFE0         	movff	??_LowISR+2,bsr
  7512   00004C  C007  FFE8         	movff	??_LowISR+1,wreg
  7513   000050  C006  FFD8         	movff	??_LowISR,status
  7514   000054  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  7515   000056  0010               	retfie	
  7516   000058                     __end_of_LowISR:
  7517                           	callstack 0
  7518                           
  7519 ;; *************** function _HighISR *****************
  7520 ;; Defined at:
  7521 ;;		line 88 in file "interrupts.c"
  7522 ;; Parameters:    Size  Location     Type
  7523 ;;		None
  7524 ;; Auto vars:     Size  Location     Type
  7525 ;;		None
  7526 ;; Return value:  Size  Location     Type
  7527 ;;                  1    wreg      void 
  7528 ;; Registers used:
  7529 ;;		wreg, status,2, status,0, cstack
  7530 ;; Tracked objects:
  7531 ;;		On entry : 0/0
  7532 ;;		On exit  : 0/0
  7533 ;;		Unchanged: 0/0
  7534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7539 ;;Total ram usage:        0 bytes
  7540 ;; Hardware stack levels used: 1
  7541 ;; Hardware stack levels required when called: 5
  7542 ;; This function calls:
  7543 ;;		i2_interrupts_clear_colorclick
  7544 ;; This function is called by:
  7545 ;;		Interrupt level 2
  7546 ;; This function uses a non-reentrant model
  7547 ;;
  7548                           
  7549                           	psect	intcode
  7550   000008                     __pintcode:
  7551                           	callstack 0
  7552   000008                     _HighISR:
  7553                           	callstack 18
  7554                           
  7555                           ; BSR set to: 14
  7556                           ;incstack = 0
  7557   000008  8257               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  7558   00000A  EFA0  F011         	goto	int_func
  7559                           
  7560                           	psect	intcode_body
  7561   002340                     __pintcode_body:
  7562                           	callstack 18
  7563   002340                     int_func:
  7564                           	callstack 18
  7565   002340                     
  7566                           ;interrupts.c: 115:     if(PIR0bits.INT1IF){
  7567   002340  010E               	movlb	14	; () banked
  7568   002342  A333               	btfss	51,1,b	;volatile
  7569   002344  EFA6  F011         	goto	i2u339_41
  7570   002348  EFA8  F011         	goto	i2u339_40
  7571   00234C                     i2u339_41:
  7572   00234C  EFAF  F011         	goto	i2l331
  7573   002350                     i2u339_40:
  7574   002350                     
  7575                           ; BSR set to: 14
  7576                           ;interrupts.c: 116:         color_flag = 1;
  7577   002350  0E01               	movlw	1
  7578   002352  0100               	movlb	0	; () banked
  7579   002354  6FB1               	movwf	_color_flag& (0+255),b
  7580   002356                     
  7581                           ; BSR set to: 0
  7582                           ;interrupts.c: 118:         interrupts_clear_colorclick();
  7583   002356  ECEE  F011         	call	i2_interrupts_clear_colorclick	;wreg free
  7584   00235A                     
  7585                           ;interrupts.c: 119:         PIR0bits.INT1IF = 0;
  7586   00235A  010E               	movlb	14	; () banked
  7587   00235C  9333               	bcf	51,1,b	;volatile
  7588   00235E                     i2l331:
  7589                           
  7590                           ; BSR set to: 14
  7591   00235E  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  7592   002360  0011               	retfie		f
  7593   002362                     __end_of_HighISR:
  7594                           	callstack 0
  7595                           
  7596 ;; *************** function i2_interrupts_clear_colorclick *****************
  7597 ;; Defined at:
  7598 ;;		line 57 in file "interrupts.c"
  7599 ;; Parameters:    Size  Location     Type
  7600 ;;		None
  7601 ;; Auto vars:     Size  Location     Type
  7602 ;;		None
  7603 ;; Return value:  Size  Location     Type
  7604 ;;                  1    wreg      void 
  7605 ;; Registers used:
  7606 ;;		wreg, status,2, status,0, cstack
  7607 ;; Tracked objects:
  7608 ;;		On entry : 0/0
  7609 ;;		On exit  : 0/0
  7610 ;;		Unchanged: 0/0
  7611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7616 ;;Total ram usage:        0 bytes
  7617 ;; Hardware stack levels used: 1
  7618 ;; Hardware stack levels required when called: 4
  7619 ;; This function calls:
  7620 ;;		i2_I2C_2_Master_Start
  7621 ;;		i2_I2C_2_Master_Stop
  7622 ;;		i2_I2C_2_Master_Write
  7623 ;;		i2_init_colorclick_interrupts
  7624 ;; This function is called by:
  7625 ;;		_HighISR
  7626 ;; This function uses a non-reentrant model
  7627 ;;
  7628                           
  7629                           	psect	text49
  7630   0023DC                     __ptext49:
  7631                           	callstack 0
  7632   0023DC                     i2_interrupts_clear_colorclick:
  7633                           	callstack 18
  7634   0023DC                     
  7635                           ;interrupts.c: 59:     I2C_2_Master_Start();
  7636   0023DC  EC21  F012         	call	i2_I2C_2_Master_Start	;wreg free
  7637                           
  7638                           ;interrupts.c: 60:     I2C_2_Master_Write(0x52 | 0x00);
  7639   0023E0  0E52               	movlw	82
  7640   0023E2  EC07  F012         	call	i2_I2C_2_Master_Write
  7641                           
  7642                           ;interrupts.c: 61:     I2C_2_Master_Write(0b11100110);
  7643   0023E6  0EE6               	movlw	230
  7644   0023E8  EC07  F012         	call	i2_I2C_2_Master_Write
  7645                           
  7646                           ;interrupts.c: 62:     I2C_2_Master_Stop();
  7647   0023EC  EC1C  F012         	call	i2_I2C_2_Master_Stop	;wreg free
  7648                           
  7649                           ;interrupts.c: 64:     init_colorclick_interrupts();
  7650   0023F0  ECBE  F010         	call	i2_init_colorclick_interrupts	;wreg free
  7651   0023F4  0012               	return		;funcret
  7652   0023F6                     __end_ofi2_interrupts_clear_colorclick:
  7653                           	callstack 0
  7654                           
  7655 ;; *************** function i2_init_colorclick_interrupts *****************
  7656 ;; Defined at:
  7657 ;;		line 43 in file "interrupts.c"
  7658 ;; Parameters:    Size  Location     Type
  7659 ;;		None
  7660 ;; Auto vars:     Size  Location     Type
  7661 ;;		None
  7662 ;; Return value:  Size  Location     Type
  7663 ;;                  1    wreg      void 
  7664 ;; Registers used:
  7665 ;;		wreg, status,2, status,0, cstack
  7666 ;; Tracked objects:
  7667 ;;		On entry : 0/0
  7668 ;;		On exit  : 0/0
  7669 ;;		Unchanged: 0/0
  7670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7673 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7674 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7675 ;;Total ram usage:        1 bytes
  7676 ;; Hardware stack levels used: 1
  7677 ;; Hardware stack levels required when called: 3
  7678 ;; This function calls:
  7679 ;;		i2_color_writetoaddr
  7680 ;; This function is called by:
  7681 ;;		i2_interrupts_clear_colorclick
  7682 ;; This function uses a non-reentrant model
  7683 ;;
  7684                           
  7685                           	psect	text50
  7686   00217C                     __ptext50:
  7687                           	callstack 0
  7688   00217C                     i2_init_colorclick_interrupts:
  7689                           	callstack 18
  7690   00217C                     
  7691                           ;interrupts.c: 45:     color_writetoaddr(0x00,0b10011);
  7692   00217C  0E13               	movlw	19
  7693   00217E  6E03               	movwf	i2color_writetoaddr@value^0,c
  7694   002180  0E00               	movlw	0
  7695   002182  ECD1  F011         	call	i2_color_writetoaddr
  7696   002186                     
  7697                           ;interrupts.c: 46:     _delay((unsigned long)((3)*(64000000/4000.0)));
  7698   002186  0E3F               	movlw	63
  7699   002188  6E05               	movwf	??i2_init_colorclick_interrupts^0,c
  7700   00218A  0E55               	movlw	85
  7701   00218C                     i2u422_47:
  7702   00218C  2EE8               	decfsz	wreg,f,c
  7703   00218E  D7FE               	bra	i2u422_47
  7704   002190  2E05               	decfsz	??i2_init_colorclick_interrupts^0,f,c
  7705   002192  D7FC               	bra	i2u422_47
  7706   002194  F000               	nop	
  7707   002196                     
  7708                           ;interrupts.c: 48:     color_writetoaddr(0x0C,0b0100);
  7709   002196  0E04               	movlw	4
  7710   002198  6E03               	movwf	i2color_writetoaddr@value^0,c
  7711   00219A  0E0C               	movlw	12
  7712   00219C  ECD1  F011         	call	i2_color_writetoaddr
  7713   0021A0                     
  7714                           ;interrupts.c: 49:     color_writetoaddr(0x04,(int_threshold_low & 0xFF));
  7715   0021A0  C04F  F003         	movff	_int_threshold_low,i2color_writetoaddr@value
  7716   0021A4  0E04               	movlw	4
  7717   0021A6  ECD1  F011         	call	i2_color_writetoaddr
  7718   0021AA                     
  7719                           ;interrupts.c: 50:     color_writetoaddr(0x05,(int_threshold_low >> 8));
  7720   0021AA  5050               	movf	(_int_threshold_low+1)^0,w,c
  7721   0021AC  6E03               	movwf	i2color_writetoaddr@value^0,c
  7722   0021AE  0E05               	movlw	5
  7723   0021B0  ECD1  F011         	call	i2_color_writetoaddr
  7724   0021B4                     
  7725                           ;interrupts.c: 51:     color_writetoaddr(0x06,(int_threshold_high & 0xFF));
  7726   0021B4  C055  F003         	movff	_int_threshold_high,i2color_writetoaddr@value
  7727   0021B8  0E06               	movlw	6
  7728   0021BA  ECD1  F011         	call	i2_color_writetoaddr
  7729   0021BE                     
  7730                           ;interrupts.c: 52:     color_writetoaddr(0x07,(int_threshold_high >> 8));
  7731   0021BE  5056               	movf	(_int_threshold_high+1)^0,w,c
  7732   0021C0  6E03               	movwf	i2color_writetoaddr@value^0,c
  7733   0021C2  0E07               	movlw	7
  7734   0021C4  ECD1  F011         	call	i2_color_writetoaddr
  7735   0021C8  0012               	return		;funcret
  7736   0021CA                     __end_ofi2_init_colorclick_interrupts:
  7737                           	callstack 0
  7738                           
  7739 ;; *************** function i2_color_writetoaddr *****************
  7740 ;; Defined at:
  7741 ;;		line 22 in file "color.c"
  7742 ;; Parameters:    Size  Location     Type
  7743 ;;  address         1    wreg     unsigned char 
  7744 ;;  value           1    2[COMRAM] unsigned char 
  7745 ;; Auto vars:     Size  Location     Type
  7746 ;;  address         1    3[COMRAM] unsigned char 
  7747 ;; Return value:  Size  Location     Type
  7748 ;;                  1    wreg      void 
  7749 ;; Registers used:
  7750 ;;		wreg, status,2, status,0, cstack
  7751 ;; Tracked objects:
  7752 ;;		On entry : 0/0
  7753 ;;		On exit  : 0/0
  7754 ;;		Unchanged: 0/0
  7755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7756 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7757 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7759 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7760 ;;Total ram usage:        2 bytes
  7761 ;; Hardware stack levels used: 1
  7762 ;; Hardware stack levels required when called: 2
  7763 ;; This function calls:
  7764 ;;		i2_I2C_2_Master_Start
  7765 ;;		i2_I2C_2_Master_Stop
  7766 ;;		i2_I2C_2_Master_Write
  7767 ;; This function is called by:
  7768 ;;		i2_init_colorclick_interrupts
  7769 ;; This function uses a non-reentrant model
  7770 ;;
  7771                           
  7772                           	psect	text51
  7773   0023A2                     __ptext51:
  7774                           	callstack 0
  7775   0023A2                     i2_color_writetoaddr:
  7776                           	callstack 18
  7777                           
  7778                           ;incstack = 0
  7779                           ;i2color_writetoaddr@address stored from wreg
  7780   0023A2  6E04               	movwf	i2color_writetoaddr@address^0,c
  7781   0023A4                     
  7782                           ;color.c: 23:     I2C_2_Master_Start();
  7783   0023A4  EC21  F012         	call	i2_I2C_2_Master_Start	;wreg free
  7784                           
  7785                           ;color.c: 24:     I2C_2_Master_Write(0x52 | 0x00);
  7786   0023A8  0E52               	movlw	82
  7787   0023AA  EC07  F012         	call	i2_I2C_2_Master_Write
  7788                           
  7789                           ;color.c: 25:     I2C_2_Master_Write(0x80 | address);
  7790   0023AE  5004               	movf	i2color_writetoaddr@address^0,w,c
  7791   0023B0  0980               	iorlw	128
  7792   0023B2  EC07  F012         	call	i2_I2C_2_Master_Write
  7793                           
  7794                           ;color.c: 26:     I2C_2_Master_Write(value);
  7795   0023B6  5003               	movf	i2color_writetoaddr@value^0,w,c
  7796   0023B8  EC07  F012         	call	i2_I2C_2_Master_Write
  7797                           
  7798                           ;color.c: 27:     I2C_2_Master_Stop();
  7799   0023BC  EC1C  F012         	call	i2_I2C_2_Master_Stop	;wreg free
  7800   0023C0  0012               	return		;funcret
  7801   0023C2                     __end_ofi2_color_writetoaddr:
  7802                           	callstack 0
  7803                           
  7804 ;; *************** function i2_I2C_2_Master_Write *****************
  7805 ;; Defined at:
  7806 ;;		line 45 in file "i2c.c"
  7807 ;; Parameters:    Size  Location     Type
  7808 ;;  data_byte       1    wreg     unsigned char 
  7809 ;; Auto vars:     Size  Location     Type
  7810 ;;  data_byte       1    1[COMRAM] unsigned char 
  7811 ;; Return value:  Size  Location     Type
  7812 ;;                  1    wreg      void 
  7813 ;; Registers used:
  7814 ;;		wreg, status,2, status,0, cstack
  7815 ;; Tracked objects:
  7816 ;;		On entry : 0/0
  7817 ;;		On exit  : 0/0
  7818 ;;		Unchanged: 0/0
  7819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7821 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7823 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7824 ;;Total ram usage:        1 bytes
  7825 ;; Hardware stack levels used: 1
  7826 ;; Hardware stack levels required when called: 1
  7827 ;; This function calls:
  7828 ;;		i2_I2C_2_Master_Idle
  7829 ;; This function is called by:
  7830 ;;		i2_color_writetoaddr
  7831 ;;		i2_interrupts_clear_colorclick
  7832 ;; This function uses a non-reentrant model
  7833 ;;
  7834                           
  7835                           	psect	text52
  7836   00240E                     __ptext52:
  7837                           	callstack 0
  7838   00240E                     i2_I2C_2_Master_Write:
  7839                           	callstack 18
  7840                           
  7841                           ;incstack = 0
  7842                           ;i2I2C_2_Master_Write@data_byte stored from wreg
  7843   00240E  6E02               	movwf	i2I2C_2_Master_Write@data_byte^0,c
  7844   002410                     
  7845                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  7846   002410  EC66  F011         	call	i2_I2C_2_Master_Idle	;wreg free
  7847   002414                     
  7848                           ;i2c.c: 48:   SSP2BUF = data_byte;
  7849   002414  C002  FED5         	movff	i2I2C_2_Master_Write@data_byte,3797	;volatile
  7850   002418  0012               	return		;funcret
  7851   00241A                     __end_ofi2_I2C_2_Master_Write:
  7852                           	callstack 0
  7853                           
  7854 ;; *************** function i2_I2C_2_Master_Stop *****************
  7855 ;; Defined at:
  7856 ;;		line 39 in file "i2c.c"
  7857 ;; Parameters:    Size  Location     Type
  7858 ;;		None
  7859 ;; Auto vars:     Size  Location     Type
  7860 ;;		None
  7861 ;; Return value:  Size  Location     Type
  7862 ;;                  1    wreg      void 
  7863 ;; Registers used:
  7864 ;;		wreg, status,2, status,0, cstack
  7865 ;; Tracked objects:
  7866 ;;		On entry : 0/0
  7867 ;;		On exit  : 0/0
  7868 ;;		Unchanged: 0/0
  7869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7873 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7874 ;;Total ram usage:        0 bytes
  7875 ;; Hardware stack levels used: 1
  7876 ;; Hardware stack levels required when called: 1
  7877 ;; This function calls:
  7878 ;;		i2_I2C_2_Master_Idle
  7879 ;; This function is called by:
  7880 ;;		i2_color_writetoaddr
  7881 ;;		i2_interrupts_clear_colorclick
  7882 ;; This function uses a non-reentrant model
  7883 ;;
  7884                           
  7885                           	psect	text53
  7886   002438                     __ptext53:
  7887                           	callstack 0
  7888   002438                     i2_I2C_2_Master_Stop:
  7889                           	callstack 18
  7890   002438                     
  7891                           ;i2c.c: 41:   I2C_2_Master_Idle();
  7892   002438  EC66  F011         	call	i2_I2C_2_Master_Idle	;wreg free
  7893   00243C                     
  7894                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  7895   00243C  010E               	movlb	14	; () banked
  7896   00243E  85DA               	bsf	218,2,b	;volatile
  7897   002440                     
  7898                           ; BSR set to: 14
  7899   002440  0012               	return		;funcret
  7900   002442                     __end_ofi2_I2C_2_Master_Stop:
  7901                           	callstack 0
  7902                           
  7903 ;; *************** function i2_I2C_2_Master_Start *****************
  7904 ;; Defined at:
  7905 ;;		line 27 in file "i2c.c"
  7906 ;; Parameters:    Size  Location     Type
  7907 ;;		None
  7908 ;; Auto vars:     Size  Location     Type
  7909 ;;		None
  7910 ;; Return value:  Size  Location     Type
  7911 ;;                  1    wreg      void 
  7912 ;; Registers used:
  7913 ;;		wreg, status,2, status,0, cstack
  7914 ;; Tracked objects:
  7915 ;;		On entry : 0/0
  7916 ;;		On exit  : 0/0
  7917 ;;		Unchanged: 0/0
  7918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7923 ;;Total ram usage:        0 bytes
  7924 ;; Hardware stack levels used: 1
  7925 ;; Hardware stack levels required when called: 1
  7926 ;; This function calls:
  7927 ;;		i2_I2C_2_Master_Idle
  7928 ;; This function is called by:
  7929 ;;		i2_color_writetoaddr
  7930 ;;		i2_interrupts_clear_colorclick
  7931 ;; This function uses a non-reentrant model
  7932 ;;
  7933                           
  7934                           	psect	text54
  7935   002442                     __ptext54:
  7936                           	callstack 0
  7937   002442                     i2_I2C_2_Master_Start:
  7938                           	callstack 18
  7939   002442                     
  7940                           ;i2c.c: 29:   I2C_2_Master_Idle();
  7941   002442  EC66  F011         	call	i2_I2C_2_Master_Idle	;wreg free
  7942   002446                     
  7943                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  7944   002446  010E               	movlb	14	; () banked
  7945   002448  81DA               	bsf	218,0,b	;volatile
  7946   00244A                     
  7947                           ; BSR set to: 14
  7948   00244A  0012               	return		;funcret
  7949   00244C                     __end_ofi2_I2C_2_Master_Start:
  7950                           	callstack 0
  7951                           
  7952 ;; *************** function i2_I2C_2_Master_Idle *****************
  7953 ;; Defined at:
  7954 ;;		line 22 in file "i2c.c"
  7955 ;; Parameters:    Size  Location     Type
  7956 ;;		None
  7957 ;; Auto vars:     Size  Location     Type
  7958 ;;		None
  7959 ;; Return value:  Size  Location     Type
  7960 ;;                  1    wreg      void 
  7961 ;; Registers used:
  7962 ;;		wreg, status,2, status,0
  7963 ;; Tracked objects:
  7964 ;;		On entry : 0/0
  7965 ;;		On exit  : 0/0
  7966 ;;		Unchanged: 0/0
  7967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7970 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7971 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7972 ;;Total ram usage:        1 bytes
  7973 ;; Hardware stack levels used: 1
  7974 ;; This function calls:
  7975 ;;		Nothing
  7976 ;; This function is called by:
  7977 ;;		i2_I2C_2_Master_Start
  7978 ;;		i2_I2C_2_Master_Stop
  7979 ;;		i2_I2C_2_Master_Write
  7980 ;; This function uses a non-reentrant model
  7981 ;;
  7982                           
  7983                           	psect	text55
  7984   0022CC                     __ptext55:
  7985                           	callstack 0
  7986   0022CC                     i2_I2C_2_Master_Idle:
  7987                           	callstack 18
  7988   0022CC                     i2l90:
  7989   0022CC  010E               	movlb	14	; () banked
  7990   0022CE  B5D8               	btfsc	216,2,b	;volatile
  7991   0022D0  EF6C  F011         	goto	i2u184_41
  7992   0022D4  EF6E  F011         	goto	i2u184_40
  7993   0022D8                     i2u184_41:
  7994   0022D8  EF66  F011         	goto	i2l90
  7995   0022DC                     i2u184_40:
  7996   0022DC                     
  7997                           ; BSR set to: 14
  7998   0022DC  CEDA F001          	movff	3802,??i2_I2C_2_Master_Idle	;volatile
  7999   0022E0  0E1F               	movlw	31
  8000   0022E2  1601               	andwf	??i2_I2C_2_Master_Idle^0,f,c
  8001   0022E4  A4D8               	btfss	status,2,c
  8002   0022E6  EF77  F011         	goto	i2u185_41
  8003   0022EA  EF79  F011         	goto	i2u185_40
  8004   0022EE                     i2u185_41:
  8005   0022EE  EF66  F011         	goto	i2l90
  8006   0022F2                     i2u185_40:
  8007   0022F2                     
  8008                           ; BSR set to: 14
  8009   0022F2  0012               	return		;funcret
  8010   0022F4                     __end_ofi2_I2C_2_Master_Idle:
  8011                           	callstack 0
  8012   000000                     
  8013                           	psect	rparam
  8014   000000                     
  8015                           	psect	temp
  8016   000057                     btemp:
  8017                           	callstack 0
  8018   000057                     	ds	1
  8019   000000                     int$flags	set	btemp
  8020   000000                     wtemp8	set	btemp+1
  8021   000000                     ttemp5	set	btemp+1
  8022   000000                     ttemp6	set	btemp+4
  8023   000000                     ttemp7	set	btemp+8
  8024                           
  8025                           	psect	idloc
  8026                           
  8027                           ;Config register IDLOC0 @ 0x200000
  8028                           ;	unspecified, using default values
  8029   200000                     	org	2097152
  8030   200000  0FFF               	dw	4095
  8031                           
  8032                           ;Config register IDLOC1 @ 0x200002
  8033                           ;	unspecified, using default values
  8034   200002                     	org	2097154
  8035   200002  0FFF               	dw	4095
  8036                           
  8037                           ;Config register IDLOC2 @ 0x200004
  8038                           ;	unspecified, using default values
  8039   200004                     	org	2097156
  8040   200004  0FFF               	dw	4095
  8041                           
  8042                           ;Config register IDLOC3 @ 0x200006
  8043                           ;	unspecified, using default values
  8044   200006                     	org	2097158
  8045   200006  0FFF               	dw	4095
  8046                           
  8047                           ;Config register IDLOC4 @ 0x200008
  8048                           ;	unspecified, using default values
  8049   200008                     	org	2097160
  8050   200008  0FFF               	dw	4095
  8051                           
  8052                           ;Config register IDLOC5 @ 0x20000A
  8053                           ;	unspecified, using default values
  8054   20000A                     	org	2097162
  8055   20000A  0FFF               	dw	4095
  8056                           
  8057                           ;Config register IDLOC6 @ 0x20000C
  8058                           ;	unspecified, using default values
  8059   20000C                     	org	2097164
  8060   20000C  0FFF               	dw	4095
  8061                           
  8062                           ;Config register IDLOC7 @ 0x20000E
  8063                           ;	unspecified, using default values
  8064   20000E                     	org	2097166
  8065   20000E  0FFF               	dw	4095
  8066                           
  8067                           	psect	config
  8068                           
  8069                           ;Config register CONFIG1L @ 0x300000
  8070                           ;	External Oscillator mode Selection bits
  8071                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  8072                           ;	Power-up default value for COSC bits
  8073                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  8074   300000                     	org	3145728
  8075   300000  AA                 	db	170
  8076                           
  8077                           ;Config register CONFIG1H @ 0x300001
  8078                           ;	unspecified, using default values
  8079                           ;	Clock Out Enable bit
  8080                           ;	CLKOUTEN = 0x1, unprogrammed default
  8081                           ;	Clock Switch Enable bit
  8082                           ;	CSWEN = 0x1, unprogrammed default
  8083                           ;	Fail-Safe Clock Monitor Enable bit
  8084                           ;	FCMEN = 0x1, unprogrammed default
  8085   300001                     	org	3145729
  8086   300001  FF                 	db	255
  8087                           
  8088                           ;Config register CONFIG2L @ 0x300002
  8089                           ;	unspecified, using default values
  8090                           ;	Master Clear Enable bit
  8091                           ;	MCLRE = 0x1, unprogrammed default
  8092                           ;	Power-up Timer Enable bit
  8093                           ;	PWRTE = 0x1, unprogrammed default
  8094                           ;	Low-power BOR enable bit
  8095                           ;	LPBOREN = 0x1, unprogrammed default
  8096                           ;	Brown-out Reset Enable bits
  8097                           ;	BOREN = 0x3, unprogrammed default
  8098   300002                     	org	3145730
  8099   300002  FF                 	db	255
  8100                           
  8101                           ;Config register CONFIG2H @ 0x300003
  8102                           ;	unspecified, using default values
  8103                           ;	Brown Out Reset Voltage selection bits
  8104                           ;	BORV = 0x3, unprogrammed default
  8105                           ;	ZCD Disable bit
  8106                           ;	ZCD = 0x1, unprogrammed default
  8107                           ;	PPSLOCK bit One-Way Set Enable bit
  8108                           ;	PPS1WAY = 0x1, unprogrammed default
  8109                           ;	Stack Full/Underflow Reset Enable bit
  8110                           ;	STVREN = 0x1, unprogrammed default
  8111                           ;	Debugger Enable bit
  8112                           ;	DEBUG = 0x1, unprogrammed default
  8113                           ;	Extended Instruction Set Enable bit
  8114                           ;	XINST = 0x1, unprogrammed default
  8115   300003                     	org	3145731
  8116   300003  FF                 	db	255
  8117                           
  8118                           ;Config register CONFIG3L @ 0x300004
  8119                           ;	WDT Period Select bits
  8120                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  8121                           ;	WDT operating mode
  8122                           ;	WDTE = OFF, WDT Disabled
  8123   300004                     	org	3145732
  8124   300004  9F                 	db	159
  8125                           
  8126                           ;Config register CONFIG3H @ 0x300005
  8127                           ;	unspecified, using default values
  8128                           ;	WDT Window Select bits
  8129                           ;	WDTCWS = 0x7, unprogrammed default
  8130                           ;	WDT input clock selector
  8131                           ;	WDTCCS = 0x7, unprogrammed default
  8132   300005                     	org	3145733
  8133   300005  FF                 	db	255
  8134                           
  8135                           ;Config register CONFIG4L @ 0x300006
  8136                           ;	unspecified, using default values
  8137                           ;	Write Protection Block 0
  8138                           ;	WRT0 = 0x1, unprogrammed default
  8139                           ;	Write Protection Block 1
  8140                           ;	WRT1 = 0x1, unprogrammed default
  8141                           ;	Write Protection Block 2
  8142                           ;	WRT2 = 0x1, unprogrammed default
  8143                           ;	Write Protection Block 3
  8144                           ;	WRT3 = 0x1, unprogrammed default
  8145                           ;	Write Protection Block 3
  8146                           ;	WRT4 = 0x1, unprogrammed default
  8147                           ;	Write Protection Block 3
  8148                           ;	WRT5 = 0x1, unprogrammed default
  8149                           ;	Write Protection Block 3
  8150                           ;	WRT6 = 0x1, unprogrammed default
  8151                           ;	Write Protection Block 3
  8152                           ;	WRT7 = 0x1, unprogrammed default
  8153   300006                     	org	3145734
  8154   300006  FF                 	db	255
  8155                           
  8156                           ;Config register CONFIG4H @ 0x300007
  8157                           ;	unspecified, using default values
  8158                           ;	Configuration Register Write Protection bit
  8159                           ;	WRTC = 0x1, unprogrammed default
  8160                           ;	Boot Block Write Protection bit
  8161                           ;	WRTB = 0x1, unprogrammed default
  8162                           ;	Data EEPROM Write Protection bit
  8163                           ;	WRTD = 0x1, unprogrammed default
  8164                           ;	Scanner Enable bit
  8165                           ;	SCANE = 0x1, unprogrammed default
  8166                           ;	Low Voltage Programming Enable bit
  8167                           ;	LVP = 0x1, unprogrammed default
  8168   300007                     	org	3145735
  8169   300007  FF                 	db	255
  8170                           
  8171                           ;Config register CONFIG5L @ 0x300008
  8172                           ;	unspecified, using default values
  8173                           ;	UserNVM Program Memory Code Protection bit
  8174                           ;	CP = 0x1, unprogrammed default
  8175                           ;	DataNVM Memory Code Protection bit
  8176                           ;	CPD = 0x1, unprogrammed default
  8177   300008                     	org	3145736
  8178   300008  FF                 	db	255
  8179                           
  8180                           ;Config register CONFIG5H @ 0x300009
  8181                           ;	unspecified, using default values
  8182   300009                     	org	3145737
  8183   300009  FF                 	db	255
  8184                           
  8185                           ;Config register CONFIG6L @ 0x30000A
  8186                           ;	unspecified, using default values
  8187                           ;	Table Read Protection Block 0
  8188                           ;	EBTR0 = 0x1, unprogrammed default
  8189                           ;	Table Read Protection Block 1
  8190                           ;	EBTR1 = 0x1, unprogrammed default
  8191                           ;	Table Read Protection Block 2
  8192                           ;	EBTR2 = 0x1, unprogrammed default
  8193                           ;	Table Read Protection Block 3
  8194                           ;	EBTR3 = 0x1, unprogrammed default
  8195                           ;	Table Read Protection Block 4
  8196                           ;	EBTR4 = 0x1, unprogrammed default
  8197                           ;	Table Read Protection Block 5
  8198                           ;	EBTR5 = 0x1, unprogrammed default
  8199                           ;	Table Read Protection Block 6
  8200                           ;	EBTR6 = 0x1, unprogrammed default
  8201                           ;	Table Read Protection Block 7
  8202                           ;	EBTR7 = 0x1, unprogrammed default
  8203   30000A                     	org	3145738
  8204   30000A  FF                 	db	255
  8205                           
  8206                           ;Config register CONFIG6H @ 0x30000B
  8207                           ;	unspecified, using default values
  8208                           ;	Boot Block Table Read Protection bit
  8209                           ;	EBTRB = 0x1, unprogrammed default
  8210   30000B                     	org	3145739
  8211   30000B  FF                 	db	255
  8212                           tosu	equ	0xFFF
  8213                           tosh	equ	0xFFE
  8214                           tosl	equ	0xFFD
  8215                           stkptr	equ	0xFFC
  8216                           pclatu	equ	0xFFB
  8217                           pclath	equ	0xFFA
  8218                           pcl	equ	0xFF9
  8219                           tblptru	equ	0xFF8
  8220                           tblptrh	equ	0xFF7
  8221                           tblptrl	equ	0xFF6
  8222                           tablat	equ	0xFF5
  8223                           prodh	equ	0xFF4
  8224                           prodl	equ	0xFF3
  8225                           indf0	equ	0xFEF
  8226                           postinc0	equ	0xFEE
  8227                           postdec0	equ	0xFED
  8228                           preinc0	equ	0xFEC
  8229                           plusw0	equ	0xFEB
  8230                           fsr0h	equ	0xFEA
  8231                           fsr0l	equ	0xFE9
  8232                           wreg	equ	0xFE8
  8233                           indf1	equ	0xFE7
  8234                           postinc1	equ	0xFE6
  8235                           postdec1	equ	0xFE5
  8236                           preinc1	equ	0xFE4
  8237                           plusw1	equ	0xFE3
  8238                           fsr1h	equ	0xFE2
  8239                           fsr1l	equ	0xFE1
  8240                           bsr	equ	0xFE0
  8241                           indf2	equ	0xFDF
  8242                           postinc2	equ	0xFDE
  8243                           postdec2	equ	0xFDD
  8244                           preinc2	equ	0xFDC
  8245                           plusw2	equ	0xFDB
  8246                           fsr2h	equ	0xFDA
  8247                           fsr2l	equ	0xFD9
  8248                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         88
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     78      86
    BANK0           160     52     134
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    MoveBuggy@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    MoveBuggy@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    MoveBuggy@color_detected	PTR unsigned char  size(2) Largest target is 3561
		 -> RAM(DATA[3561]), 

    LightBlueInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    LightBlueInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    OrangeInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    OrangeInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    PinkInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    PinkInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    YellowInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    YellowInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    BlueInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    BlueInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    GreenInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    GreenInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    RedInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    RedInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    turnLeft135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnLeft135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnRight135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnRight135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnRight90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnRight90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnLeft90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnLeft90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    fullSpeedBackwards@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    fullSpeedBackwards@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    fullSpeedBackwards@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    fullSpeedBackwards@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    fullSpeedBackwards@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    fullSpeedBackwards@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    S1153DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    S1153DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), main@motorL(BANK0[9]), 

    detect_color@tempval	PTR struct RGB_val size(2) Largest target is 8
		 -> main@initial_color(BANK0[8]), 

    Update_RGBC@tempval	PTR struct RGB_val size(2) Largest target is 8
		 -> main@initial_color(BANK0[8]), 


Critical Paths under _main in COMRAM

    _fullSpeedAhead->_setMotorPWM
    _detect_color->___fltol
    ___fltol->___flmul
    ___flmul->___fldiv
    ___fldiv->___xxtofl
    _color_click_init->_color_writetoaddr
    _Update_RGBC->_color_read_Blue
    _Update_RGBC->_color_read_Clear
    _Update_RGBC->_color_read_Green
    _Update_RGBC->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _MoveBuggy->_BlueInstructions
    _MoveBuggy->_GreenInstructions
    _MoveBuggy->_LightBlueInstructions
    _MoveBuggy->_OrangeInstructions
    _MoveBuggy->_PinkInstructions
    _MoveBuggy->_RedInstructions
    _MoveBuggy->_YellowInstructions
    _YellowInstructions->_turnRight90
    _RedInstructions->_turnRight90
    _turnRight90->_turnRight
    _PinkInstructions->_turnLeft90
    _OrangeInstructions->_turnRight135
    _turnRight135->_turnRight
    _turnRight->_setMotorPWM
    _LightBlueInstructions->_turnLeft135
    _turnLeft135->_turnLeft
    _GreenInstructions->_turnLeft90
    _BlueInstructions->_turnLeft90
    _turnLeft90->_turnLeft
    _turnLeft->_setMotorPWM
    _stop->_setMotorPWM
    _fullSpeedBackwards->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _interrupts_clear_colorclick->_init_colorclick_interrupts
    _init_colorclick_interrupts->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _LowISR in COMRAM

    None.

Critical Paths under _HighISR in COMRAM

    i2_interrupts_clear_colorclick->i2_init_colorclick_interrupts
    i2_init_colorclick_interrupts->i2_color_writetoaddr
    i2_color_writetoaddr->i2_I2C_2_Master_Write
    i2_I2C_2_Master_Write->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Stop->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Start->i2_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_detect_color
    _detect_color->___fltol

Critical Paths under _LowISR in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowISR in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowISR in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowISR in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowISR in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowISR in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowISR in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowISR in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowISR in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowISR in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LowISR in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowISR in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowISR in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowISR in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                30    30      0  120430
                                             22 BANK0     30    30      0
                    _Interrupts_init
                           _LED_init
                          _MoveBuggy
                        _Timer0_init
                        _Update_RGBC
                         _WhiteLight
                   _color_click_init
                       _detect_color
                     _fullSpeedAhead
                    _initDCmotorsPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _fullSpeedAhead                                       6     2      4    2245
                                             27 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _detect_color                                        18    16      2    6580
                                              4 BANK0     18    16      2
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     616
                                              8 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     517
                                             72 COMRAM     6     2      4
                                              0 BANK0      4     4      0
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    1886
                                             47 COMRAM    25    17      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1541
                                             22 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     750
                                             12 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _WhiteLight                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Update_RGBC                                          2     0      2     616
                                             19 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              9 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MoveBuggy                                            6     0      6  103956
                                             45 COMRAM     6     0      6
                   _BlueInstructions
                  _GreenInstructions
              _LightBlueInstructions
                 _OrangeInstructions
                   _PinkInstructions
                    _RedInstructions
                 _YellowInstructions
 ---------------------------------------------------------------------------------
 (2) _YellowInstructions                                   7     3      4   14746
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                        _turnRight90
 ---------------------------------------------------------------------------------
 (2) _RedInstructions                                      7     3      4   14746
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                        _turnRight90
 ---------------------------------------------------------------------------------
 (3) _turnRight90                                          5     1      4    7145
                                             33 COMRAM     5     1      4
                               _stop
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _PinkInstructions                                     7     3      4   14898
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                         _turnLeft90
 ---------------------------------------------------------------------------------
 (2) _OrangeInstructions                                   7     3      4   14594
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                       _turnRight135
 ---------------------------------------------------------------------------------
 (3) _turnRight135                                         5     1      4    6993
                                             33 COMRAM     5     1      4
                               _stop
                          _turnRight
 ---------------------------------------------------------------------------------
 (4) _turnRight                                            6     2      4    2593
                                             27 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _LightBlueInstructions                                7     3      4   14442
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                        _turnLeft135
 ---------------------------------------------------------------------------------
 (3) _turnLeft135                                          5     1      4    6841
                                             33 COMRAM     5     1      4
                               _stop
                           _turnLeft
 ---------------------------------------------------------------------------------
 (2) _GreenInstructions                                    7     3      4   14898
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                         _turnLeft90
 ---------------------------------------------------------------------------------
 (2) _BlueInstructions                                     7     3      4   14942
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                         _turnLeft90
 ---------------------------------------------------------------------------------
 (3) _turnLeft90                                           5     1      4    7297
                                             33 COMRAM     5     1      4
                               _stop
                           _turnLeft
 ---------------------------------------------------------------------------------
 (4) _turnLeft                                             6     2      4    2441
                                             27 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _stop                                                 5     1      4    4113
                                             27 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _fullSpeedBackwards                                   6     2      4    3157
                                             27 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    1829
                                             21 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                              8 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     358
                                             14 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _LED_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0     772
        _interrupts_clear_colorclick
 ---------------------------------------------------------------------------------
 (2) _interrupts_clear_colorclick                          0     0      0     772
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
         _init_colorclick_interrupts
 ---------------------------------------------------------------------------------
 (3) _init_colorclick_interrupts                           1     1      0     750
                                             12 COMRAM     1     1      0
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     750
                                             10 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              9 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              8 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _LowISR                                               3     3      0       0
                                              5 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _HighISR                                              0     0      0     244
      i2_interrupts_clear_colorclick
 ---------------------------------------------------------------------------------
 (9) i2_interrupts_clear_colorclick                        0     0      0     244
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
       i2_init_colorclick_interrupts
 ---------------------------------------------------------------------------------
 (10) i2_init_colorclick_interrupts                        1     1      0     222
                                              4 COMRAM     1     1      0
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (11) i2_color_writetoaddr                                 2     1      1     222
                                              2 COMRAM     2     1      1
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (12) i2_I2C_2_Master_Write                                1     1      0      22
                                              1 COMRAM     1     1      0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (12) i2_I2C_2_Master_Stop                                 0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (12) i2_I2C_2_Master_Start                                0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (13) i2_I2C_2_Master_Idle                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Interrupts_init
     _interrupts_clear_colorclick
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
       _init_colorclick_interrupts
         _color_writetoaddr
           _I2C_2_Master_Start
           _I2C_2_Master_Stop
           _I2C_2_Master_Write
   _LED_init
   _MoveBuggy
     _BlueInstructions
       _fullSpeedBackwards
         _setMotorPWM
           ___lwdiv
             ___wmul (ARG)
           ___wmul
       _stop
         _setMotorPWM
       _turnLeft90
         _stop
         _turnLeft
           _setMotorPWM
     _GreenInstructions
       _fullSpeedBackwards
       _stop
       _turnLeft90
     _LightBlueInstructions
       _fullSpeedBackwards
       _stop
       _turnLeft135
         _stop
         _turnLeft
     _OrangeInstructions
       _fullSpeedBackwards
       _stop
       _turnRight135
         _stop
         _turnRight
           _setMotorPWM
     _PinkInstructions
       _fullSpeedBackwards
       _stop
       _turnLeft90
     _RedInstructions
       _fullSpeedBackwards
       _stop
       _turnRight90
         _stop
         _turnRight
     _YellowInstructions
       _fullSpeedBackwards
       _stop
       _turnRight90
   _Timer0_init
   _Update_RGBC
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Clear
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _WhiteLight
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
   _detect_color
     ___fldiv
       ___xxtofl (ARG)
     ___flmul
       ___fldiv (ARG)
       ___xxtofl (ARG)
     ___fltol
       ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _fullSpeedAhead
     _setMotorPWM
   _initDCmotorsPWM
   _stop

 _LowISR (ROOT)

 _HighISR (ROOT)
   i2_interrupts_clear_colorclick
     i2_I2C_2_Master_Start
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Stop
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Write
       i2_I2C_2_Master_Idle
     i2_init_colorclick_interrupts
       i2_color_writetoaddr
         i2_I2C_2_Master_Start
         i2_I2C_2_Master_Stop
         i2_I2C_2_Master_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      64        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     34      86       5       83.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4E      56       1       91.5%
BITBIGSFRhlllh      52      0       0      41        0.0%
BITBIGSFRhlllll     37      0       0      43        0.0%
BITBIGSFRllh        2D      0       0      46        0.0%
BITBIGSFRlllhll     2A      0       0      54        0.0%
BITBIGSFRllllhl     23      0       0      61        0.0%
BITBIGSFRhhhlll     1D      0       0      38        0.0%
BITBIGSFRhhhhlh     1B      0       0      33        0.0%
BITBIGSFRhhhhll     13      0       0      34        0.0%
BITBIGSFRlllhhh     11      0       0      48        0.0%
BITBIGSFRlllhhh     11      0       0      49        0.0%
BITBIGSFRhhhlhh      E      0       0      35        0.0%
BITBIGSFRhhhhh       D      0       0      32        0.0%
BITBIGSFRlllhhh      C      0       0      47        0.0%
BITBIGSFRlllhll      9      0       0      58        0.0%
BITBIGSFRhlllll      8      0       0      44        0.0%
BITBIGSFRllllhh      6      0       0      60        0.0%
BITBIGSFRlllhll      6      0       0      53        0.0%
BITBIGSFRlllhll      5      0       0      56        0.0%
BITBIGSFRlllhlh      5      0       0      52        0.0%
BITBIGSFRlllhll      3      0       0      55        0.0%
BITBIGSFRlllhll      3      0       0      57        0.0%
BITBIGSFRlllhhl      3      0       0      51        0.0%
BITBIGSFRhllllh      2      0       0      42        0.0%
BITBIGSFRhhhllh      2      0       0      37        0.0%
BITBIGSFRlllll       2      0       0      62        0.0%
BITBIGSFRhhhlhl      1      0       0      36        0.0%
BITBIGSFRlllhhh      1      0       0      50        0.0%
BITBIGSFRhllhh       1      0       0      39        0.0%
BITBIGSFRhllhl       1      0       0      40        0.0%
BITBIGSFRlllhll      1      0       0      59        0.0%
BITBIGSFRlh          1      0       0      45        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      DC      63        0.0%
DATA                 0      0      DC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Mar 08 12:00:29 2023

                       _color_read_Red 1FEE                           ___fldiv@aexp 002F  
                         ___fldiv@bexp 002E                           ___fldiv@sign 0027  
                      _color_read_Blue 20DE                                     l21 2278  
                                   l30 208C                                     l24 23A0  
                                   l33 212C                                     l42 0670  
                                   l27 203C                                     l36 20DC  
                                   l60 0676                                     l39 1E84  
                                   l56 0670                                     l90 22A4  
                                   l93 22CA                                     l87 22A2  
                                   l96 2436                                     l99 2422  
                                   bsr 000FE0                    ___wmul@multiplicand 000B  
                     _color_read_Clear 208E                       _color_read_Green 203E  
                    ??_Interrupts_init 000E                                    l102 242C  
                                  l105 240C                                    l130 2452  
                                  l203 15DE                                    l108 220A  
                                  l213 1878                                    l222 1FEC  
                                  l127 2400                                    l231 1EDE  
                                  l312 217A                                    l208 17A2  
                                  l305 233E                                    l315 23DA  
                                  l181 1A8E                                    l193 194C  
                                  l249 1F38                                    l258 1F92  
                                  l188 115A                                    l517 1B9A  
                                  l429 2380                                    l198 16CC  
                                  l526 1DB2                                    l535 19FE  
                                  l544 1B14                                    l553 1C20  
                                  l562 1CA6                                    l571 1D2C  
                                  l581 13E8                                    l590 2318  
                                  l587 13E8                                    l887 14F0  
                  i2_color_writetoaddr 23A2                                    wreg 000FE8  
                         ___flmul@aexp 0041                           ___flmul@bexp 0042  
                         ___flmul@sign 003C                           ___flmul@temp 0047  
                         ___flmul@prod 0043                           ___fltol@exp1 004E  
                                 l1211 0932                                   l1204 073C  
                                 l1221 0A62                                   l1213 09AA  
                                 l1214 0998                                   l1208 0AA0  
                                 l1081 1E1E                                   l3001 0E28  
                                 l3003 0E2E                                   l1172 0E3A  
                                 l1252 0F2A                                   l3005 0E30  
                                 l3101 0942                                   l3021 06A4  
                                 l3013 0678                                   l1245 0E92  
                                 l1174 0C9A                                   l1183 0CE0  
                                 l3103 0950                                   l3031 06E0  
                                 l3023 06B4                                   l3015 0684  
                                 l1088 1E26                                   l1248 0FEE  
                                 l1185 0D58                                   l1177 0C5E  
                                 l3113 09BA                                   l3121 0A02  
                                 l3105 0954                                   l3041 0716  
                                 l3033 06E6                                   l3025 06C4  
                                 l3017 0692                                   l3201 0ED4  
                                 l1186 0D46                                   l3131 0A76  
                                 l3123 0A1C                                   l3115 09C6  
                                 l3107 0962                                   l3043 0726  
                                 l3035 06F4                                   l3027 06CA  
                                 l3019 0694                                   l1259 0F86  
                                 l3211 0F5C                                   l3203 0EE0  
                                 l2501 242E                                   l3133 0A84  
                                 l3125 0A30                                   l3117 09D4  
                                 l3109 0990                                   l3061 07A8  
                                 l3053 0770                                   l3045 072C  
                                 l3037 06F6                                   l3029 06DA  
                                 l3221 0F9A                                   l3213 0F68  
                                 l3205 0F12                                   l2503 2432  
                                 l2511 2428                                   l3135 0A86  
                                 l3127 0A4A                                   l3119 09FE  
                                 l3071 07F2                                   l3063 07C0  
                                 l3055 077C                                   l3047 074C  
                                 l3039 0706                                   l3223 0FBE  
                                 l3215 0F76                                   l3207 0F14  
                                 l2505 2404                                   l2521 1078  
                                 l2513 0FF0                                   l2601 241A  
                                 l3129 0A66                                   l3137 0A8C  
                                 l3081 0848                                   l3073 0802  
                                 l3065 07CC                                   l3057 0786  
                                 l3049 075C                                   l3225 0FCE  
                                 l3217 0F94                                   l3209 0F20  
                                 l3401 1A6A                                   l2507 2408  
                                 l2523 10BA                                   l2515 100C  
                                 l2611 21E0                                   l2603 241E  
                                 l3251 2254                                   l3139 0A90  
                                 l3091 08EC                                   l3083 0864  
                                 l3075 080E                                   l3067 07D8  
                                 l3059 079C                                   l3227 0FDC  
                                 l3219 0F96                                   l3411 1A8C  
                                 l3403 1A74                                   l2509 2424  
                                 l2533 2384                                   l2701 215C  
                                 l2525 10D6                                   l2517 1060  
                                 l2621 1800                                   l2541 18D6  
                                 l2613 2206                                   l2605 21CC  
                                 l3253 2264                                   l3093 08FA  
                                 l3085 0870                                   l3077 081E  
                                 l3069 07E6                                   l3229 0FDE  
                                 l3421 175E                                   l3413 16CE  
                                 l3405 1A76                                   l2471 22B4  
                                 l2703 2166                                   l3431 231A  
                                 l2527 111A                                   l2519 1074  
                                 l2631 1848                                   l2623 180C  
                                 l2551 193E                                   l2543 18E2  
                                 l2535 187A                                   l2615 2208  
                                 l2607 21D0                                   l2711 2284  
                                 l3255 226E                                   l3247 2246  
                                 l3095 0918                                   l3087 088C  
                                 l3079 0838                                   l3191 0E5C  
                                 l3423 1768                                   l3415 172A  
                                 l3407 1A80                                   l2705 2170  
                                 l3441 232E                                   l3433 2320  
                                 l2481 1DBC                                   l2473 22F4  
                                 l2633 1854                                   l2625 1828  
                                 l2545 18F8                                   l2537 18B2  
                                 l2561 1670                                   l2553 15E0  
                                 l2641 1FB0                                   l2801 19D2  
                                 l2609 21D8                                   l2721 1FEE  
                                 l3257 1E28                                   l2713 228A  
                                 l3249 224A                                   l3097 0922  
                                 l3089 08B6                                   l3193 0EA2  
                                 l3425 1772                                   l3417 1736  
                                 l3409 1A82                                   l3451 233A  
                                 l3443 2330                                   l3435 2326  
                                 l2491 1DF2                                   l2483 1DCE  
                                 l2475 2310                                   l2635 1860  
                                 l2627 1834                                   l2619 17A4  
                                 l2547 1926                                   l2539 18BE  
                                 l2563 1686                                   l2555 163C  
                                 l2643 1FB2                                   l2571 14F2  
                                 l2651 1E86                                   l2811 1AC2  
                                 l2803 1A90                                   l2723 2034  
                                 l2715 228C                                   l3099 0930  
                                 l3195 0EB8                                   l3187 0E3E  
                                 l3427 177E                                   l3419 1752  
                                 l2469 22A4                                   l3453 233C  
                                 l3445 2332                                   l3437 232A  
                                 l2493 1E08                                   l2485 1DD6  
                                 l2629 183E                                   l2549 1932  
                                 l2565 169C                                   l2557 1648  
                                 l2645 1FC6                                   l2637 1F94  
                                 l2581 1598                                   l2573 154E  
                                 l2821 1B9C                                   l2661 1ECC  
                                 l2653 1E8E                                   l2813 1AD6  
                                 l2805 1A98                                   l2733 20DE  
                                 l2741 20D4                                   l2717 228E  
                                 l2709 227A                                   l2901 0B24  
                                 l3189 0E4E                                   l3701 03B8  
                                 l3429 178A                                   l3447 2334  
                                 l3439 232C                                   l2495 1E10  
                                 l2487 1DDE                                   l2479 1DB4  
                                 l2567 16A8                                   l2559 1664  
                                 l2647 1FDA                                   l2639 1F9C  
                                 l2583 15AE                                   l2575 155A  
                                 l2671 1EFE                                   l2831 1BE2  
                                 l2823 1BA4                                   l2663 1ECE  
                                 l2655 1EA2                                   l2751 1B32  
                                 l2815 1AD8                                   l2807 1AAC  
                                 l3471 12B6                                   l3463 2362  
                                 l2735 2124                                   l2727 203E  
                                 l2719 2290                                   l2903 0B34  
                                 l2911 0B5E                                   l3631 1400  
                                 l3199 0ECC                                   l3703 03C8  
                                 l3711 0400                                   l3391 1A10  
                                 l2745 23C2                                   l3449 2338  
                                 l3385 23F6                                   l2497 1E12  
                                 l2489 1DEC                                   l2569 16B4  
                                 l2649 1FDC                                   l2681 1F42  
                                 l2585 15BA                                   l2577 1576  
                                 l2673 1F12                                   l2665 1EE0  
                                 l2841 1C2A                                   l2833 1BE4  
                                 l2825 1BB8                                   l2657 1EA4  
                                 l2761 1B6E                                   l2753 1B34  
                                 l2817 1AE8                                   l2809 1AAE  
                                 l3481 1320                                   l3473 12C8  
                                 l3465 236A                                   l2729 2084  
                                 l2921 0BA0                                   l2913 0B6E  
                                 l2905 0B44                                   l3641 1452  
                                 l3721 0450                                   l3713 0410  
                                 l3705 03D8                                   l3393 1A36  
                                 l3801 117E                                   l2499 1E18  
                                 l2771 1D4C                                   l2691 1F82  
                                 l2683 1F56                                   l2587 15C6  
                                 l2579 1582                                   l2675 1F26  
                                 l2667 1EE8                                   l2851 1C6A  
                                 l2843 1C3E                                   l2835 1BF4  
                                 l2827 1BBA                                   l2659 1EB8  
                                 l2763 1B86                                   l2755 1B48  
                                 l2747 1B16                                   l2819 1B00  
                                 l3491 1390                                   l3483 1338  
                                 l3475 12E0                                   l3467 2374  
                                 l2739 208E                                   l3387 244C  
                                 l2915 0B84                                   l2907 0B54  
                                 l3651 147C                                   l3643 1456  
                                 l3635 1414                                   l3731 0498  
                                 l3723 0460                                   l3715 0420  
                                 l3707 03E8                                   l3395 1A3A  
                                 l3811 11A4                                   l3803 1182  
                                 l2693 212E                                   l2781 1D9E  
                                 l2773 1D60                                   l2765 1D2E  
                                 l2685 1F58                                   l2861 1CC4  
                                 l2677 1F28                                   l2669 1EFC  
                                 l2853 1C7A                                   l2845 1C40  
                                 l2837 1C0C                                   l2829 1BCE  
                                 l2757 1B5C                                   l2749 1B1E  
                                 l3493 13A4                                   l3485 134C  
                                 l3477 12F4                                   l3469 237E  
                                 l2941 0C22                                   l2933 0BD8  
                                 l2917 0B94                                   l2925 0BB4  
                                 l2909 0B56                                   l3661 14A4  
                                 l3653 1486                                   l3645 1464  
                                 l3637 1440                                   l3629 13EA  
                                 l3741 04E0                                   l3733 04A8  
                                 l3717 0430                                   l3725 0468  
                                 l3709 03F8                                   l3397 1A5E  
                                 l3389 1A00                                   l3821 11C2  
                                 l3813 11A8                                   l3805 1186  
                                 l2695 2138                                   l2791 1980  
                                 l2783 194E                                   l2775 1D74  
                                 l2767 1D36                                   l2687 1F6C  
                                 l2679 1F3A                                   l2871 1D00  
                                 l2863 1CC6                                   l2855 1C92  
                                 l2847 1C54                                   l2839 1C22  
                                 l2759 1B5E                                   l3495 13BC  
                                 l3487 1364                                   l3479 130C  
                                 l2951 0C68                                   l2943 0C2A  
                                 l2935 0BF2                                   l2927 0BC4  
                                 l2919 0B9C                                   l3663 14B0  
                                 l3655 1490                                   l3639 1442  
                                 l3751 0530                                   l3743 04F0  
                                 l3735 04B8                                   l3727 0478  
                                 l3719 0440                                   l3399 1A68  
                                 l3831 11E0                                   l3823 11C6  
                                 l3815 11B0                                   l3807 119A  
                                 l2697 2148                                   l2793 1994  
                                 l2785 1956                                   l2777 1D76  
                                 l2769 1D4A                                   l2689 1F80  
                                 l2873 1D18                                   l2865 1CDA  
                                 l2857 1CA8                                   l2849 1C68  
                                 l3497 13D0                                   l3489 1378  
                                 l2961 0CC0                                   l2953 0C86  
                                 l2945 0C3A                                   l2937 0C02  
                                 l2929 0BC4                                   l2881 0ABE  
                                 l3665 14C0                                   l3761 0578  
                                 l3745 0500                                   l3753 0538  
                                 l3737 04C8                                   l3729 0488  
                                 l3681 0320                                   l3673 005C  
                                 l3841 1216                                   l3833 11E4  
                                 l3825 11CA                                   l3817 11B8  
                                 l3809 11A0                                   l2699 2152  
                                 l2795 1996                                   l2787 196A  
                                 l2779 1D86                                   l2867 1CEE  
                                 l2859 1CB0                                   l2971 0CFE  
                                 l2963 0CC6                                   l2955 0C88  
                                 l2947 0C4E                                   l2939 0C12  
                                 l2883 0ACE                                   l2891 0AF8  
                                 l2875 0AA2                                   l3667 14D0  
                                 l3771 05C0                                   l3763 0588  
                                 l3755 0548                                   l3747 0510  
                                 l3739 04D0                                   l3691 0370  
                                 l3683 0330                                   l3675 0062  
                                 l3851 125C                                   l3843 122A  
                                 l3835 11F0                                   l3827 11D2  
                                 l3819 11BE                                   l2797 19A6  
                                 l2789 196C                                   l2869 1CF0  
                                 l2981 0D68                                   l2973 0D02  
                                 l2965 0CD0                                   l2957 0C98  
                                 l2949 0C5C                                   l2893 0B08  
                                 l2885 0ADE                                   l2877 0AAE  
                                 l3669 14E0                                   l3773 05D0  
                                 l3781 0608                                   l3765 0598  
                                 l3757 0558                                   l3749 0520  
                                 l3693 0380                                   l3685 0340  
                                 l3677 0148                                   l3861 12AE  
                                 l3853 1260                                   l3845 1232  
                                 l3837 1202                                   l3829 11DA  
                                 l2799 19BE                                   l2991 0DCA  
                                 l2983 0D74                                   l2975 0D10  
                                 l2967 0CDE                                   l2959 0CAA  
                                 l2895 0B0E                                   l2887 0AEE  
                                 l2879 0ABC                                   l3791 0658  
                                 l3783 0618                                   l3775 05E0  
                                 l3759 0568                                   l3767 05A0  
                                 l3695 0390                                   l3687 0350  
                                 l3679 0234                                   l3855 1270  
                                 l3847 1242                                   l3839 1206  
                                 l2993 0DE0                                   l2985 0D82  
                                 l2977 0D3E                                   l2969 0CF0  
                                 l2897 0B14                                   l2889 0AF0  
                                 l3793 0668                                   l3785 0628  
                                 l3777 05F0                                   l3769 05B0  
                                 l3689 0360                                   l3697 0398  
                                 l3857 1288                                   l3849 1248  
                                 l2995 0DFA                                   l2987 0DAC  
                                 l2899 0B22                                   l3787 0638  
                                 l3779 0600                                   l3699 03A8  
                                 l3859 128A                                   l2997 0E16  
                                 l2989 0DB0                                   l3789 0648  
                                 l2999 0E1A                                   l3799 115C  
                                 u2000 1F0E                                   u2001 1F0A  
                                 u2010 1F38                                   u2011 1F34  
                                 u2020 1F68                                   u2100 1ABE  
                                 u2021 1F64                                   u2101 1ABA  
                                 u2030 1F92                                   u2110 1AE8  
                                 u2031 1F8E                                   u2111 1AE4  
                                 u2120 1BCA                                   u2040 1B44  
                                 u2200 0ADE                                   u2121 1BC6  
                                 u2041 1B40                                   u2201 0ADA  
                                 u2130 1BF4                                   u2050 1B6E  
                                 u2210 0B22                                   u2131 1BF0  
                                 u2051 1B6A                                   u2211 0B1E  
                                 u2060 1D5C                                   u2140 1C50  
                                 u2300 0CC0                                   u2220 0B34  
                                 u2061 1D58                                   u2141 1C4C  
                                 u2301 0CBC                                   u2221 0B30  
                                 u2070 1D86                                   u2150 1C7A  
                                 u2310 0CDE                                   u2230 0B44  
                                 u2071 1D82                                   u2151 1C76  
                                 u2311 0CDA                                   u2231 0B40  
                                 u2080 197C                                   u2160 1CD6  
                                 u2400 0E28                                   u2320 0CFE  
                                 u2240 0B84                                   u4000 0648  
                         _BAUD4CONbits 000EE9                                   u2081 1978  
                                 u2161 1CD2                                   u2401 0E24  
                                 u2321 0CFA                                   u2241 0B80  
                                 u4001 0644                                   u2090 19A6  
                                 u2170 1D00                                   u2330 0D10  
                                 u2250 0BC4                                   u2410 0692  
                                 u4010 0658                                   u2091 19A2  
                                 u2171 1CFC                                   u2331 0D0C  
                                 u2251 0BC0                                   u2411 068E  
                                 u4011 0654                                   u3300 12F4  
                                 u2340 0D3E                                   u2260 0C3A  
                                 u2180 0ABC                                   u2500 0930  
                                 u2420 06A4                                   u4020 0668  
                                 u3301 12F0                                   u2341 0D3A  
                                 u2261 0C36                                   u2181 0AB8  
                                 u2501 092C                                   u2421 06A0  
                                 u4021 0664                                   u3310 1320  
                                 u2350 0D54                                   u2270 0C5C  
                                 u2190 0ACE                                   u2510 0950  
                                 u2430 06B4                                   u4030 1216  
                                 u3311 131C                                   u2351 0D50  
                                 u2271 0C58                                   u2191 0ACA  
                                 u2511 094C                                   u2431 06B0  
                                 u4031 1212                                   u1800 1DEC  
                                 u3320 134C                                   u2360 0D68  
                                 u2280 0C86                                   u2520 0962  
                                 u2440 06F4                                   u4040 1242  
                                 u1801 1DE8                                   u3321 1348  
                                 u2361 0D64                                   u2281 0C82  
                                 u2521 095E                                   u2441 06F0  
                                 u4041 123E                                   u1810 1E08  
                                 u3330 1378                                   u2370 0D82  
                                 u2290 0CAA                                   u2530 0990  
                                 u2450 0706                                   u4050 1270  
                                 _T2PR 000FBC                                   u1811 1E04  
                                 u4107 1B78                                   u3331 1374  
                                 u2371 0D7E                                   u2291 0CA6  
                                 u2531 098C                                   u2451 0702  
                                 u4051 126C                                   u1820 100C  
                                 u1900 154E                                   u3340 13A4  
                                 u2380 0DCA                                   u2540 09A6  
                                 u2460 0716                                   u3500 1478  
                                 u2700 0F0E                                   u3260 172A  
                                 u1821 1008                                   u1901 154A  
                                 u4117 1BFE                                   u3341 13A0  
                                 u2381 0DC6                                   u2541 09A2  
                                 u2461 0712                                   u3501 1474  
                                 u2701 0F0A                                   u3261 1726  
                                 u1830 10D6                                   u1910 1576  
                                 u3350 13D0                                   u2390 0DFA  
                                 u2550 09BA                                   u2470 074C  
                                 u3510 14A0                                   u2710 0F58  
                                 u3270 1752                                   u1831 10D2  
                                 u4207 186A                                   u1911 1572  
                                 u4127 1C84                                   u3351 13CC  
                                 u2391 0DF6                                   u2551 09B6  
                                 u2471 0748                                   u3511 149C  
                                 u2711 0F54                                   u3271 174E  
                                 u1920 21F4                                   u2560 09D4  
                                 u2480 075C                                   u3520 14C0  
                                 u2720 0F76                                   u3600 0390  
                                 u4217 213E                                   u4137 15D0  
                                 u1921 21EC                                   u2561 09D0  
                                 u2481 0758                                   u3521 14BC  
                                 u2721 0F72                                   u3601 038C  
                                 u1770 22B4                                   u3290 12C8  
                                 u2570 0A1C                                   u2490 08D6  
                                 u3530 14D0                                   u2730 0F86  
                                 u3610 03A8                                   u1771 22B0  
                                 u4147 1D0A                                   u3291 12C4  
                                 u2571 0A18                                   u3531 14CC  
                                 u2731 0F82                                   u3611 03A4  
                                 u4067 127C                                   u1780 22CA  
                                 u1940 1800                                   u1860 18B2  
                                 u2580 0A4A                                   u2740 0F94  
                                 u3700 0440                                   u3620 03B8  
                                 u3540 0330                                   u1781 22C6  
                                 u1941 17FC                                   u1861 18AE  
                                 u4157 1D90                                   u2581 0A46  
                                 u2741 0F90                                   u3701 043C  
                                 u3621 03B4                                   u3541 032C  
                                 u4077 1794                                   u1790 1DCE  
                                 u1950 1828                                   u1870 18D6  
                                 u2590 0A84                                   u3470 1400  
                                 u2750 0FCE                                   u2670 0E4E  
                                 u3710 0450                                   u3630 03C8  
                                 u3550 0340                                   u1791 1DCA  
                                 u1951 1824                                   u1871 18D2  
                                 u4167 19B0                                   u4087 225A  
                                 u2591 0A80                                   u2495 08CC  
                                 u3471 13FC                                   u2751 0FCA  
                                 u2671 0E4A                                   u3711 044C  
                                 u3631 03C4                                   u3551 033C  
                                 u1880 163C                                   u1960 1FC2  
                                 u3480 1436                                   u2760 0FDC  
                                 u2680 0E5C                                   u3800 04F0  
                                 u3720 0460                                   u3640 03D8  
                                 u3560 0350                                   u1881 1638  
                                 u1961 1FBE                                   u4177 19DC  
                                 u4097 1AF2                                   u2761 0FD8  
                                 u2681 0E58                                   u3801 04EC  
                                 u3721 045C                                   u3641 03D4  
                                 u3561 034C                                   u1890 1664  
                                 u1970 1FEC                                   u1938 21F6  
                                 u3490 1464                                   u2690 0EB8  
                                 u3810 0500                                   u3730 0478  
                                 u3650 03E8                                   u3570 0360  
                                 u4187 16BE                                   u1891 1660  
                                 u1971 1FE8                                   u3491 1460  
                                 u2691 0EB4                                   u3811 04FC  
                                 u3731 0474                                   u3651 03E4  
                                 u3571 035C                                   u1980 1EB4  
                                 u3900 0598                                   u3820 0510  
                                 u3740 0488                                   u3660 03F8  
                                 u3580 0370                                   u4197 1944  
                                 u1981 1EB0                                   u3485 142A  
                                 u3901 0594                                   u3821 050C  
                                 u3741 0484                                   u3661 03F4  
                                 u3581 036C                                   u1990 1EDE  
                                 u3910 05B0                                   u3830 0520  
                                 u3750 0498                                   u3670 0410  
                                 u3590 0380                                   u1991 1EDA  
                                 u3911 05AC                                   u3831 051C  
                                 u3751 0494                                   u3671 040C  
                                 u3591 037C                                   u3920 05C0  
                                 u3840 0530                                   u3760 04A8  
                                 u3680 0420                                   u3921 05BC  
                                 u3841 052C                                   u3761 04A4  
                                 u3681 041C                                   u3930 05D0  
                                 u3850 0548                                   u3770 04B8  
                                 u3690 0430                                   u3931 05CC  
                                 u3851 0544                                   u3771 04B4  
                                 u3691 042C                                   u3940 05E0  
                                 u3860 0558                                   u3780 04C8  
                                 u3941 05DC                                   u3861 0554  
                                 u3781 04C4                                   u3950 05F0  
                                 u3870 0568                                   u3790 04E0  
                                 u3951 05EC                                   u3871 0564  
                                 u3791 04DC                                   i2l24 23C0  
                                 u3960 0600                                   u3880 0578  
                                 u3961 05FC                                   u3881 0574  
                                 u3970 0618                                   u3890 0588  
                                 u3971 0614                                   u3891 0584  
                                 u3980 0628                                   u3981 0624  
                                 u3990 0638                                   u3991 0634  
                                 i2l90 22CC                                   i2l93 22F2  
                                 i2l96 244A                                   _main 115C  
                   _YellowInstructions 1A90                                   fsr2h 000FDA  
                                 indf2 000FDF                                   fsr2l 000FD9  
                                 btemp 0057                                   _stop 187A  
       ??i2_init_colorclick_interrupts 0005                      main@initial_color 00CC  
                                 prodh 000FF4                                   prodl 000FF3  
                                 start 0058                   ?i2_color_writetoaddr 0003  
                      ___fldiv@new_exp 0028                 __end_of_color_read_Red 203E  
                      __end_of_HighISR 2362                           ___param_bank 000000  
                          _turnLeft135 1F3A                    ?_YellowInstructions 0027  
                          _turnRight90 1E86                       __end_of_LED_init 2402  
                        ___fltol@sign1 004D                                  ?_main 0001  
                      __end_of___fldiv 0E3C                        __end_of___flmul 0AA2  
                      __end_of___fltol 14F2                                  ?_stop 001C  
                      __end_of___lwdiv 1E28                                  i1l323 0048  
                                i2l102 2440                                  i2l105 2418  
                                i2l312 21C8                                  i2l315 23F4  
                                i2l331 235E                                  _TMR0H 000FD4  
                                _TMR0L 000FD3             __end_of_I2C_2_Master_Start 2438  
                 ??_YellowInstructions 002B             __end_of_I2C_2_Master_Write 240E  
                     _PinkInstructions 1B9C                     _int_threshold_high 0055  
                                main@b 00CA               __end_of_BlueInstructions 1A00  
                                tablat 000FF5                                  plusw2 000FDB  
                                ttemp5 0058                                  ttemp6 005B  
                                ttemp7 005F                                  status 000FD8  
                                wtemp8 0058                    detect_color@tempval 00B6  
                ??i2_color_writetoaddr 0004                __end_of_color_read_Blue 212E  
                _I2C_2_Master_RepStart 241A                   fullSpeedBackwards@mL 001C  
                 fullSpeedBackwards@mR 001E                        ?_color_read_Red 000D  
                      __initialization 220C                           __end_of_main 12B6  
                 __end_of_detect_color 0678                           __end_of_stop 194E  
                _LightBlueInstructions 1CA8                      ??_RedInstructions 002B  
  __end_of_interrupts_clear_colorclick 23DC         ?i2_interrupts_clear_colorclick 0001  
          _interrupts_clear_colorclick 23C2                                 ??_main 00C8  
                               ??_stop 0020                          __activetblptr 000000  
                         _turnRight135 1EE0                           ?_setMotorPWM 0016  
                               _CCPR1H 000FAA                                 _CCPR2H 000FA6  
                               _CCPR3H 000F25                                 _CCPR4H 000F21  
                               _RC0PPS 000E62                                 _RC4REG 000EE3  
                               _RE2PPS 000E74                                 _RD5PPS 000E6F  
                               _RC7PPS 000E69                                 i1l3515 0026  
                               _RE4PPS 000E76                                 _RD6PPS 000E70  
                               i1l3517 0036                                 i1l3519 0044  
                               i2l3241 21AA                                 i2l3233 217C  
                               i2l2531 22DC                                 i2l3243 21B4  
                               i2l3235 2186                                 i2l3245 21BE  
                               i2l3237 2196                                 i2l3239 21A0  
                               i2l2529 22CC                                 i2l3521 2340  
                               i2l2707 23A4                                 i2l3523 2350  
                               i2l3525 2356                                 i2l2591 2446  
                               i2l3527 235A                                 i2l2593 2438  
                               i2l2595 243C                                 i2l2589 2442  
                               i2l2597 2410                                 i2l2599 2414  
                               i2l3499 23DC                                 _RG6PPS 000E88  
                            ??_HighISR 0006               __end_of_color_click_init 227A  
                               _RX4PPS 000E15                                 _TX4REG 000EE4  
                     __end_of___xxtofl 0FF0                                 _LowISR 0018  
                        ??_Timer0_init 0009                           _CCPTMRS0bits 000FAD  
                               ___wmul 22F4                              ??___fldiv 001F  
                            ??___flmul 0038                              ??___fltol 00B2  
                            ??___lwdiv 0013                                 clear_0 222A  
                               isa$std 000001                           __pdataCOMRAM 0055  
                           _WhiteLight 244C                                 tblptrh 000FF7  
                               tblptrl 000FF6                                 tblptru 000FF8  
                               stop@mL 001C                                 stop@mR 001E  
                    ??_initDCmotorsPWM 000B             i2color_writetoaddr@address 0004  
                     __end_of_turnLeft 16CE                           ___xxtofl@arg 0013  
                         ___xxtofl@exp 0012                           ___xxtofl@val 0009  
                        ??_Update_RGBC 0016                             __accesstop 0060  
              __end_of__initialization 223C               __end_of_color_read_Clear 20DE  
             __end_of_color_read_Green 208E                 ?_I2C_2_Master_RepStart 0001  
                        ___rparam_used 000001                              ?_LED_init 0001  
                           ___fltol@f1 0049                       ?_color_read_Blue 000D  
                    _GreenInstructions 1D2E                        _Interrupts_init 231A  
                       __pcstackCOMRAM 0001                 ?_LightBlueInstructions 0027  
                   ?_GreenInstructions 0027                      detect_color@color 00C4  
                  __end_of_Timer0_init 2382                            MoveBuggy@mL 0030  
                          MoveBuggy@mR 0032                    OrangeInstructions@a 002D  
                  ??_GreenInstructions 002B                MoveBuggy@color_detected 002E  
         ??_init_colorclick_interrupts 000D                      __end_of_MoveBuggy 13EA  
                           __pbssBANK0 0060              __end_of_GreenInstructions 1DB4  
                           ??_LED_init 0009                                ?_LowISR 0001  
                    _color_writetoaddr 2382                           _T2CLKCONbits 000FBF  
                         ?_turnLeft135 0022                    __end_of_Update_RGBC 1E86  
                   ?_color_writetoaddr 000B                                ?___wmul 0009  
             __end_of_PinkInstructions 1C22                           ?_turnRight90 0022  
                  ??_color_writetoaddr 000C                                _INT1PPS 000DF1  
                            ?___xxtofl 0009                            ?_WhiteLight 0001  
                              _SP4BRGH 000EE6                                _SP4BRGL 000EE5  
                              _SSP2ADD 000ED6                                _SSP2BUF 000ED5  
                           _color_flag 00B1                           _detect_color 005C  
              __end_of_Interrupts_init 2340                      ?_BlueInstructions 0027  
               color_writetoaddr@value 000B                       ??_color_read_Red 000F  
                              _HighISR 0008              __end_of_color_writetoaddr 23A2  
                   ??_BlueInstructions 002B                        _RedInstructions 1B16  
                   _I2C_2_Master_Start 242E                    i2_I2C_2_Master_Idle 22CC  
                   _I2C_2_Master_Write 2402                                __Hparam 0000  
                  i2_I2C_2_Master_Stop 2438                                __Lparam 0000  
                    color_read_Red@tmp 0012                            _Timer0_init 2362  
                  GreenInstructions@mL 0027                    GreenInstructions@mR 0029  
           __end_of_fullSpeedBackwards 187A                                ___fldiv 0AA2  
                              ___flmul 0678                                ___fltol 13EA  
                  ?_I2C_2_Master_Start 0001                           turnLeft135@a 0026  
                              ___lwdiv 1DB4                    ?_I2C_2_Master_Write 0001  
                         turnLeft90@mL 0022                           turnLeft90@mR 0024  
                              __pcinit 220C                                __ramtop 0E00  
                            ?_turnLeft 001C                                __ptext0 115C  
                              __ptext1 1A00                                __ptext2 16CE  
                              __ptext3 005C                                __ptext4 0E3C  
                              __ptext5 13EA                                __ptext6 0678  
                              __ptext7 0AA2                                __ptext8 2246  
                              __ptext9 227A                   ?i2_I2C_2_Master_Idle 0001  
 __end_ofi2_init_colorclick_interrupts 21CA           i2_init_colorclick_interrupts 217C  
                            _T2CONbits 000FBD                             ??___xxtofl 000D  
                 ?i2_I2C_2_Master_Stop 0001                              _T2HLTbits 000FBE  
                        _RxBufWriteCnt 0054                                _tmr_ovf 00B0  
                 ??_I2C_2_Master_Start 000A                   ??_I2C_2_Master_Write 000A  
                       __pintcode_body 2340                   end_of_initialization 223C  
          __end_ofi2_color_writetoaddr 23C2                      RedInstructions@mL 0027  
                   main@color_detected 00CB                      RedInstructions@mR 0029  
                              int_func 2340                            _Update_RGBC 1E28  
                    ?_color_click_init 0001                           turnRight90@a 0026  
           __end_of_OrangeInstructions 1CA8                     ??_color_click_init 000D  
                              postdec2 000FDD                                postinc0 000FEE  
                              postinc2 000FDE                        _initDCmotorsPWM 1A00  
                           ??_turnLeft 0020                     setMotorPWM@negDuty 001B  
                ??i2_I2C_2_Master_Idle 0001                      __end_of_turnRight 15E0  
                ??i2_I2C_2_Master_Stop 0002                          ___xxtofl@sign 0011  
                  YellowInstructions@a 002D                              _TRISAbits 000F81  
                   setMotorPWM@posDuty 001A                              _TRISBbits 000F82  
                            _TRISCbits 000F83                              _TRISDbits 000F84  
   __end_of_init_colorclick_interrupts 217C          ?i2_init_colorclick_interrupts 0001  
           _init_colorclick_interrupts 212E                              _TRISEbits 000F85  
                            _TRISFbits 000F86                              _TRISGbits 000F87  
                            _TRISHbits 000F88                            ___fldiv@grs 002A  
                          ___fldiv@rem 0023                     PinkInstructions@mL 0027  
                   PinkInstructions@mR 0029                       fullSpeedAhead@mL 001C  
                     fullSpeedAhead@mR 001E                __end_of_RedInstructions 1B9C  
             color_writetoaddr@address 000C                ??_I2C_2_Master_RepStart 000A  
                     ?_Interrupts_init 0001                            ___flmul@grs 003D  
                          _CCP1CONbits 000FAB                      ?_color_read_Clear 000D  
                         _EUSART4RXbuf 009C                           _EUSART4TXbuf 0060  
                          _CCP2CONbits 000FA7                      ?_color_read_Green 000D  
                          _CCP3CONbits 000F26                            _CCP4CONbits 000F22  
              ??_LightBlueInstructions 002B                             main@motorL 00D4  
                           main@motorR 00DD                     ??_color_read_Clear 000F  
                   ??_color_read_Green 000F                             _turnLeft90 1F94  
                       __end_of_LowISR 0058                         _fullSpeedAhead 16CE  
                       __end_of___wmul 231A                          __pidataCOMRAM 2454  
                   detect_color@dist_B 00C7                     detect_color@dist_G 00C6  
                   detect_color@dist_R 00C5                      _int_threshold_low 004F  
                  color_read_Clear@tmp 0012                    start_initialization 220C  
                        _TxBufWriteCnt 0052                   OrangeInstructions@mL 0027  
                 OrangeInstructions@mR 0029                              _MoveBuggy 12B6  
                  color_read_Green@tmp 0012                               ??_LowISR 0006  
              __end_of_initDCmotorsPWM 1A90                 __end_of_fullSpeedAhead 17A4  
                             ??___wmul 000D          i2I2C_2_Master_Write@data_byte 0002  
                    ?_PinkInstructions 0027                     Update_RGBC@tempval 0014  
                   ??_PinkInstructions 002B           __end_ofi2_I2C_2_Master_Start 244C  
         __end_ofi2_I2C_2_Master_Write 241A                              ___fldiv@a 001B  
                            ___fldiv@b 0017                              ___flmul@a 0034  
                            ___flmul@b 0030                            __pbssCOMRAM 004F  
                         ??_WhiteLight 0009                          __pcstackBANK0 00B2  
                     ?_RedInstructions 0027                               ?_HighISR 0001  
                           ?_MoveBuggy 002E                       ___lwdiv@dividend 000F  
                         ?_Timer0_init 0001                            ?_turnLeft90 0022  
                      ?_fullSpeedAhead 001C                     BlueInstructions@mL 0027  
                   BlueInstructions@mR 0029                              __pintcode 0008  
                   __end_of_WhiteLight 2454                               ?___fldiv 0017  
                             ?___flmul 0030                               ?___fltol 0049  
                             ?___lwdiv 000F                            __pintcodelo 0018  
         ?_interrupts_clear_colorclick 0001                   I2C_2_Master_Read@ack 000B  
                 I2C_2_Master_Read@tmp 000C                          ?_turnRight135 0022  
                    _I2C_2_Master_Idle 22A4                     _fullSpeedBackwards 17A4  
                    _I2C_2_Master_Init 227A                      _I2C_2_Master_Read 21CA  
                    _I2C_2_Master_Stop 2424                           _RxBufReadCnt 0053  
                   GreenInstructions@a 002D                     ?_I2C_2_Master_Idle 0001  
                   ?_I2C_2_Master_Init 0001                     ?_I2C_2_Master_Read 0001  
                        ??_setMotorPWM 0018                     ?_I2C_2_Master_Stop 0001  
                     ___lwdiv@quotient 0013                            turnLeft90@a 0026  
             initDCmotorsPWM@PWMperiod 0009                LightBlueInstructions@mL 0027  
              LightBlueInstructions@mR 0029                    ?_fullSpeedBackwards 001C  
                  ??_I2C_2_Master_Idle 0009                    ??_I2C_2_Master_Init 0009  
                         ?_Update_RGBC 0014                    ??_I2C_2_Master_Read 000A  
                       ___wmul@product 000D                               _LATAbits 000F79  
                  ??_I2C_2_Master_Stop 000A                               _LATCbits 000F7B  
                             _LATEbits 000F7D                               _LATFbits 000F7E  
                             _LATGbits 000F7F                               _LATHbits 000F80  
                             _IPR0bits 000E1F                               _PIE0bits 000E29  
                             _LED_init 23F6                       RedInstructions@a 002D  
                             _PIE4bits 000E2D                               i1u338_20 0036  
                             i1u338_21 0032                            turnRight@mL 001C  
                          turnRight@mR 001E                               i2u422_47 218C  
                             _PIR0bits 000E33                               i2u184_40 22DC  
                             i2u184_41 22D8                               i2u185_40 22F2  
                             i2u185_41 22EE                               i2u339_40 2350  
                             i2u339_41 234C                               _PIR4bits 000E37  
                     ?_initDCmotorsPWM 0009                               _SSP2CON2 000EDA  
                             _SSP2STAT 000ED8                   ??_fullSpeedBackwards 0020  
                   _OrangeInstructions 1C22                      PinkInstructions@a 002D  
            __end_of_I2C_2_Master_Idle 22CC              __end_of_I2C_2_Master_Init 22A4  
            __end_of_I2C_2_Master_Read 220C                      ___wmul@multiplier 0009  
                       ??_turnRight135 0026              __end_of_I2C_2_Master_Stop 242E  
                         setMotorPWM@m 0016            I2C_2_Master_Write@data_byte 000A  
        ??_interrupts_clear_colorclick 000E             __end_of_YellowInstructions 1B16  
                    ??_color_read_Blue 000F                    ?_OrangeInstructions 0027  
                         _TxBufReadCnt 0051            ?_init_colorclick_interrupts 0001  
             i2color_writetoaddr@value 0003                              _turnRight 14F2  
        __end_of_I2C_2_Master_RepStart 2424                     color_read_Blue@tmp 0012  
                  __end_of_setMotorPWM 115C                            ??_MoveBuggy 0034  
                 i2_I2C_2_Master_Start 2442                   i2_I2C_2_Master_Write 240E  
                             __Hrparam 0000                   ??_OrangeInstructions 002B  
                             __Lrparam 0000          __end_of_LightBlueInstructions 1D2E  
          __end_ofi2_I2C_2_Master_Idle 22F4            __end_ofi2_I2C_2_Master_Stop 2442  
                       turnRight135@mL 0022                         turnRight135@mR 0024  
                        turnLeft135@mL 0022                          turnLeft135@mR 0024  
                           _ANSELBbits 000E9A                             _ANSELDbits 000EA7  
                             ___xxtofl 0E3C                             _T0CON0bits 000FD5  
                           _T0CON1bits 000FD6                        ___lwdiv@divisor 0011  
                    BlueInstructions@a 002D                        ___lwdiv@counter 0015  
                           ?_turnRight 001C                               __ptext10 244C  
                             __ptext11 1E28                               __ptext20 1A90  
                             __ptext12 1FEE                               __ptext21 1B16  
                             __ptext13 203E                               __ptext30 194E  
                             __ptext22 1E86                               __ptext14 208E  
                             __ptext31 1F94                               __ptext23 1B9C  
                             __ptext15 20DE                               __ptext40 23C2  
                             __ptext32 15E0                               __ptext24 1C22  
                             __ptext16 241A                               __ptext41 212E  
                             __ptext33 187A                               __ptext25 1EE0  
                             __ptext17 21CA                               __ptext50 217C  
                             __ptext42 2382                               __ptext34 17A4  
                             __ptext26 14F2                               __ptext18 2362  
                             __ptext51 23A2                               __ptext43 2402  
                             __ptext35 0FF0                               __ptext27 1CA8  
                             __ptext19 12B6                               __ptext52 240E  
                             __ptext44 2424                               __ptext36 22F4  
                             __ptext28 1F3A                               __ptext53 2438  
                             __ptext45 242E                               __ptext37 1DB4  
                             __ptext29 1D2E                               __ptext54 2442  
                             __ptext46 22A4                               __ptext38 23F6  
                             __ptext55 22CC                               __ptext39 231A  
                             __ptext49 23DC                           _SSP2CON1bits 000ED9  
                         _SSP2CON2bits 000EDA        ??i2_interrupts_clear_colorclick 0006  
               LightBlueInstructions@a 002D                             turnLeft@mL 001C  
                           turnLeft@mR 001E                  ?i2_I2C_2_Master_Start 0001  
                ?i2_I2C_2_Master_Write 0001                          ??_turnLeft135 0026  
                             isa$xinst 000000                             _RC4STAbits 000EE7  
                             int$flags 0057                          ??_turnRight90 0026  
                     _BlueInstructions 194E                               _turnLeft 15E0  
                           _INTCONbits 000FF2                            _setMotorPWM 0FF0  
                        ?_detect_color 00B6                          turnRight135@a 0026  
                             intlevel1 0000                               intlevel2 0000  
                        turnRight90@mL 0022                          turnRight90@mR 0024  
                     ??_fullSpeedAhead 0020                   __end_of_turnRight135 1F3A  
                         ??_turnLeft90 0026                       _color_click_init 2246  
                  __end_of_turnLeft135 1F94                             _SSP2DATPPS 000E1D  
                           _SSP2CLKPPS 000E1C                    __end_of_turnRight90 1EE0  
                       ??_detect_color 00B8                            ??_turnRight 0020  
                   __end_of_turnLeft90 1FEE                             _TX4STAbits 000EE8  
               ??i2_I2C_2_Master_Start 0002                 ??i2_I2C_2_Master_Write 0002  
                 YellowInstructions@mL 0027                   YellowInstructions@mR 0029  
__end_ofi2_interrupts_clear_colorclick 23F6          i2_interrupts_clear_colorclick 23DC  
